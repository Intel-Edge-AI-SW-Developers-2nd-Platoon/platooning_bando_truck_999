
pacu-interface-ethernet.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006a8c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002b0  08006c3c  08006c3c  00016c3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006eec  08006eec  0002009c  2**0
                  CONTENTS
  4 .ARM          00000008  08006eec  08006eec  00016eec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006ef4  08006ef4  0002009c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006ef4  08006ef4  00016ef4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006ef8  08006ef8  00016ef8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000009c  20000000  08006efc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002009c  2**0
                  CONTENTS
 10 .bss          00000ce8  2000009c  2000009c  0002009c  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  20000d84  20000d84  0002009c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002009c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  000200cc  2**0
                  CONTENTS, READONLY
 14 .debug_info   00011d27  00000000  00000000  0002010f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00002ca3  00000000  00000000  00031e36  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000de8  00000000  00000000  00034ae0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 00000a98  00000000  00000000  000358c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00026354  00000000  00000000  00036360  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00011c0b  00000000  00000000  0005c6b4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000dce96  00000000  00000000  0006e2bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000044a8  00000000  00000000  0014b158  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000093  00000000  00000000  0014f600  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000009c 	.word	0x2000009c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08006c24 	.word	0x08006c24

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000a0 	.word	0x200000a0
 80001ec:	08006c24 	.word	0x08006c24

080001f0 <strcmp>:
 80001f0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80001f4:	f811 3b01 	ldrb.w	r3, [r1], #1
 80001f8:	2a01      	cmp	r2, #1
 80001fa:	bf28      	it	cs
 80001fc:	429a      	cmpcs	r2, r3
 80001fe:	d0f7      	beq.n	80001f0 <strcmp>
 8000200:	1ad0      	subs	r0, r2, r3
 8000202:	4770      	bx	lr

08000204 <strlen>:
 8000204:	4603      	mov	r3, r0
 8000206:	f813 2b01 	ldrb.w	r2, [r3], #1
 800020a:	2a00      	cmp	r2, #0
 800020c:	d1fb      	bne.n	8000206 <strlen+0x2>
 800020e:	1a18      	subs	r0, r3, r0
 8000210:	3801      	subs	r0, #1
 8000212:	4770      	bx	lr
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b970 	b.w	80005b8 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9e08      	ldr	r6, [sp, #32]
 80002f6:	460d      	mov	r5, r1
 80002f8:	4604      	mov	r4, r0
 80002fa:	460f      	mov	r7, r1
 80002fc:	2b00      	cmp	r3, #0
 80002fe:	d14a      	bne.n	8000396 <__udivmoddi4+0xa6>
 8000300:	428a      	cmp	r2, r1
 8000302:	4694      	mov	ip, r2
 8000304:	d965      	bls.n	80003d2 <__udivmoddi4+0xe2>
 8000306:	fab2 f382 	clz	r3, r2
 800030a:	b143      	cbz	r3, 800031e <__udivmoddi4+0x2e>
 800030c:	fa02 fc03 	lsl.w	ip, r2, r3
 8000310:	f1c3 0220 	rsb	r2, r3, #32
 8000314:	409f      	lsls	r7, r3
 8000316:	fa20 f202 	lsr.w	r2, r0, r2
 800031a:	4317      	orrs	r7, r2
 800031c:	409c      	lsls	r4, r3
 800031e:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000322:	fa1f f58c 	uxth.w	r5, ip
 8000326:	fbb7 f1fe 	udiv	r1, r7, lr
 800032a:	0c22      	lsrs	r2, r4, #16
 800032c:	fb0e 7711 	mls	r7, lr, r1, r7
 8000330:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000334:	fb01 f005 	mul.w	r0, r1, r5
 8000338:	4290      	cmp	r0, r2
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x62>
 800033c:	eb1c 0202 	adds.w	r2, ip, r2
 8000340:	f101 37ff 	add.w	r7, r1, #4294967295
 8000344:	f080 811c 	bcs.w	8000580 <__udivmoddi4+0x290>
 8000348:	4290      	cmp	r0, r2
 800034a:	f240 8119 	bls.w	8000580 <__udivmoddi4+0x290>
 800034e:	3902      	subs	r1, #2
 8000350:	4462      	add	r2, ip
 8000352:	1a12      	subs	r2, r2, r0
 8000354:	b2a4      	uxth	r4, r4
 8000356:	fbb2 f0fe 	udiv	r0, r2, lr
 800035a:	fb0e 2210 	mls	r2, lr, r0, r2
 800035e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000362:	fb00 f505 	mul.w	r5, r0, r5
 8000366:	42a5      	cmp	r5, r4
 8000368:	d90a      	bls.n	8000380 <__udivmoddi4+0x90>
 800036a:	eb1c 0404 	adds.w	r4, ip, r4
 800036e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000372:	f080 8107 	bcs.w	8000584 <__udivmoddi4+0x294>
 8000376:	42a5      	cmp	r5, r4
 8000378:	f240 8104 	bls.w	8000584 <__udivmoddi4+0x294>
 800037c:	4464      	add	r4, ip
 800037e:	3802      	subs	r0, #2
 8000380:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000384:	1b64      	subs	r4, r4, r5
 8000386:	2100      	movs	r1, #0
 8000388:	b11e      	cbz	r6, 8000392 <__udivmoddi4+0xa2>
 800038a:	40dc      	lsrs	r4, r3
 800038c:	2300      	movs	r3, #0
 800038e:	e9c6 4300 	strd	r4, r3, [r6]
 8000392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000396:	428b      	cmp	r3, r1
 8000398:	d908      	bls.n	80003ac <__udivmoddi4+0xbc>
 800039a:	2e00      	cmp	r6, #0
 800039c:	f000 80ed 	beq.w	800057a <__udivmoddi4+0x28a>
 80003a0:	2100      	movs	r1, #0
 80003a2:	e9c6 0500 	strd	r0, r5, [r6]
 80003a6:	4608      	mov	r0, r1
 80003a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003ac:	fab3 f183 	clz	r1, r3
 80003b0:	2900      	cmp	r1, #0
 80003b2:	d149      	bne.n	8000448 <__udivmoddi4+0x158>
 80003b4:	42ab      	cmp	r3, r5
 80003b6:	d302      	bcc.n	80003be <__udivmoddi4+0xce>
 80003b8:	4282      	cmp	r2, r0
 80003ba:	f200 80f8 	bhi.w	80005ae <__udivmoddi4+0x2be>
 80003be:	1a84      	subs	r4, r0, r2
 80003c0:	eb65 0203 	sbc.w	r2, r5, r3
 80003c4:	2001      	movs	r0, #1
 80003c6:	4617      	mov	r7, r2
 80003c8:	2e00      	cmp	r6, #0
 80003ca:	d0e2      	beq.n	8000392 <__udivmoddi4+0xa2>
 80003cc:	e9c6 4700 	strd	r4, r7, [r6]
 80003d0:	e7df      	b.n	8000392 <__udivmoddi4+0xa2>
 80003d2:	b902      	cbnz	r2, 80003d6 <__udivmoddi4+0xe6>
 80003d4:	deff      	udf	#255	; 0xff
 80003d6:	fab2 f382 	clz	r3, r2
 80003da:	2b00      	cmp	r3, #0
 80003dc:	f040 8090 	bne.w	8000500 <__udivmoddi4+0x210>
 80003e0:	1a8a      	subs	r2, r1, r2
 80003e2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003e6:	fa1f fe8c 	uxth.w	lr, ip
 80003ea:	2101      	movs	r1, #1
 80003ec:	fbb2 f5f7 	udiv	r5, r2, r7
 80003f0:	fb07 2015 	mls	r0, r7, r5, r2
 80003f4:	0c22      	lsrs	r2, r4, #16
 80003f6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003fa:	fb0e f005 	mul.w	r0, lr, r5
 80003fe:	4290      	cmp	r0, r2
 8000400:	d908      	bls.n	8000414 <__udivmoddi4+0x124>
 8000402:	eb1c 0202 	adds.w	r2, ip, r2
 8000406:	f105 38ff 	add.w	r8, r5, #4294967295
 800040a:	d202      	bcs.n	8000412 <__udivmoddi4+0x122>
 800040c:	4290      	cmp	r0, r2
 800040e:	f200 80cb 	bhi.w	80005a8 <__udivmoddi4+0x2b8>
 8000412:	4645      	mov	r5, r8
 8000414:	1a12      	subs	r2, r2, r0
 8000416:	b2a4      	uxth	r4, r4
 8000418:	fbb2 f0f7 	udiv	r0, r2, r7
 800041c:	fb07 2210 	mls	r2, r7, r0, r2
 8000420:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000424:	fb0e fe00 	mul.w	lr, lr, r0
 8000428:	45a6      	cmp	lr, r4
 800042a:	d908      	bls.n	800043e <__udivmoddi4+0x14e>
 800042c:	eb1c 0404 	adds.w	r4, ip, r4
 8000430:	f100 32ff 	add.w	r2, r0, #4294967295
 8000434:	d202      	bcs.n	800043c <__udivmoddi4+0x14c>
 8000436:	45a6      	cmp	lr, r4
 8000438:	f200 80bb 	bhi.w	80005b2 <__udivmoddi4+0x2c2>
 800043c:	4610      	mov	r0, r2
 800043e:	eba4 040e 	sub.w	r4, r4, lr
 8000442:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000446:	e79f      	b.n	8000388 <__udivmoddi4+0x98>
 8000448:	f1c1 0720 	rsb	r7, r1, #32
 800044c:	408b      	lsls	r3, r1
 800044e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000452:	ea4c 0c03 	orr.w	ip, ip, r3
 8000456:	fa05 f401 	lsl.w	r4, r5, r1
 800045a:	fa20 f307 	lsr.w	r3, r0, r7
 800045e:	40fd      	lsrs	r5, r7
 8000460:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000464:	4323      	orrs	r3, r4
 8000466:	fbb5 f8f9 	udiv	r8, r5, r9
 800046a:	fa1f fe8c 	uxth.w	lr, ip
 800046e:	fb09 5518 	mls	r5, r9, r8, r5
 8000472:	0c1c      	lsrs	r4, r3, #16
 8000474:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000478:	fb08 f50e 	mul.w	r5, r8, lr
 800047c:	42a5      	cmp	r5, r4
 800047e:	fa02 f201 	lsl.w	r2, r2, r1
 8000482:	fa00 f001 	lsl.w	r0, r0, r1
 8000486:	d90b      	bls.n	80004a0 <__udivmoddi4+0x1b0>
 8000488:	eb1c 0404 	adds.w	r4, ip, r4
 800048c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000490:	f080 8088 	bcs.w	80005a4 <__udivmoddi4+0x2b4>
 8000494:	42a5      	cmp	r5, r4
 8000496:	f240 8085 	bls.w	80005a4 <__udivmoddi4+0x2b4>
 800049a:	f1a8 0802 	sub.w	r8, r8, #2
 800049e:	4464      	add	r4, ip
 80004a0:	1b64      	subs	r4, r4, r5
 80004a2:	b29d      	uxth	r5, r3
 80004a4:	fbb4 f3f9 	udiv	r3, r4, r9
 80004a8:	fb09 4413 	mls	r4, r9, r3, r4
 80004ac:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 80004b0:	fb03 fe0e 	mul.w	lr, r3, lr
 80004b4:	45a6      	cmp	lr, r4
 80004b6:	d908      	bls.n	80004ca <__udivmoddi4+0x1da>
 80004b8:	eb1c 0404 	adds.w	r4, ip, r4
 80004bc:	f103 35ff 	add.w	r5, r3, #4294967295
 80004c0:	d26c      	bcs.n	800059c <__udivmoddi4+0x2ac>
 80004c2:	45a6      	cmp	lr, r4
 80004c4:	d96a      	bls.n	800059c <__udivmoddi4+0x2ac>
 80004c6:	3b02      	subs	r3, #2
 80004c8:	4464      	add	r4, ip
 80004ca:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 80004ce:	fba3 9502 	umull	r9, r5, r3, r2
 80004d2:	eba4 040e 	sub.w	r4, r4, lr
 80004d6:	42ac      	cmp	r4, r5
 80004d8:	46c8      	mov	r8, r9
 80004da:	46ae      	mov	lr, r5
 80004dc:	d356      	bcc.n	800058c <__udivmoddi4+0x29c>
 80004de:	d053      	beq.n	8000588 <__udivmoddi4+0x298>
 80004e0:	b156      	cbz	r6, 80004f8 <__udivmoddi4+0x208>
 80004e2:	ebb0 0208 	subs.w	r2, r0, r8
 80004e6:	eb64 040e 	sbc.w	r4, r4, lr
 80004ea:	fa04 f707 	lsl.w	r7, r4, r7
 80004ee:	40ca      	lsrs	r2, r1
 80004f0:	40cc      	lsrs	r4, r1
 80004f2:	4317      	orrs	r7, r2
 80004f4:	e9c6 7400 	strd	r7, r4, [r6]
 80004f8:	4618      	mov	r0, r3
 80004fa:	2100      	movs	r1, #0
 80004fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000500:	f1c3 0120 	rsb	r1, r3, #32
 8000504:	fa02 fc03 	lsl.w	ip, r2, r3
 8000508:	fa20 f201 	lsr.w	r2, r0, r1
 800050c:	fa25 f101 	lsr.w	r1, r5, r1
 8000510:	409d      	lsls	r5, r3
 8000512:	432a      	orrs	r2, r5
 8000514:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000518:	fa1f fe8c 	uxth.w	lr, ip
 800051c:	fbb1 f0f7 	udiv	r0, r1, r7
 8000520:	fb07 1510 	mls	r5, r7, r0, r1
 8000524:	0c11      	lsrs	r1, r2, #16
 8000526:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 800052a:	fb00 f50e 	mul.w	r5, r0, lr
 800052e:	428d      	cmp	r5, r1
 8000530:	fa04 f403 	lsl.w	r4, r4, r3
 8000534:	d908      	bls.n	8000548 <__udivmoddi4+0x258>
 8000536:	eb1c 0101 	adds.w	r1, ip, r1
 800053a:	f100 38ff 	add.w	r8, r0, #4294967295
 800053e:	d22f      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000540:	428d      	cmp	r5, r1
 8000542:	d92d      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000544:	3802      	subs	r0, #2
 8000546:	4461      	add	r1, ip
 8000548:	1b49      	subs	r1, r1, r5
 800054a:	b292      	uxth	r2, r2
 800054c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000550:	fb07 1115 	mls	r1, r7, r5, r1
 8000554:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000558:	fb05 f10e 	mul.w	r1, r5, lr
 800055c:	4291      	cmp	r1, r2
 800055e:	d908      	bls.n	8000572 <__udivmoddi4+0x282>
 8000560:	eb1c 0202 	adds.w	r2, ip, r2
 8000564:	f105 38ff 	add.w	r8, r5, #4294967295
 8000568:	d216      	bcs.n	8000598 <__udivmoddi4+0x2a8>
 800056a:	4291      	cmp	r1, r2
 800056c:	d914      	bls.n	8000598 <__udivmoddi4+0x2a8>
 800056e:	3d02      	subs	r5, #2
 8000570:	4462      	add	r2, ip
 8000572:	1a52      	subs	r2, r2, r1
 8000574:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000578:	e738      	b.n	80003ec <__udivmoddi4+0xfc>
 800057a:	4631      	mov	r1, r6
 800057c:	4630      	mov	r0, r6
 800057e:	e708      	b.n	8000392 <__udivmoddi4+0xa2>
 8000580:	4639      	mov	r1, r7
 8000582:	e6e6      	b.n	8000352 <__udivmoddi4+0x62>
 8000584:	4610      	mov	r0, r2
 8000586:	e6fb      	b.n	8000380 <__udivmoddi4+0x90>
 8000588:	4548      	cmp	r0, r9
 800058a:	d2a9      	bcs.n	80004e0 <__udivmoddi4+0x1f0>
 800058c:	ebb9 0802 	subs.w	r8, r9, r2
 8000590:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000594:	3b01      	subs	r3, #1
 8000596:	e7a3      	b.n	80004e0 <__udivmoddi4+0x1f0>
 8000598:	4645      	mov	r5, r8
 800059a:	e7ea      	b.n	8000572 <__udivmoddi4+0x282>
 800059c:	462b      	mov	r3, r5
 800059e:	e794      	b.n	80004ca <__udivmoddi4+0x1da>
 80005a0:	4640      	mov	r0, r8
 80005a2:	e7d1      	b.n	8000548 <__udivmoddi4+0x258>
 80005a4:	46d0      	mov	r8, sl
 80005a6:	e77b      	b.n	80004a0 <__udivmoddi4+0x1b0>
 80005a8:	3d02      	subs	r5, #2
 80005aa:	4462      	add	r2, ip
 80005ac:	e732      	b.n	8000414 <__udivmoddi4+0x124>
 80005ae:	4608      	mov	r0, r1
 80005b0:	e70a      	b.n	80003c8 <__udivmoddi4+0xd8>
 80005b2:	4464      	add	r4, ip
 80005b4:	3802      	subs	r0, #2
 80005b6:	e742      	b.n	800043e <__udivmoddi4+0x14e>

080005b8 <__aeabi_idiv0>:
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop

080005bc <application_init>:
    {0, 1000,    proc_1s, false},
    {0,    0,       NULL, false}
};
*/
void application_init(void)
{
 80005bc:	b580      	push	{r7, lr}
 80005be:	af00      	add	r7, sp, #0
	HAL_Delay(500);
 80005c0:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 80005c4:	f001 fb7a 	bl	8001cbc <HAL_Delay>

#if DEBUG
printf("System start....\r\n");
 80005c8:	4802      	ldr	r0, [pc, #8]	; (80005d4 <application_init+0x18>)
 80005ca:	f005 fa0b 	bl	80059e4 <puts>
#endif
}
 80005ce:	bf00      	nop
 80005d0:	bd80      	pop	{r7, pc}
 80005d2:	bf00      	nop
 80005d4:	08006c3c 	.word	0x08006c3c

080005d8 <application>:

void application(void)
{
 80005d8:	b580      	push	{r7, lr}
 80005da:	af00      	add	r7, sp, #0
	application_init();
 80005dc:	f7ff ffee 	bl	80005bc <application_init>
	uart_init();
 80005e0:	f001 f9e2 	bl	80019a8 <uart_init>
	cli_init();
 80005e4:	f000 fa1a 	bl	8000a1c <cli_init>
	eth_init();
 80005e8:	f000 fb22 	bl	8000c30 <eth_init>

	while (1) {
		uart_proc();
 80005ec:	f001 fa1a 	bl	8001a24 <uart_proc>
 80005f0:	e7fc      	b.n	80005ec <application+0x14>
	...

080005f4 <ch9121_set_conf>:
/******************************************************************************
function:	ch9121_set_conf
parameter:
Info:  Set ch9121 configuration
******************************************************************************/
void ch9121_set_conf(void) {
 80005f4:	b580      	push	{r7, lr}
 80005f6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(RST1_GPIO_Port, RST1_Pin, GPIO_PIN_SET);
 80005f8:	2201      	movs	r2, #1
 80005fa:	2104      	movs	r1, #4
 80005fc:	4821      	ldr	r0, [pc, #132]	; (8000684 <ch9121_set_conf+0x90>)
 80005fe:	f002 fd69 	bl	80030d4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(CFG0_GPIO_Port, CFG0_Pin, GPIO_PIN_RESET);
 8000602:	2200      	movs	r2, #0
 8000604:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000608:	481f      	ldr	r0, [pc, #124]	; (8000688 <ch9121_set_conf+0x94>)
 800060a:	f002 fd63 	bl	80030d4 <HAL_GPIO_WritePin>
	HAL_Delay(100);
 800060e:	2064      	movs	r0, #100	; 0x64
 8000610:	f001 fb54 	bl	8001cbc <HAL_Delay>

	ch9121_send_4_bytes(CH9121_MODE, MODE1); 						// Mode
 8000614:	4b1d      	ldr	r3, [pc, #116]	; (800068c <ch9121_set_conf+0x98>)
 8000616:	781b      	ldrb	r3, [r3, #0]
 8000618:	2110      	movs	r1, #16
 800061a:	4618      	mov	r0, r3
 800061c:	f000 f848 	bl	80006b0 <ch9121_send_4_bytes>
	ch9121_send_7_bytes(CH9121_LOCAL_IP, LOCAL_IP); 				// LOCAL IP
 8000620:	2111      	movs	r1, #17
 8000622:	481b      	ldr	r0, [pc, #108]	; (8000690 <ch9121_set_conf+0x9c>)
 8000624:	f000 f8f2 	bl	800080c <ch9121_send_7_bytes>
	ch9121_send_7_bytes(CH9121_SUBNET_MASK, SUBNET_MASK); 			// SUBNET MASK
 8000628:	2112      	movs	r1, #18
 800062a:	481a      	ldr	r0, [pc, #104]	; (8000694 <ch9121_set_conf+0xa0>)
 800062c:	f000 f8ee 	bl	800080c <ch9121_send_7_bytes>
	ch9121_send_7_bytes(CH9121_GATEWAY, GATEWAY); 					// GATEWAY
 8000630:	2113      	movs	r1, #19
 8000632:	4819      	ldr	r0, [pc, #100]	; (8000698 <ch9121_set_conf+0xa4>)
 8000634:	f000 f8ea 	bl	800080c <ch9121_send_7_bytes>
	ch9121_send_7_bytes(CH9121_TARGET_IP, TARGET_IP1); 				// TARGET IP
 8000638:	2115      	movs	r1, #21
 800063a:	4818      	ldr	r0, [pc, #96]	; (800069c <ch9121_set_conf+0xa8>)
 800063c:	f000 f8e6 	bl	800080c <ch9121_send_7_bytes>
	ch9121_send_4_bytes(CH9121_RANDOM_PORT, PORT_RANDOM_ENABLE1); 	// Random port on-off
 8000640:	4b17      	ldr	r3, [pc, #92]	; (80006a0 <ch9121_set_conf+0xac>)
 8000642:	781b      	ldrb	r3, [r3, #0]
 8000644:	2117      	movs	r1, #23
 8000646:	4618      	mov	r0, r3
 8000648:	f000 f832 	bl	80006b0 <ch9121_send_4_bytes>
	ch9121_send_5_bytes(CH9121_PORT1, LOCAL_PORT1);               	// Local port
 800064c:	4b15      	ldr	r3, [pc, #84]	; (80006a4 <ch9121_set_conf+0xb0>)
 800064e:	881b      	ldrh	r3, [r3, #0]
 8000650:	2114      	movs	r1, #20
 8000652:	4618      	mov	r0, r3
 8000654:	f000 f87c 	bl	8000750 <ch9121_send_5_bytes>
	ch9121_send_5_bytes(CH9121_TARGET_PORT, TARGET_PORT1); 			// Target Port
 8000658:	4b13      	ldr	r3, [pc, #76]	; (80006a8 <ch9121_set_conf+0xb4>)
 800065a:	881b      	ldrh	r3, [r3, #0]
 800065c:	2116      	movs	r1, #22
 800065e:	4618      	mov	r0, r3
 8000660:	f000 f876 	bl	8000750 <ch9121_send_5_bytes>
	ch9121_send_baud(CH9121_BAUD_RATE, UART1_BAUD1); 				// Port 1 baud rate
 8000664:	4b11      	ldr	r3, [pc, #68]	; (80006ac <ch9121_set_conf+0xb8>)
 8000666:	681b      	ldr	r3, [r3, #0]
 8000668:	2121      	movs	r1, #33	; 0x21
 800066a:	4618      	mov	r0, r3
 800066c:	f000 f922 	bl	80008b4 <ch9121_send_baud>
	ch9121_update_conf();
 8000670:	f000 f984 	bl	800097c <ch9121_update_conf>

	HAL_GPIO_WritePin(CFG0_GPIO_Port, CFG0_Pin, GPIO_PIN_SET);
 8000674:	2201      	movs	r2, #1
 8000676:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800067a:	4803      	ldr	r0, [pc, #12]	; (8000688 <ch9121_set_conf+0x94>)
 800067c:	f002 fd2a 	bl	80030d4 <HAL_GPIO_WritePin>
}
 8000680:	bf00      	nop
 8000682:	bd80      	pop	{r7, pc}
 8000684:	40020c00 	.word	0x40020c00
 8000688:	40020800 	.word	0x40020800
 800068c:	20000000 	.word	0x20000000
 8000690:	20000004 	.word	0x20000004
 8000694:	2000000c 	.word	0x2000000c
 8000698:	20000008 	.word	0x20000008
 800069c:	20000010 	.word	0x20000010
 80006a0:	200000b8 	.word	0x200000b8
 80006a4:	20000014 	.word	0x20000014
 80006a8:	20000016 	.word	0x20000016
 80006ac:	20000018 	.word	0x20000018

080006b0 <ch9121_send_4_bytes>:
parameter:
    data: parameter
    command: command code
Info:  Set mode, enable port, clear serial port, switch DHCP, switch port 2
******************************************************************************/
void ch9121_send_4_bytes(uint8_t data, int command) {
 80006b0:	b580      	push	{r7, lr}
 80006b2:	b086      	sub	sp, #24
 80006b4:	af00      	add	r7, sp, #0
 80006b6:	4603      	mov	r3, r0
 80006b8:	6039      	str	r1, [r7, #0]
 80006ba:	71fb      	strb	r3, [r7, #7]
    for (int i = 2; i < 4; i++) {
 80006bc:	2302      	movs	r3, #2
 80006be:	617b      	str	r3, [r7, #20]
 80006c0:	e012      	b.n	80006e8 <ch9121_send_4_bytes+0x38>
        if (i == 2)
 80006c2:	697b      	ldr	r3, [r7, #20]
 80006c4:	2b02      	cmp	r3, #2
 80006c6:	d107      	bne.n	80006d8 <ch9121_send_4_bytes+0x28>
        	ch9121_tx_buf[i] = command;
 80006c8:	683b      	ldr	r3, [r7, #0]
 80006ca:	b2d9      	uxtb	r1, r3
 80006cc:	4a1e      	ldr	r2, [pc, #120]	; (8000748 <ch9121_send_4_bytes+0x98>)
 80006ce:	697b      	ldr	r3, [r7, #20]
 80006d0:	4413      	add	r3, r2
 80006d2:	460a      	mov	r2, r1
 80006d4:	701a      	strb	r2, [r3, #0]
 80006d6:	e004      	b.n	80006e2 <ch9121_send_4_bytes+0x32>
        else
        	ch9121_tx_buf[i] = data;
 80006d8:	4a1b      	ldr	r2, [pc, #108]	; (8000748 <ch9121_send_4_bytes+0x98>)
 80006da:	697b      	ldr	r3, [r7, #20]
 80006dc:	4413      	add	r3, r2
 80006de:	79fa      	ldrb	r2, [r7, #7]
 80006e0:	701a      	strb	r2, [r3, #0]
    for (int i = 2; i < 4; i++) {
 80006e2:	697b      	ldr	r3, [r7, #20]
 80006e4:	3301      	adds	r3, #1
 80006e6:	617b      	str	r3, [r7, #20]
 80006e8:	697b      	ldr	r3, [r7, #20]
 80006ea:	2b03      	cmp	r3, #3
 80006ec:	dde9      	ble.n	80006c2 <ch9121_send_4_bytes+0x12>
    }
    HAL_Delay(10);
 80006ee:	200a      	movs	r0, #10
 80006f0:	f001 fae4 	bl	8001cbc <HAL_Delay>
    for (int o = 0; o < 4; o++)
 80006f4:	2300      	movs	r3, #0
 80006f6:	613b      	str	r3, [r7, #16]
 80006f8:	e00a      	b.n	8000710 <ch9121_send_4_bytes+0x60>
        HAL_UART_Transmit(&huart4, &ch9121_tx_buf[o], 1, 1);
 80006fa:	693b      	ldr	r3, [r7, #16]
 80006fc:	4a12      	ldr	r2, [pc, #72]	; (8000748 <ch9121_send_4_bytes+0x98>)
 80006fe:	1899      	adds	r1, r3, r2
 8000700:	2301      	movs	r3, #1
 8000702:	2201      	movs	r2, #1
 8000704:	4811      	ldr	r0, [pc, #68]	; (800074c <ch9121_send_4_bytes+0x9c>)
 8000706:	f003 faf5 	bl	8003cf4 <HAL_UART_Transmit>
    for (int o = 0; o < 4; o++)
 800070a:	693b      	ldr	r3, [r7, #16]
 800070c:	3301      	adds	r3, #1
 800070e:	613b      	str	r3, [r7, #16]
 8000710:	693b      	ldr	r3, [r7, #16]
 8000712:	2b03      	cmp	r3, #3
 8000714:	ddf1      	ble.n	80006fa <ch9121_send_4_bytes+0x4a>
    HAL_Delay(10);
 8000716:	200a      	movs	r0, #10
 8000718:	f001 fad0 	bl	8001cbc <HAL_Delay>
    for (int i = 2; i < 4; i++)
 800071c:	2302      	movs	r3, #2
 800071e:	60fb      	str	r3, [r7, #12]
 8000720:	e007      	b.n	8000732 <ch9121_send_4_bytes+0x82>
    	ch9121_tx_buf[i] = 0;
 8000722:	4a09      	ldr	r2, [pc, #36]	; (8000748 <ch9121_send_4_bytes+0x98>)
 8000724:	68fb      	ldr	r3, [r7, #12]
 8000726:	4413      	add	r3, r2
 8000728:	2200      	movs	r2, #0
 800072a:	701a      	strb	r2, [r3, #0]
    for (int i = 2; i < 4; i++)
 800072c:	68fb      	ldr	r3, [r7, #12]
 800072e:	3301      	adds	r3, #1
 8000730:	60fb      	str	r3, [r7, #12]
 8000732:	68fb      	ldr	r3, [r7, #12]
 8000734:	2b03      	cmp	r3, #3
 8000736:	ddf4      	ble.n	8000722 <ch9121_send_4_bytes+0x72>
    HAL_Delay(200);
 8000738:	20c8      	movs	r0, #200	; 0xc8
 800073a:	f001 fabf 	bl	8001cbc <HAL_Delay>
}
 800073e:	bf00      	nop
 8000740:	3718      	adds	r7, #24
 8000742:	46bd      	mov	sp, r7
 8000744:	bd80      	pop	{r7, pc}
 8000746:	bf00      	nop
 8000748:	2000001c 	.word	0x2000001c
 800074c:	2000057c 	.word	0x2000057c

08000750 <ch9121_send_5_bytes>:
parameter:
    data: parameter
    command: command code
Info:  Set the local port and target port
******************************************************************************/
void ch9121_send_5_bytes(uint16_t data, int command) {
 8000750:	b580      	push	{r7, lr}
 8000752:	b086      	sub	sp, #24
 8000754:	af00      	add	r7, sp, #0
 8000756:	4603      	mov	r3, r0
 8000758:	6039      	str	r1, [r7, #0]
 800075a:	80fb      	strh	r3, [r7, #6]
    uint8_t Port[2];
    Port[0] = data & 0xff;
 800075c:	88fb      	ldrh	r3, [r7, #6]
 800075e:	b2db      	uxtb	r3, r3
 8000760:	723b      	strb	r3, [r7, #8]
    Port[1] = data >> 8;
 8000762:	88fb      	ldrh	r3, [r7, #6]
 8000764:	0a1b      	lsrs	r3, r3, #8
 8000766:	b29b      	uxth	r3, r3
 8000768:	b2db      	uxtb	r3, r3
 800076a:	727b      	strb	r3, [r7, #9]
    for (int i = 2; i < 5; i++)
 800076c:	2302      	movs	r3, #2
 800076e:	617b      	str	r3, [r7, #20]
 8000770:	e018      	b.n	80007a4 <ch9121_send_5_bytes+0x54>
    {
        if (i == 2)
 8000772:	697b      	ldr	r3, [r7, #20]
 8000774:	2b02      	cmp	r3, #2
 8000776:	d107      	bne.n	8000788 <ch9121_send_5_bytes+0x38>
        	ch9121_tx_buf[i] = command;
 8000778:	683b      	ldr	r3, [r7, #0]
 800077a:	b2d9      	uxtb	r1, r3
 800077c:	4a21      	ldr	r2, [pc, #132]	; (8000804 <ch9121_send_5_bytes+0xb4>)
 800077e:	697b      	ldr	r3, [r7, #20]
 8000780:	4413      	add	r3, r2
 8000782:	460a      	mov	r2, r1
 8000784:	701a      	strb	r2, [r3, #0]
 8000786:	e00a      	b.n	800079e <ch9121_send_5_bytes+0x4e>
        else
        	ch9121_tx_buf[i] = Port[i - 3];
 8000788:	697b      	ldr	r3, [r7, #20]
 800078a:	3b03      	subs	r3, #3
 800078c:	3318      	adds	r3, #24
 800078e:	443b      	add	r3, r7
 8000790:	f813 1c10 	ldrb.w	r1, [r3, #-16]
 8000794:	4a1b      	ldr	r2, [pc, #108]	; (8000804 <ch9121_send_5_bytes+0xb4>)
 8000796:	697b      	ldr	r3, [r7, #20]
 8000798:	4413      	add	r3, r2
 800079a:	460a      	mov	r2, r1
 800079c:	701a      	strb	r2, [r3, #0]
    for (int i = 2; i < 5; i++)
 800079e:	697b      	ldr	r3, [r7, #20]
 80007a0:	3301      	adds	r3, #1
 80007a2:	617b      	str	r3, [r7, #20]
 80007a4:	697b      	ldr	r3, [r7, #20]
 80007a6:	2b04      	cmp	r3, #4
 80007a8:	dde3      	ble.n	8000772 <ch9121_send_5_bytes+0x22>
    }
    HAL_Delay(10);
 80007aa:	200a      	movs	r0, #10
 80007ac:	f001 fa86 	bl	8001cbc <HAL_Delay>
    for (int o = 0; o < 5; o++)
 80007b0:	2300      	movs	r3, #0
 80007b2:	613b      	str	r3, [r7, #16]
 80007b4:	e00a      	b.n	80007cc <ch9121_send_5_bytes+0x7c>
        HAL_UART_Transmit(&huart4, &ch9121_tx_buf[o], 1, 1);
 80007b6:	693b      	ldr	r3, [r7, #16]
 80007b8:	4a12      	ldr	r2, [pc, #72]	; (8000804 <ch9121_send_5_bytes+0xb4>)
 80007ba:	1899      	adds	r1, r3, r2
 80007bc:	2301      	movs	r3, #1
 80007be:	2201      	movs	r2, #1
 80007c0:	4811      	ldr	r0, [pc, #68]	; (8000808 <ch9121_send_5_bytes+0xb8>)
 80007c2:	f003 fa97 	bl	8003cf4 <HAL_UART_Transmit>
    for (int o = 0; o < 5; o++)
 80007c6:	693b      	ldr	r3, [r7, #16]
 80007c8:	3301      	adds	r3, #1
 80007ca:	613b      	str	r3, [r7, #16]
 80007cc:	693b      	ldr	r3, [r7, #16]
 80007ce:	2b04      	cmp	r3, #4
 80007d0:	ddf1      	ble.n	80007b6 <ch9121_send_5_bytes+0x66>
    HAL_Delay(10);
 80007d2:	200a      	movs	r0, #10
 80007d4:	f001 fa72 	bl	8001cbc <HAL_Delay>
    for (int i = 2; i < 5; i++) ch9121_tx_buf[i] = 0;
 80007d8:	2302      	movs	r3, #2
 80007da:	60fb      	str	r3, [r7, #12]
 80007dc:	e007      	b.n	80007ee <ch9121_send_5_bytes+0x9e>
 80007de:	4a09      	ldr	r2, [pc, #36]	; (8000804 <ch9121_send_5_bytes+0xb4>)
 80007e0:	68fb      	ldr	r3, [r7, #12]
 80007e2:	4413      	add	r3, r2
 80007e4:	2200      	movs	r2, #0
 80007e6:	701a      	strb	r2, [r3, #0]
 80007e8:	68fb      	ldr	r3, [r7, #12]
 80007ea:	3301      	adds	r3, #1
 80007ec:	60fb      	str	r3, [r7, #12]
 80007ee:	68fb      	ldr	r3, [r7, #12]
 80007f0:	2b04      	cmp	r3, #4
 80007f2:	ddf4      	ble.n	80007de <ch9121_send_5_bytes+0x8e>
    HAL_Delay(100);
 80007f4:	2064      	movs	r0, #100	; 0x64
 80007f6:	f001 fa61 	bl	8001cbc <HAL_Delay>
}
 80007fa:	bf00      	nop
 80007fc:	3718      	adds	r7, #24
 80007fe:	46bd      	mov	sp, r7
 8000800:	bd80      	pop	{r7, pc}
 8000802:	bf00      	nop
 8000804:	2000001c 	.word	0x2000001c
 8000808:	2000057c 	.word	0x2000057c

0800080c <ch9121_send_7_bytes>:
parameter:
    data: parameter
    command: command code
Info:  Set the IP address, subnet mask, gateway,
******************************************************************************/
void ch9121_send_7_bytes(uint8_t data[], int command) {
 800080c:	b580      	push	{r7, lr}
 800080e:	b086      	sub	sp, #24
 8000810:	af00      	add	r7, sp, #0
 8000812:	6078      	str	r0, [r7, #4]
 8000814:	6039      	str	r1, [r7, #0]
    for (int i = 2; i < 7; i++) {
 8000816:	2302      	movs	r3, #2
 8000818:	617b      	str	r3, [r7, #20]
 800081a:	e017      	b.n	800084c <ch9121_send_7_bytes+0x40>
        if (i == 2)
 800081c:	697b      	ldr	r3, [r7, #20]
 800081e:	2b02      	cmp	r3, #2
 8000820:	d107      	bne.n	8000832 <ch9121_send_7_bytes+0x26>
        	ch9121_tx_buf[i] = command;
 8000822:	683b      	ldr	r3, [r7, #0]
 8000824:	b2d9      	uxtb	r1, r3
 8000826:	4a21      	ldr	r2, [pc, #132]	; (80008ac <ch9121_send_7_bytes+0xa0>)
 8000828:	697b      	ldr	r3, [r7, #20]
 800082a:	4413      	add	r3, r2
 800082c:	460a      	mov	r2, r1
 800082e:	701a      	strb	r2, [r3, #0]
 8000830:	e009      	b.n	8000846 <ch9121_send_7_bytes+0x3a>
        else
        	ch9121_tx_buf[i] = data[i - 3];
 8000832:	697b      	ldr	r3, [r7, #20]
 8000834:	3b03      	subs	r3, #3
 8000836:	687a      	ldr	r2, [r7, #4]
 8000838:	4413      	add	r3, r2
 800083a:	7819      	ldrb	r1, [r3, #0]
 800083c:	4a1b      	ldr	r2, [pc, #108]	; (80008ac <ch9121_send_7_bytes+0xa0>)
 800083e:	697b      	ldr	r3, [r7, #20]
 8000840:	4413      	add	r3, r2
 8000842:	460a      	mov	r2, r1
 8000844:	701a      	strb	r2, [r3, #0]
    for (int i = 2; i < 7; i++) {
 8000846:	697b      	ldr	r3, [r7, #20]
 8000848:	3301      	adds	r3, #1
 800084a:	617b      	str	r3, [r7, #20]
 800084c:	697b      	ldr	r3, [r7, #20]
 800084e:	2b06      	cmp	r3, #6
 8000850:	dde4      	ble.n	800081c <ch9121_send_7_bytes+0x10>
    }
    HAL_Delay(10);
 8000852:	200a      	movs	r0, #10
 8000854:	f001 fa32 	bl	8001cbc <HAL_Delay>
    for (int o = 0; o < 7; o++)
 8000858:	2300      	movs	r3, #0
 800085a:	613b      	str	r3, [r7, #16]
 800085c:	e00a      	b.n	8000874 <ch9121_send_7_bytes+0x68>
        HAL_UART_Transmit(&huart4, &ch9121_tx_buf[o], 1, 1);
 800085e:	693b      	ldr	r3, [r7, #16]
 8000860:	4a12      	ldr	r2, [pc, #72]	; (80008ac <ch9121_send_7_bytes+0xa0>)
 8000862:	1899      	adds	r1, r3, r2
 8000864:	2301      	movs	r3, #1
 8000866:	2201      	movs	r2, #1
 8000868:	4811      	ldr	r0, [pc, #68]	; (80008b0 <ch9121_send_7_bytes+0xa4>)
 800086a:	f003 fa43 	bl	8003cf4 <HAL_UART_Transmit>
    for (int o = 0; o < 7; o++)
 800086e:	693b      	ldr	r3, [r7, #16]
 8000870:	3301      	adds	r3, #1
 8000872:	613b      	str	r3, [r7, #16]
 8000874:	693b      	ldr	r3, [r7, #16]
 8000876:	2b06      	cmp	r3, #6
 8000878:	ddf1      	ble.n	800085e <ch9121_send_7_bytes+0x52>
    HAL_Delay(10);
 800087a:	200a      	movs	r0, #10
 800087c:	f001 fa1e 	bl	8001cbc <HAL_Delay>
    for (int i = 2; i < 7; i++) ch9121_tx_buf[i] = 0;
 8000880:	2302      	movs	r3, #2
 8000882:	60fb      	str	r3, [r7, #12]
 8000884:	e007      	b.n	8000896 <ch9121_send_7_bytes+0x8a>
 8000886:	4a09      	ldr	r2, [pc, #36]	; (80008ac <ch9121_send_7_bytes+0xa0>)
 8000888:	68fb      	ldr	r3, [r7, #12]
 800088a:	4413      	add	r3, r2
 800088c:	2200      	movs	r2, #0
 800088e:	701a      	strb	r2, [r3, #0]
 8000890:	68fb      	ldr	r3, [r7, #12]
 8000892:	3301      	adds	r3, #1
 8000894:	60fb      	str	r3, [r7, #12]
 8000896:	68fb      	ldr	r3, [r7, #12]
 8000898:	2b06      	cmp	r3, #6
 800089a:	ddf4      	ble.n	8000886 <ch9121_send_7_bytes+0x7a>
    HAL_Delay(100);
 800089c:	2064      	movs	r0, #100	; 0x64
 800089e:	f001 fa0d 	bl	8001cbc <HAL_Delay>
}
 80008a2:	bf00      	nop
 80008a4:	3718      	adds	r7, #24
 80008a6:	46bd      	mov	sp, r7
 80008a8:	bd80      	pop	{r7, pc}
 80008aa:	bf00      	nop
 80008ac:	2000001c 	.word	0x2000001c
 80008b0:	2000057c 	.word	0x2000057c

080008b4 <ch9121_send_baud>:
parameter:
    data: parameter
    command: command code
Info:  Set baud rate
******************************************************************************/
void ch9121_send_baud(uint32_t data, int command) {
 80008b4:	b580      	push	{r7, lr}
 80008b6:	b086      	sub	sp, #24
 80008b8:	af00      	add	r7, sp, #0
 80008ba:	6078      	str	r0, [r7, #4]
 80008bc:	6039      	str	r1, [r7, #0]
    uint8_t Port[4];
    Port[0] = (data & 0xff);
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	b2db      	uxtb	r3, r3
 80008c2:	723b      	strb	r3, [r7, #8]
    Port[1] = (data >> 8) & 0xff;
 80008c4:	687b      	ldr	r3, [r7, #4]
 80008c6:	0a1b      	lsrs	r3, r3, #8
 80008c8:	b2db      	uxtb	r3, r3
 80008ca:	727b      	strb	r3, [r7, #9]
    Port[2] = (data >> 16) & 0xff;
 80008cc:	687b      	ldr	r3, [r7, #4]
 80008ce:	0c1b      	lsrs	r3, r3, #16
 80008d0:	b2db      	uxtb	r3, r3
 80008d2:	72bb      	strb	r3, [r7, #10]
    Port[3] = data >> 24;
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	0e1b      	lsrs	r3, r3, #24
 80008d8:	b2db      	uxtb	r3, r3
 80008da:	72fb      	strb	r3, [r7, #11]

    for (int i = 2; i < 7; i++) {
 80008dc:	2302      	movs	r3, #2
 80008de:	617b      	str	r3, [r7, #20]
 80008e0:	e018      	b.n	8000914 <ch9121_send_baud+0x60>
        if (i == 2)
 80008e2:	697b      	ldr	r3, [r7, #20]
 80008e4:	2b02      	cmp	r3, #2
 80008e6:	d107      	bne.n	80008f8 <ch9121_send_baud+0x44>
        	ch9121_tx_buf[i] = command;
 80008e8:	683b      	ldr	r3, [r7, #0]
 80008ea:	b2d9      	uxtb	r1, r3
 80008ec:	4a21      	ldr	r2, [pc, #132]	; (8000974 <ch9121_send_baud+0xc0>)
 80008ee:	697b      	ldr	r3, [r7, #20]
 80008f0:	4413      	add	r3, r2
 80008f2:	460a      	mov	r2, r1
 80008f4:	701a      	strb	r2, [r3, #0]
 80008f6:	e00a      	b.n	800090e <ch9121_send_baud+0x5a>
        else
        	ch9121_tx_buf[i] = Port[i - 3];
 80008f8:	697b      	ldr	r3, [r7, #20]
 80008fa:	3b03      	subs	r3, #3
 80008fc:	3318      	adds	r3, #24
 80008fe:	443b      	add	r3, r7
 8000900:	f813 1c10 	ldrb.w	r1, [r3, #-16]
 8000904:	4a1b      	ldr	r2, [pc, #108]	; (8000974 <ch9121_send_baud+0xc0>)
 8000906:	697b      	ldr	r3, [r7, #20]
 8000908:	4413      	add	r3, r2
 800090a:	460a      	mov	r2, r1
 800090c:	701a      	strb	r2, [r3, #0]
    for (int i = 2; i < 7; i++) {
 800090e:	697b      	ldr	r3, [r7, #20]
 8000910:	3301      	adds	r3, #1
 8000912:	617b      	str	r3, [r7, #20]
 8000914:	697b      	ldr	r3, [r7, #20]
 8000916:	2b06      	cmp	r3, #6
 8000918:	dde3      	ble.n	80008e2 <ch9121_send_baud+0x2e>
    }
    HAL_Delay(10);
 800091a:	200a      	movs	r0, #10
 800091c:	f001 f9ce 	bl	8001cbc <HAL_Delay>
    for (int o = 0; o < 7; o++)
 8000920:	2300      	movs	r3, #0
 8000922:	613b      	str	r3, [r7, #16]
 8000924:	e00a      	b.n	800093c <ch9121_send_baud+0x88>
        HAL_UART_Transmit(&huart4, &ch9121_tx_buf[o], 1, 1);
 8000926:	693b      	ldr	r3, [r7, #16]
 8000928:	4a12      	ldr	r2, [pc, #72]	; (8000974 <ch9121_send_baud+0xc0>)
 800092a:	1899      	adds	r1, r3, r2
 800092c:	2301      	movs	r3, #1
 800092e:	2201      	movs	r2, #1
 8000930:	4811      	ldr	r0, [pc, #68]	; (8000978 <ch9121_send_baud+0xc4>)
 8000932:	f003 f9df 	bl	8003cf4 <HAL_UART_Transmit>
    for (int o = 0; o < 7; o++)
 8000936:	693b      	ldr	r3, [r7, #16]
 8000938:	3301      	adds	r3, #1
 800093a:	613b      	str	r3, [r7, #16]
 800093c:	693b      	ldr	r3, [r7, #16]
 800093e:	2b06      	cmp	r3, #6
 8000940:	ddf1      	ble.n	8000926 <ch9121_send_baud+0x72>
    HAL_Delay(10);
 8000942:	200a      	movs	r0, #10
 8000944:	f001 f9ba 	bl	8001cbc <HAL_Delay>
    for (int i = 2; i < 7; i++) ch9121_tx_buf[i] = 0;
 8000948:	2302      	movs	r3, #2
 800094a:	60fb      	str	r3, [r7, #12]
 800094c:	e007      	b.n	800095e <ch9121_send_baud+0xaa>
 800094e:	4a09      	ldr	r2, [pc, #36]	; (8000974 <ch9121_send_baud+0xc0>)
 8000950:	68fb      	ldr	r3, [r7, #12]
 8000952:	4413      	add	r3, r2
 8000954:	2200      	movs	r2, #0
 8000956:	701a      	strb	r2, [r3, #0]
 8000958:	68fb      	ldr	r3, [r7, #12]
 800095a:	3301      	adds	r3, #1
 800095c:	60fb      	str	r3, [r7, #12]
 800095e:	68fb      	ldr	r3, [r7, #12]
 8000960:	2b06      	cmp	r3, #6
 8000962:	ddf4      	ble.n	800094e <ch9121_send_baud+0x9a>
    HAL_Delay(100);
 8000964:	2064      	movs	r0, #100	; 0x64
 8000966:	f001 f9a9 	bl	8001cbc <HAL_Delay>
}
 800096a:	bf00      	nop
 800096c:	3718      	adds	r7, #24
 800096e:	46bd      	mov	sp, r7
 8000970:	bd80      	pop	{r7, pc}
 8000972:	bf00      	nop
 8000974:	2000001c 	.word	0x2000001c
 8000978:	2000057c 	.word	0x2000057c

0800097c <ch9121_update_conf>:
/******************************************************************************
function:	ch9121_update_conf
parameter:
Info:  Updating configuration Parameters
******************************************************************************/
void ch9121_update_conf(void) {
 800097c:	b580      	push	{r7, lr}
 800097e:	b084      	sub	sp, #16
 8000980:	af00      	add	r7, sp, #0
	ch9121_tx_buf[2] = 0x0d;
 8000982:	4b24      	ldr	r3, [pc, #144]	; (8000a14 <ch9121_update_conf+0x98>)
 8000984:	220d      	movs	r2, #13
 8000986:	709a      	strb	r2, [r3, #2]
    for (int o = 0; o < 3; o++)
 8000988:	2300      	movs	r3, #0
 800098a:	60fb      	str	r3, [r7, #12]
 800098c:	e00a      	b.n	80009a4 <ch9121_update_conf+0x28>
        HAL_UART_Transmit(&huart4, &ch9121_tx_buf[o], 1, 1);
 800098e:	68fb      	ldr	r3, [r7, #12]
 8000990:	4a20      	ldr	r2, [pc, #128]	; (8000a14 <ch9121_update_conf+0x98>)
 8000992:	1899      	adds	r1, r3, r2
 8000994:	2301      	movs	r3, #1
 8000996:	2201      	movs	r2, #1
 8000998:	481f      	ldr	r0, [pc, #124]	; (8000a18 <ch9121_update_conf+0x9c>)
 800099a:	f003 f9ab 	bl	8003cf4 <HAL_UART_Transmit>
    for (int o = 0; o < 3; o++)
 800099e:	68fb      	ldr	r3, [r7, #12]
 80009a0:	3301      	adds	r3, #1
 80009a2:	60fb      	str	r3, [r7, #12]
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	2b02      	cmp	r3, #2
 80009a8:	ddf1      	ble.n	800098e <ch9121_update_conf+0x12>
    HAL_Delay(200);
 80009aa:	20c8      	movs	r0, #200	; 0xc8
 80009ac:	f001 f986 	bl	8001cbc <HAL_Delay>
    ch9121_tx_buf[2] = 0x0e;
 80009b0:	4b18      	ldr	r3, [pc, #96]	; (8000a14 <ch9121_update_conf+0x98>)
 80009b2:	220e      	movs	r2, #14
 80009b4:	709a      	strb	r2, [r3, #2]
    for (int o = 0; o < 3; o++)
 80009b6:	2300      	movs	r3, #0
 80009b8:	60bb      	str	r3, [r7, #8]
 80009ba:	e00a      	b.n	80009d2 <ch9121_update_conf+0x56>
        HAL_UART_Transmit(&huart4, &ch9121_tx_buf[o], 1, 1);
 80009bc:	68bb      	ldr	r3, [r7, #8]
 80009be:	4a15      	ldr	r2, [pc, #84]	; (8000a14 <ch9121_update_conf+0x98>)
 80009c0:	1899      	adds	r1, r3, r2
 80009c2:	2301      	movs	r3, #1
 80009c4:	2201      	movs	r2, #1
 80009c6:	4814      	ldr	r0, [pc, #80]	; (8000a18 <ch9121_update_conf+0x9c>)
 80009c8:	f003 f994 	bl	8003cf4 <HAL_UART_Transmit>
    for (int o = 0; o < 3; o++)
 80009cc:	68bb      	ldr	r3, [r7, #8]
 80009ce:	3301      	adds	r3, #1
 80009d0:	60bb      	str	r3, [r7, #8]
 80009d2:	68bb      	ldr	r3, [r7, #8]
 80009d4:	2b02      	cmp	r3, #2
 80009d6:	ddf1      	ble.n	80009bc <ch9121_update_conf+0x40>
    HAL_Delay(200);
 80009d8:	20c8      	movs	r0, #200	; 0xc8
 80009da:	f001 f96f 	bl	8001cbc <HAL_Delay>
    ch9121_tx_buf[2] = 0x5e;
 80009de:	4b0d      	ldr	r3, [pc, #52]	; (8000a14 <ch9121_update_conf+0x98>)
 80009e0:	225e      	movs	r2, #94	; 0x5e
 80009e2:	709a      	strb	r2, [r3, #2]
    for (int o = 0; o < 3; o++)
 80009e4:	2300      	movs	r3, #0
 80009e6:	607b      	str	r3, [r7, #4]
 80009e8:	e00a      	b.n	8000a00 <ch9121_update_conf+0x84>
        HAL_UART_Transmit(&huart4, &ch9121_tx_buf[o], 1, 1);
 80009ea:	687b      	ldr	r3, [r7, #4]
 80009ec:	4a09      	ldr	r2, [pc, #36]	; (8000a14 <ch9121_update_conf+0x98>)
 80009ee:	1899      	adds	r1, r3, r2
 80009f0:	2301      	movs	r3, #1
 80009f2:	2201      	movs	r2, #1
 80009f4:	4808      	ldr	r0, [pc, #32]	; (8000a18 <ch9121_update_conf+0x9c>)
 80009f6:	f003 f97d 	bl	8003cf4 <HAL_UART_Transmit>
    for (int o = 0; o < 3; o++)
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	3301      	adds	r3, #1
 80009fe:	607b      	str	r3, [r7, #4]
 8000a00:	687b      	ldr	r3, [r7, #4]
 8000a02:	2b02      	cmp	r3, #2
 8000a04:	ddf1      	ble.n	80009ea <ch9121_update_conf+0x6e>
    HAL_Delay(100);
 8000a06:	2064      	movs	r0, #100	; 0x64
 8000a08:	f001 f958 	bl	8001cbc <HAL_Delay>
}
 8000a0c:	bf00      	nop
 8000a0e:	3710      	adds	r7, #16
 8000a10:	46bd      	mov	sp, r7
 8000a12:	bd80      	pop	{r7, pc}
 8000a14:	2000001c 	.word	0x2000001c
 8000a18:	2000057c 	.word	0x2000057c

08000a1c <cli_init>:
    {"echo", 		2,	 	cli_echo,  		"echo [echo data]"	},
	{"eth",			2,	 	cli_eth, 		"eth [send data]"	},
    {NULL, 			0,     	NULL,   		NULL				}
};

void cli_init(void) {
 8000a1c:	b580      	push	{r7, lr}
 8000a1e:	af00      	add	r7, sp, #0
	uart_regcbf(cli_parser);
 8000a20:	4802      	ldr	r0, [pc, #8]	; (8000a2c <cli_init+0x10>)
 8000a22:	f000 ffef 	bl	8001a04 <uart_regcbf>
}
 8000a26:	bf00      	nop
 8000a28:	bd80      	pop	{r7, pc}
 8000a2a:	bf00      	nop
 8000a2c:	08000a31 	.word	0x08000a31

08000a30 <cli_parser>:

#define D_DELIMITER  " ,\r\n"

bool cli_parser(uint8_t *buf) {
 8000a30:	b580      	push	{r7, lr}
 8000a32:	b090      	sub	sp, #64	; 0x40
 8000a34:	af00      	add	r7, sp, #0
 8000a36:	6078      	str	r0, [r7, #4]
#if 1
  int argc = 0;
 8000a38:	2300      	movs	r3, #0
 8000a3a:	63fb      	str	r3, [r7, #60]	; 0x3c
  char *argv[10];
  char *ptr;
  ptr = strtok(buf, D_DELIMITER);
 8000a3c:	494b      	ldr	r1, [pc, #300]	; (8000b6c <cli_parser+0x13c>)
 8000a3e:	6878      	ldr	r0, [r7, #4]
 8000a40:	f005 f8d8 	bl	8005bf4 <strtok>
 8000a44:	63b8      	str	r0, [r7, #56]	; 0x38
  if(ptr == NULL) return false;
 8000a46:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000a48:	2b00      	cmp	r3, #0
 8000a4a:	d110      	bne.n	8000a6e <cli_parser+0x3e>
 8000a4c:	2300      	movs	r3, #0
 8000a4e:	e089      	b.n	8000b64 <cli_parser+0x134>

  while(ptr != NULL){
      //printf("%s\r\n", ptr);
      argv[argc] = ptr;
 8000a50:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000a52:	009b      	lsls	r3, r3, #2
 8000a54:	3340      	adds	r3, #64	; 0x40
 8000a56:	443b      	add	r3, r7
 8000a58:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8000a5a:	f843 2c34 	str.w	r2, [r3, #-52]
      argc++;
 8000a5e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8000a60:	3301      	adds	r3, #1
 8000a62:	63fb      	str	r3, [r7, #60]	; 0x3c
      ptr = strtok(NULL, D_DELIMITER);
 8000a64:	4941      	ldr	r1, [pc, #260]	; (8000b6c <cli_parser+0x13c>)
 8000a66:	2000      	movs	r0, #0
 8000a68:	f005 f8c4 	bl	8005bf4 <strtok>
 8000a6c:	63b8      	str	r0, [r7, #56]	; 0x38
  while(ptr != NULL){
 8000a6e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8000a70:	2b00      	cmp	r3, #0
 8000a72:	d1ed      	bne.n	8000a50 <cli_parser+0x20>
  }

  for(int i = 0; gCmdListObj[i].cmd != NULL;i++){
 8000a74:	2300      	movs	r3, #0
 8000a76:	637b      	str	r3, [r7, #52]	; 0x34
 8000a78:	e06a      	b.n	8000b50 <cli_parser+0x120>
      if(strcmp(gCmdListObj[i].cmd, argv[0]) == 0){
 8000a7a:	4a3d      	ldr	r2, [pc, #244]	; (8000b70 <cli_parser+0x140>)
 8000a7c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000a7e:	011b      	lsls	r3, r3, #4
 8000a80:	4413      	add	r3, r2
 8000a82:	681b      	ldr	r3, [r3, #0]
 8000a84:	68fa      	ldr	r2, [r7, #12]
 8000a86:	4611      	mov	r1, r2
 8000a88:	4618      	mov	r0, r3
 8000a8a:	f7ff fbb1 	bl	80001f0 <strcmp>
 8000a8e:	4603      	mov	r3, r0
 8000a90:	2b00      	cmp	r3, #0
 8000a92:	d10c      	bne.n	8000aae <cli_parser+0x7e>
    	  gCmdListObj[i].cbf(argc, argv);
 8000a94:	4a36      	ldr	r2, [pc, #216]	; (8000b70 <cli_parser+0x140>)
 8000a96:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000a98:	011b      	lsls	r3, r3, #4
 8000a9a:	4413      	add	r3, r2
 8000a9c:	3308      	adds	r3, #8
 8000a9e:	681b      	ldr	r3, [r3, #0]
 8000aa0:	f107 020c 	add.w	r2, r7, #12
 8000aa4:	4611      	mov	r1, r2
 8000aa6:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000aa8:	4798      	blx	r3
    	  return true;
 8000aaa:	2301      	movs	r3, #1
 8000aac:	e05a      	b.n	8000b64 <cli_parser+0x134>
      }
      else if(strcmp(gCmdListObj[i].cmd, argv[1]) == 0){
 8000aae:	4a30      	ldr	r2, [pc, #192]	; (8000b70 <cli_parser+0x140>)
 8000ab0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000ab2:	011b      	lsls	r3, r3, #4
 8000ab4:	4413      	add	r3, r2
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	693a      	ldr	r2, [r7, #16]
 8000aba:	4611      	mov	r1, r2
 8000abc:	4618      	mov	r0, r3
 8000abe:	f7ff fb97 	bl	80001f0 <strcmp>
 8000ac2:	4603      	mov	r3, r0
 8000ac4:	2b00      	cmp	r3, #0
 8000ac6:	d10c      	bne.n	8000ae2 <cli_parser+0xb2>
    	  gCmdListObj[i].cbf(argc, argv);
 8000ac8:	4a29      	ldr	r2, [pc, #164]	; (8000b70 <cli_parser+0x140>)
 8000aca:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000acc:	011b      	lsls	r3, r3, #4
 8000ace:	4413      	add	r3, r2
 8000ad0:	3308      	adds	r3, #8
 8000ad2:	681b      	ldr	r3, [r3, #0]
 8000ad4:	f107 020c 	add.w	r2, r7, #12
 8000ad8:	4611      	mov	r1, r2
 8000ada:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000adc:	4798      	blx	r3
    	  return true;
 8000ade:	2301      	movs	r3, #1
 8000ae0:	e040      	b.n	8000b64 <cli_parser+0x134>
      }
      else if(strcmp(gCmdListObj[i].cmd, argv[2]) == 0){
 8000ae2:	4a23      	ldr	r2, [pc, #140]	; (8000b70 <cli_parser+0x140>)
 8000ae4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000ae6:	011b      	lsls	r3, r3, #4
 8000ae8:	4413      	add	r3, r2
 8000aea:	681b      	ldr	r3, [r3, #0]
 8000aec:	697a      	ldr	r2, [r7, #20]
 8000aee:	4611      	mov	r1, r2
 8000af0:	4618      	mov	r0, r3
 8000af2:	f7ff fb7d 	bl	80001f0 <strcmp>
 8000af6:	4603      	mov	r3, r0
 8000af8:	2b00      	cmp	r3, #0
 8000afa:	d10c      	bne.n	8000b16 <cli_parser+0xe6>
    	  gCmdListObj[i].cbf(argc, argv);
 8000afc:	4a1c      	ldr	r2, [pc, #112]	; (8000b70 <cli_parser+0x140>)
 8000afe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000b00:	011b      	lsls	r3, r3, #4
 8000b02:	4413      	add	r3, r2
 8000b04:	3308      	adds	r3, #8
 8000b06:	681b      	ldr	r3, [r3, #0]
 8000b08:	f107 020c 	add.w	r2, r7, #12
 8000b0c:	4611      	mov	r1, r2
 8000b0e:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000b10:	4798      	blx	r3
    	  return true;
 8000b12:	2301      	movs	r3, #1
 8000b14:	e026      	b.n	8000b64 <cli_parser+0x134>
      }
      else if(strcmp(gCmdListObj[i].cmd, argv[3 ]) == 0){
 8000b16:	4a16      	ldr	r2, [pc, #88]	; (8000b70 <cli_parser+0x140>)
 8000b18:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000b1a:	011b      	lsls	r3, r3, #4
 8000b1c:	4413      	add	r3, r2
 8000b1e:	681b      	ldr	r3, [r3, #0]
 8000b20:	69ba      	ldr	r2, [r7, #24]
 8000b22:	4611      	mov	r1, r2
 8000b24:	4618      	mov	r0, r3
 8000b26:	f7ff fb63 	bl	80001f0 <strcmp>
 8000b2a:	4603      	mov	r3, r0
 8000b2c:	2b00      	cmp	r3, #0
 8000b2e:	d10c      	bne.n	8000b4a <cli_parser+0x11a>
    	  gCmdListObj[i].cbf(argc, argv);
 8000b30:	4a0f      	ldr	r2, [pc, #60]	; (8000b70 <cli_parser+0x140>)
 8000b32:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000b34:	011b      	lsls	r3, r3, #4
 8000b36:	4413      	add	r3, r2
 8000b38:	3308      	adds	r3, #8
 8000b3a:	681b      	ldr	r3, [r3, #0]
 8000b3c:	f107 020c 	add.w	r2, r7, #12
 8000b40:	4611      	mov	r1, r2
 8000b42:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 8000b44:	4798      	blx	r3
    	  return true;
 8000b46:	2301      	movs	r3, #1
 8000b48:	e00c      	b.n	8000b64 <cli_parser+0x134>
  for(int i = 0; gCmdListObj[i].cmd != NULL;i++){
 8000b4a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000b4c:	3301      	adds	r3, #1
 8000b4e:	637b      	str	r3, [r7, #52]	; 0x34
 8000b50:	4a07      	ldr	r2, [pc, #28]	; (8000b70 <cli_parser+0x140>)
 8000b52:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8000b54:	011b      	lsls	r3, r3, #4
 8000b56:	4413      	add	r3, r2
 8000b58:	681b      	ldr	r3, [r3, #0]
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	d18d      	bne.n	8000a7a <cli_parser+0x4a>
      }
  }

  printf("Unsupported command. \r\n");
 8000b5e:	4805      	ldr	r0, [pc, #20]	; (8000b74 <cli_parser+0x144>)
 8000b60:	f004 ff40 	bl	80059e4 <puts>
      ptr = strtok(NULL, " ");     //자른 문자 다음부터 구분자 또 찾기
  }

  return true;
#endif
}
 8000b64:	4618      	mov	r0, r3
 8000b66:	3740      	adds	r7, #64	; 0x40
 8000b68:	46bd      	mov	sp, r7
 8000b6a:	bd80      	pop	{r7, pc}
 8000b6c:	08006c88 	.word	0x08006c88
 8000b70:	08006d94 	.word	0x08006d94
 8000b74:	08006c90 	.word	0x08006c90

08000b78 <cli_help>:

int cli_help(int argc, char *argv[]){
 8000b78:	b580      	push	{r7, lr}
 8000b7a:	b082      	sub	sp, #8
 8000b7c:	af00      	add	r7, sp, #0
 8000b7e:	6078      	str	r0, [r7, #4]
 8000b80:	6039      	str	r1, [r7, #0]
  if (argc != gCmdListObj[0].no){
 8000b82:	2301      	movs	r3, #1
 8000b84:	461a      	mov	r2, r3
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	4293      	cmp	r3, r2
 8000b8a:	d004      	beq.n	8000b96 <cli_help+0x1e>
	  printf("It is Not correct usage: argument error\r\n");
 8000b8c:	4807      	ldr	r0, [pc, #28]	; (8000bac <cli_help+0x34>)
 8000b8e:	f004 ff29 	bl	80059e4 <puts>
	  return 0;
 8000b92:	2300      	movs	r3, #0
 8000b94:	e005      	b.n	8000ba2 <cli_help+0x2a>
  }
  if(strcmp(gCmdListObj[0].cmd , "help") == 0)
	  printf("%s\r\n", gCmdListObj[0].remark);
 8000b96:	4b06      	ldr	r3, [pc, #24]	; (8000bb0 <cli_help+0x38>)
 8000b98:	4619      	mov	r1, r3
 8000b9a:	4806      	ldr	r0, [pc, #24]	; (8000bb4 <cli_help+0x3c>)
 8000b9c:	f004 febc 	bl	8005918 <iprintf>
  return 0;
 8000ba0:	2300      	movs	r3, #0
}
 8000ba2:	4618      	mov	r0, r3
 8000ba4:	3708      	adds	r7, #8
 8000ba6:	46bd      	mov	sp, r7
 8000ba8:	bd80      	pop	{r7, pc}
 8000baa:	bf00      	nop
 8000bac:	08006ca8 	.word	0x08006ca8
 8000bb0:	08006c50 	.word	0x08006c50
 8000bb4:	08006cd4 	.word	0x08006cd4

08000bb8 <cli_echo>:

int cli_echo(int argc, char *argv[]){
 8000bb8:	b580      	push	{r7, lr}
 8000bba:	b082      	sub	sp, #8
 8000bbc:	af00      	add	r7, sp, #0
 8000bbe:	6078      	str	r0, [r7, #4]
 8000bc0:	6039      	str	r1, [r7, #0]
  if (argc != gCmdListObj[1].no){
 8000bc2:	2302      	movs	r3, #2
 8000bc4:	461a      	mov	r2, r3
 8000bc6:	687b      	ldr	r3, [r7, #4]
 8000bc8:	4293      	cmp	r3, r2
 8000bca:	d004      	beq.n	8000bd6 <cli_echo+0x1e>
      printf("It is Not correct usage: argument error\r\n");
 8000bcc:	4807      	ldr	r0, [pc, #28]	; (8000bec <cli_echo+0x34>)
 8000bce:	f004 ff09 	bl	80059e4 <puts>
      return 0;
 8000bd2:	2300      	movs	r3, #0
 8000bd4:	e005      	b.n	8000be2 <cli_echo+0x2a>
  }
  if(strcmp(gCmdListObj[1].cmd , "echo") == 0)
      printf("%s\r\n", gCmdListObj[1].remark);
 8000bd6:	4b06      	ldr	r3, [pc, #24]	; (8000bf0 <cli_echo+0x38>)
 8000bd8:	4619      	mov	r1, r3
 8000bda:	4806      	ldr	r0, [pc, #24]	; (8000bf4 <cli_echo+0x3c>)
 8000bdc:	f004 fe9c 	bl	8005918 <iprintf>
  return 0;
 8000be0:	2300      	movs	r3, #0
}
 8000be2:	4618      	mov	r0, r3
 8000be4:	3708      	adds	r7, #8
 8000be6:	46bd      	mov	sp, r7
 8000be8:	bd80      	pop	{r7, pc}
 8000bea:	bf00      	nop
 8000bec:	08006ca8 	.word	0x08006ca8
 8000bf0:	08006c60 	.word	0x08006c60
 8000bf4:	08006cd4 	.word	0x08006cd4

08000bf8 <cli_eth>:

int cli_eth(int argc, char *argv[]){
 8000bf8:	b580      	push	{r7, lr}
 8000bfa:	b082      	sub	sp, #8
 8000bfc:	af00      	add	r7, sp, #0
 8000bfe:	6078      	str	r0, [r7, #4]
 8000c00:	6039      	str	r1, [r7, #0]
  if (argc != gCmdListObj[2].no){
 8000c02:	2302      	movs	r3, #2
 8000c04:	461a      	mov	r2, r3
 8000c06:	687b      	ldr	r3, [r7, #4]
 8000c08:	4293      	cmp	r3, r2
 8000c0a:	d004      	beq.n	8000c16 <cli_eth+0x1e>
	  printf("It is Not correct usage: argument error\r\n");
 8000c0c:	4807      	ldr	r0, [pc, #28]	; (8000c2c <cli_eth+0x34>)
 8000c0e:	f004 fee9 	bl	80059e4 <puts>
	  return 0;
 8000c12:	2300      	movs	r3, #0
 8000c14:	e006      	b.n	8000c24 <cli_eth+0x2c>
  }
  if(strcmp(gCmdListObj[2].cmd , "eth") == 0) {
	  eth_send_data(argv[1]);
 8000c16:	683b      	ldr	r3, [r7, #0]
 8000c18:	3304      	adds	r3, #4
 8000c1a:	681b      	ldr	r3, [r3, #0]
 8000c1c:	4618      	mov	r0, r3
 8000c1e:	f000 f911 	bl	8000e44 <eth_send_data>
  }
  return 0;
 8000c22:	2300      	movs	r3, #0
}
 8000c24:	4618      	mov	r0, r3
 8000c26:	3708      	adds	r7, #8
 8000c28:	46bd      	mov	sp, r7
 8000c2a:	bd80      	pop	{r7, pc}
 8000c2c:	08006ca8 	.word	0x08006ca8

08000c30 <eth_init>:
/******************************************************************************
function:	eth_init
parameter:
Info:  Initialize ethrnet settings and ch9121
******************************************************************************/
uint8_t eth_init(void) {
 8000c30:	b580      	push	{r7, lr}
 8000c32:	af00      	add	r7, sp, #0

#if DEBUG
printf("Ethernet Initializing...\r\n");
 8000c34:	481c      	ldr	r0, [pc, #112]	; (8000ca8 <eth_init+0x78>)
 8000c36:	f004 fed5 	bl	80059e4 <puts>
#endif

	huart4.Instance = UART4;
 8000c3a:	4b1c      	ldr	r3, [pc, #112]	; (8000cac <eth_init+0x7c>)
 8000c3c:	4a1c      	ldr	r2, [pc, #112]	; (8000cb0 <eth_init+0x80>)
 8000c3e:	601a      	str	r2, [r3, #0]
	huart4.Init.BaudRate = 115200;
 8000c40:	4b1a      	ldr	r3, [pc, #104]	; (8000cac <eth_init+0x7c>)
 8000c42:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8000c46:	605a      	str	r2, [r3, #4]
	huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8000c48:	4b18      	ldr	r3, [pc, #96]	; (8000cac <eth_init+0x7c>)
 8000c4a:	2200      	movs	r2, #0
 8000c4c:	609a      	str	r2, [r3, #8]
	huart4.Init.StopBits = UART_STOPBITS_1;
 8000c4e:	4b17      	ldr	r3, [pc, #92]	; (8000cac <eth_init+0x7c>)
 8000c50:	2200      	movs	r2, #0
 8000c52:	60da      	str	r2, [r3, #12]
	huart4.Init.Parity = UART_PARITY_NONE;
 8000c54:	4b15      	ldr	r3, [pc, #84]	; (8000cac <eth_init+0x7c>)
 8000c56:	2200      	movs	r2, #0
 8000c58:	611a      	str	r2, [r3, #16]
	huart4.Init.Mode = UART_MODE_TX_RX;
 8000c5a:	4b14      	ldr	r3, [pc, #80]	; (8000cac <eth_init+0x7c>)
 8000c5c:	220c      	movs	r2, #12
 8000c5e:	615a      	str	r2, [r3, #20]
	huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8000c60:	4b12      	ldr	r3, [pc, #72]	; (8000cac <eth_init+0x7c>)
 8000c62:	2200      	movs	r2, #0
 8000c64:	619a      	str	r2, [r3, #24]
	huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8000c66:	4b11      	ldr	r3, [pc, #68]	; (8000cac <eth_init+0x7c>)
 8000c68:	2200      	movs	r2, #0
 8000c6a:	61da      	str	r2, [r3, #28]

	ch9121_set_conf();
 8000c6c:	f7ff fcc2 	bl	80005f4 <ch9121_set_conf>

	if (HAL_UART_Init(&huart4) != HAL_OK) {
 8000c70:	480e      	ldr	r0, [pc, #56]	; (8000cac <eth_init+0x7c>)
 8000c72:	f002 ffef 	bl	8003c54 <HAL_UART_Init>
 8000c76:	4603      	mov	r3, r0
 8000c78:	2b00      	cmp	r3, #0
 8000c7a:	d001      	beq.n	8000c80 <eth_init+0x50>
		Error_Handler();
 8000c7c:	f000 fb64 	bl	8001348 <Error_Handler>
	}

	HAL_UARTEx_ReceiveToIdle_DMA(&huart4, eth_rx_buf, ETH_RX_BUF_SIZE);
 8000c80:	2280      	movs	r2, #128	; 0x80
 8000c82:	490c      	ldr	r1, [pc, #48]	; (8000cb4 <eth_init+0x84>)
 8000c84:	4809      	ldr	r0, [pc, #36]	; (8000cac <eth_init+0x7c>)
 8000c86:	f003 f91b 	bl	8003ec0 <HAL_UARTEx_ReceiveToIdle_DMA>
	__HAL_DMA_DISABLE_IT(&hdma_uart4_rx, DMA_IT_HT);
 8000c8a:	4b0b      	ldr	r3, [pc, #44]	; (8000cb8 <eth_init+0x88>)
 8000c8c:	681b      	ldr	r3, [r3, #0]
 8000c8e:	681a      	ldr	r2, [r3, #0]
 8000c90:	4b09      	ldr	r3, [pc, #36]	; (8000cb8 <eth_init+0x88>)
 8000c92:	681b      	ldr	r3, [r3, #0]
 8000c94:	f022 0208 	bic.w	r2, r2, #8
 8000c98:	601a      	str	r2, [r3, #0]

	eth_login(eth_local_id_buf, eth_local_pw_buf);
 8000c9a:	4908      	ldr	r1, [pc, #32]	; (8000cbc <eth_init+0x8c>)
 8000c9c:	4808      	ldr	r0, [pc, #32]	; (8000cc0 <eth_init+0x90>)
 8000c9e:	f000 f8a5 	bl	8000dec <eth_login>

	return 0;
 8000ca2:	2300      	movs	r3, #0
}
 8000ca4:	4618      	mov	r0, r3
 8000ca6:	bd80      	pop	{r7, pc}
 8000ca8:	08006cdc 	.word	0x08006cdc
 8000cac:	2000057c 	.word	0x2000057c
 8000cb0:	40004c00 	.word	0x40004c00
 8000cb4:	200001d4 	.word	0x200001d4
 8000cb8:	2000060c 	.word	0x2000060c
 8000cbc:	20000028 	.word	0x20000028
 8000cc0:	20000024 	.word	0x20000024

08000cc4 <eth_read>:
function:	eth_read
parameter:
	size: size of data received
Info:  Write data to ch9121(ethernet module) with uart
******************************************************************************/
void eth_read(uint16_t size) {
 8000cc4:	b580      	push	{r7, lr}
 8000cc6:	b084      	sub	sp, #16
 8000cc8:	af00      	add	r7, sp, #0
 8000cca:	4603      	mov	r3, r0
 8000ccc:	80fb      	strh	r3, [r7, #6]
	old_pos = new_pos;
 8000cce:	4b2b      	ldr	r3, [pc, #172]	; (8000d7c <eth_read+0xb8>)
 8000cd0:	881a      	ldrh	r2, [r3, #0]
 8000cd2:	4b2b      	ldr	r3, [pc, #172]	; (8000d80 <eth_read+0xbc>)
 8000cd4:	801a      	strh	r2, [r3, #0]
	if (old_pos + size > FULL_ETH_RX_BUF_SIZE) {
 8000cd6:	4b2a      	ldr	r3, [pc, #168]	; (8000d80 <eth_read+0xbc>)
 8000cd8:	881b      	ldrh	r3, [r3, #0]
 8000cda:	461a      	mov	r2, r3
 8000cdc:	88fb      	ldrh	r3, [r7, #6]
 8000cde:	4413      	add	r3, r2
 8000ce0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000ce4:	dd22      	ble.n	8000d2c <eth_read+0x68>
		uint16_t data_to_copy = FULL_ETH_RX_BUF_SIZE - old_pos;
 8000ce6:	4b26      	ldr	r3, [pc, #152]	; (8000d80 <eth_read+0xbc>)
 8000ce8:	881b      	ldrh	r3, [r3, #0]
 8000cea:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 8000cee:	81fb      	strh	r3, [r7, #14]
		memcpy ((uint8_t *)full_eth_rx_buf + old_pos, eth_rx_buf, data_to_copy);
 8000cf0:	4b23      	ldr	r3, [pc, #140]	; (8000d80 <eth_read+0xbc>)
 8000cf2:	881b      	ldrh	r3, [r3, #0]
 8000cf4:	461a      	mov	r2, r3
 8000cf6:	4b23      	ldr	r3, [pc, #140]	; (8000d84 <eth_read+0xc0>)
 8000cf8:	4413      	add	r3, r2
 8000cfa:	89fa      	ldrh	r2, [r7, #14]
 8000cfc:	4922      	ldr	r1, [pc, #136]	; (8000d88 <eth_read+0xc4>)
 8000cfe:	4618      	mov	r0, r3
 8000d00:	f005 f847 	bl	8005d92 <memcpy>
		old_pos = 0;
 8000d04:	4b1e      	ldr	r3, [pc, #120]	; (8000d80 <eth_read+0xbc>)
 8000d06:	2200      	movs	r2, #0
 8000d08:	801a      	strh	r2, [r3, #0]
		memcpy ((uint8_t *)full_eth_rx_buf, (uint8_t *)eth_rx_buf + data_to_copy, (size - data_to_copy));
 8000d0a:	89fb      	ldrh	r3, [r7, #14]
 8000d0c:	4a1e      	ldr	r2, [pc, #120]	; (8000d88 <eth_read+0xc4>)
 8000d0e:	1899      	adds	r1, r3, r2
 8000d10:	88fa      	ldrh	r2, [r7, #6]
 8000d12:	89fb      	ldrh	r3, [r7, #14]
 8000d14:	1ad3      	subs	r3, r2, r3
 8000d16:	461a      	mov	r2, r3
 8000d18:	481a      	ldr	r0, [pc, #104]	; (8000d84 <eth_read+0xc0>)
 8000d1a:	f005 f83a 	bl	8005d92 <memcpy>
		new_pos = (size - data_to_copy);
 8000d1e:	88fa      	ldrh	r2, [r7, #6]
 8000d20:	89fb      	ldrh	r3, [r7, #14]
 8000d22:	1ad3      	subs	r3, r2, r3
 8000d24:	b29a      	uxth	r2, r3
 8000d26:	4b15      	ldr	r3, [pc, #84]	; (8000d7c <eth_read+0xb8>)
 8000d28:	801a      	strh	r2, [r3, #0]
 8000d2a:	e010      	b.n	8000d4e <eth_read+0x8a>
	}
	else {
		memcpy ((uint8_t *)full_eth_rx_buf + old_pos, eth_rx_buf, size);
 8000d2c:	4b14      	ldr	r3, [pc, #80]	; (8000d80 <eth_read+0xbc>)
 8000d2e:	881b      	ldrh	r3, [r3, #0]
 8000d30:	461a      	mov	r2, r3
 8000d32:	4b14      	ldr	r3, [pc, #80]	; (8000d84 <eth_read+0xc0>)
 8000d34:	4413      	add	r3, r2
 8000d36:	88fa      	ldrh	r2, [r7, #6]
 8000d38:	4913      	ldr	r1, [pc, #76]	; (8000d88 <eth_read+0xc4>)
 8000d3a:	4618      	mov	r0, r3
 8000d3c:	f005 f829 	bl	8005d92 <memcpy>
		new_pos = size + old_pos;
 8000d40:	4b0f      	ldr	r3, [pc, #60]	; (8000d80 <eth_read+0xbc>)
 8000d42:	881a      	ldrh	r2, [r3, #0]
 8000d44:	88fb      	ldrh	r3, [r7, #6]
 8000d46:	4413      	add	r3, r2
 8000d48:	b29a      	uxth	r2, r3
 8000d4a:	4b0c      	ldr	r3, [pc, #48]	; (8000d7c <eth_read+0xb8>)
 8000d4c:	801a      	strh	r2, [r3, #0]
	}

	HAL_UARTEx_ReceiveToIdle_DMA(&huart4, (uint8_t *) eth_rx_buf, ETH_RX_BUF_SIZE);
 8000d4e:	2280      	movs	r2, #128	; 0x80
 8000d50:	490d      	ldr	r1, [pc, #52]	; (8000d88 <eth_read+0xc4>)
 8000d52:	480e      	ldr	r0, [pc, #56]	; (8000d8c <eth_read+0xc8>)
 8000d54:	f003 f8b4 	bl	8003ec0 <HAL_UARTEx_ReceiveToIdle_DMA>
	__HAL_DMA_DISABLE_IT(&hdma_uart4_rx, DMA_IT_HT);
 8000d58:	4b0d      	ldr	r3, [pc, #52]	; (8000d90 <eth_read+0xcc>)
 8000d5a:	681b      	ldr	r3, [r3, #0]
 8000d5c:	681a      	ldr	r2, [r3, #0]
 8000d5e:	4b0c      	ldr	r3, [pc, #48]	; (8000d90 <eth_read+0xcc>)
 8000d60:	681b      	ldr	r3, [r3, #0]
 8000d62:	f022 0208 	bic.w	r2, r2, #8
 8000d66:	601a      	str	r2, [r3, #0]

#if DEBUG
printf("%s: %s\r\n", __func__, eth_rx_buf);
 8000d68:	4a07      	ldr	r2, [pc, #28]	; (8000d88 <eth_read+0xc4>)
 8000d6a:	490a      	ldr	r1, [pc, #40]	; (8000d94 <eth_read+0xd0>)
 8000d6c:	480a      	ldr	r0, [pc, #40]	; (8000d98 <eth_read+0xd4>)
 8000d6e:	f004 fdd3 	bl	8005918 <iprintf>
#endif

}
 8000d72:	bf00      	nop
 8000d74:	3710      	adds	r7, #16
 8000d76:	46bd      	mov	sp, r7
 8000d78:	bd80      	pop	{r7, pc}
 8000d7a:	bf00      	nop
 8000d7c:	200001d0 	.word	0x200001d0
 8000d80:	200001ce 	.word	0x200001ce
 8000d84:	20000254 	.word	0x20000254
 8000d88:	200001d4 	.word	0x200001d4
 8000d8c:	2000057c 	.word	0x2000057c
 8000d90:	2000060c 	.word	0x2000060c
 8000d94:	08006dd4 	.word	0x08006dd4
 8000d98:	08006cf8 	.word	0x08006cf8

08000d9c <eth_write>:
parameter:
	buf: string data
	len: length of string data
Info:  Write data to ch9121(ethernet module) with uart
******************************************************************************/
uint8_t eth_write(uint8_t *buf, uint16_t len) {
 8000d9c:	b580      	push	{r7, lr}
 8000d9e:	b082      	sub	sp, #8
 8000da0:	af00      	add	r7, sp, #0
 8000da2:	6078      	str	r0, [r7, #4]
 8000da4:	460b      	mov	r3, r1
 8000da6:	807b      	strh	r3, [r7, #2]
	if(HAL_UART_Transmit_IT(&huart4, (uint8_t *)buf, strlen((uint8_t *)buf))!= HAL_OK) {
 8000da8:	6878      	ldr	r0, [r7, #4]
 8000daa:	f7ff fa2b 	bl	8000204 <strlen>
 8000dae:	4603      	mov	r3, r0
 8000db0:	b29b      	uxth	r3, r3
 8000db2:	461a      	mov	r2, r3
 8000db4:	6879      	ldr	r1, [r7, #4]
 8000db6:	480a      	ldr	r0, [pc, #40]	; (8000de0 <eth_write+0x44>)
 8000db8:	f003 f827 	bl	8003e0a <HAL_UART_Transmit_IT>
 8000dbc:	4603      	mov	r3, r0
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d004      	beq.n	8000dcc <eth_write+0x30>
		printf("FAIL TO TRANSMIT..\r\n");
 8000dc2:	4808      	ldr	r0, [pc, #32]	; (8000de4 <eth_write+0x48>)
 8000dc4:	f004 fe0e 	bl	80059e4 <puts>
		return 1;
 8000dc8:	2301      	movs	r3, #1
 8000dca:	e004      	b.n	8000dd6 <eth_write+0x3a>
	}
	printf("%s\r\n", buf);
 8000dcc:	6879      	ldr	r1, [r7, #4]
 8000dce:	4806      	ldr	r0, [pc, #24]	; (8000de8 <eth_write+0x4c>)
 8000dd0:	f004 fda2 	bl	8005918 <iprintf>
	return 0;
 8000dd4:	2300      	movs	r3, #0
}
 8000dd6:	4618      	mov	r0, r3
 8000dd8:	3708      	adds	r7, #8
 8000dda:	46bd      	mov	sp, r7
 8000ddc:	bd80      	pop	{r7, pc}
 8000dde:	bf00      	nop
 8000de0:	2000057c 	.word	0x2000057c
 8000de4:	08006d04 	.word	0x08006d04
 8000de8:	08006d18 	.word	0x08006d18

08000dec <eth_login>:
function:	eth_login
parameter:
	buf: string data
Info:  Send data to destination
******************************************************************************/
uint8_t eth_login(uint8_t *id, uint8_t *pw) {
 8000dec:	b580      	push	{r7, lr}
 8000dee:	b082      	sub	sp, #8
 8000df0:	af00      	add	r7, sp, #0
 8000df2:	6078      	str	r0, [r7, #4]
 8000df4:	6039      	str	r1, [r7, #0]
	sprintf((uint8_t *)eth_login_buf, "[%s:%s]", id, pw);
 8000df6:	683b      	ldr	r3, [r7, #0]
 8000df8:	687a      	ldr	r2, [r7, #4]
 8000dfa:	490f      	ldr	r1, [pc, #60]	; (8000e38 <eth_login+0x4c>)
 8000dfc:	480f      	ldr	r0, [pc, #60]	; (8000e3c <eth_login+0x50>)
 8000dfe:	f004 fdf9 	bl	80059f4 <siprintf>
	if(eth_write(eth_login_buf, strlen((uint8_t *)eth_login_buf))) {
 8000e02:	480e      	ldr	r0, [pc, #56]	; (8000e3c <eth_login+0x50>)
 8000e04:	f7ff f9fe 	bl	8000204 <strlen>
 8000e08:	4603      	mov	r3, r0
 8000e0a:	b29b      	uxth	r3, r3
 8000e0c:	4619      	mov	r1, r3
 8000e0e:	480b      	ldr	r0, [pc, #44]	; (8000e3c <eth_login+0x50>)
 8000e10:	f7ff ffc4 	bl	8000d9c <eth_write>
 8000e14:	4603      	mov	r3, r0
 8000e16:	2b00      	cmp	r3, #0
 8000e18:	d004      	beq.n	8000e24 <eth_login+0x38>
		printf("Fail to login..\r\n");
 8000e1a:	4809      	ldr	r0, [pc, #36]	; (8000e40 <eth_login+0x54>)
 8000e1c:	f004 fde2 	bl	80059e4 <puts>
		return 1;
 8000e20:	2301      	movs	r3, #1
 8000e22:	e005      	b.n	8000e30 <eth_login+0x44>
	}
	memset(eth_login_buf, 0, sizeof(uint8_t) * ETH_LOGIN_BUF_SIZE);
 8000e24:	2210      	movs	r2, #16
 8000e26:	2100      	movs	r1, #0
 8000e28:	4804      	ldr	r0, [pc, #16]	; (8000e3c <eth_login+0x50>)
 8000e2a:	f004 fedb 	bl	8005be4 <memset>
	return 0;
 8000e2e:	2300      	movs	r3, #0
}
 8000e30:	4618      	mov	r0, r3
 8000e32:	3708      	adds	r7, #8
 8000e34:	46bd      	mov	sp, r7
 8000e36:	bd80      	pop	{r7, pc}
 8000e38:	08006d20 	.word	0x08006d20
 8000e3c:	200000bc 	.word	0x200000bc
 8000e40:	08006d28 	.word	0x08006d28

08000e44 <eth_send_data>:
function:	eth_send_data
parameter:
	buf: string data
Info:  Send data to destination
******************************************************************************/
uint8_t eth_send_data(uint8_t *buf) {
 8000e44:	b580      	push	{r7, lr}
 8000e46:	b082      	sub	sp, #8
 8000e48:	af00      	add	r7, sp, #0
 8000e4a:	6078      	str	r0, [r7, #4]
	if (!strlen(buf)) {
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	781b      	ldrb	r3, [r3, #0]
 8000e50:	2b00      	cmp	r3, #0
 8000e52:	d104      	bne.n	8000e5e <eth_send_data+0x1a>
		printf("Send data is empty..\r\n");
 8000e54:	4813      	ldr	r0, [pc, #76]	; (8000ea4 <eth_send_data+0x60>)
 8000e56:	f004 fdc5 	bl	80059e4 <puts>
		return 1;
 8000e5a:	2301      	movs	r3, #1
 8000e5c:	e01d      	b.n	8000e9a <eth_send_data+0x56>
	}
	sprintf((uint8_t *)eth_send_buf, "[%s]%s\n", eth_dest_id_buf, buf);
 8000e5e:	687b      	ldr	r3, [r7, #4]
 8000e60:	4a11      	ldr	r2, [pc, #68]	; (8000ea8 <eth_send_data+0x64>)
 8000e62:	4912      	ldr	r1, [pc, #72]	; (8000eac <eth_send_data+0x68>)
 8000e64:	4812      	ldr	r0, [pc, #72]	; (8000eb0 <eth_send_data+0x6c>)
 8000e66:	f004 fdc5 	bl	80059f4 <siprintf>
	if(eth_write(eth_send_buf, strlen((char *)eth_send_buf))) {
 8000e6a:	4811      	ldr	r0, [pc, #68]	; (8000eb0 <eth_send_data+0x6c>)
 8000e6c:	f7ff f9ca 	bl	8000204 <strlen>
 8000e70:	4603      	mov	r3, r0
 8000e72:	b29b      	uxth	r3, r3
 8000e74:	4619      	mov	r1, r3
 8000e76:	480e      	ldr	r0, [pc, #56]	; (8000eb0 <eth_send_data+0x6c>)
 8000e78:	f7ff ff90 	bl	8000d9c <eth_write>
 8000e7c:	4603      	mov	r3, r0
 8000e7e:	2b00      	cmp	r3, #0
 8000e80:	d004      	beq.n	8000e8c <eth_send_data+0x48>
		printf("Fail to send data..\r\n");
 8000e82:	480c      	ldr	r0, [pc, #48]	; (8000eb4 <eth_send_data+0x70>)
 8000e84:	f004 fdae 	bl	80059e4 <puts>
		return 1;
 8000e88:	2301      	movs	r3, #1
 8000e8a:	e006      	b.n	8000e9a <eth_send_data+0x56>
	}
	memset(eth_send_buf, 0, sizeof(uint8_t) * ETH_SEND_BUF_SIZE);
 8000e8c:	f44f 7280 	mov.w	r2, #256	; 0x100
 8000e90:	2100      	movs	r1, #0
 8000e92:	4807      	ldr	r0, [pc, #28]	; (8000eb0 <eth_send_data+0x6c>)
 8000e94:	f004 fea6 	bl	8005be4 <memset>
	return 0;
 8000e98:	2300      	movs	r3, #0
}
 8000e9a:	4618      	mov	r0, r3
 8000e9c:	3708      	adds	r7, #8
 8000e9e:	46bd      	mov	sp, r7
 8000ea0:	bd80      	pop	{r7, pc}
 8000ea2:	bf00      	nop
 8000ea4:	08006d3c 	.word	0x08006d3c
 8000ea8:	20000030 	.word	0x20000030
 8000eac:	08006d54 	.word	0x08006d54
 8000eb0:	200000cc 	.word	0x200000cc
 8000eb4:	08006d5c 	.word	0x08006d5c

08000eb8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eb8:	b580      	push	{r7, lr}
 8000eba:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ebc:	f000 fe8c 	bl	8001bd8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ec0:	f000 f810 	bl	8000ee4 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000ec4:	f000 f968 	bl	8001198 <MX_GPIO_Init>
  MX_DMA_Init();
 8000ec8:	f000 f946 	bl	8001158 <MX_DMA_Init>
  MX_ETH_Init();
 8000ecc:	f000 f874 	bl	8000fb8 <MX_ETH_Init>
  MX_UART4_Init();
 8000ed0:	f000 f8c0 	bl	8001054 <MX_UART4_Init>
  MX_USART3_UART_Init();
 8000ed4:	f000 f8e8 	bl	80010a8 <MX_USART3_UART_Init>
  MX_USB_OTG_FS_PCD_Init();
 8000ed8:	f000 f910 	bl	80010fc <MX_USB_OTG_FS_PCD_Init>
  /* USER CODE BEGIN 2 */
  application();
 8000edc:	f7ff fb7c 	bl	80005d8 <application>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000ee0:	e7fe      	b.n	8000ee0 <main+0x28>
	...

08000ee4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ee4:	b580      	push	{r7, lr}
 8000ee6:	b094      	sub	sp, #80	; 0x50
 8000ee8:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000eea:	f107 0320 	add.w	r3, r7, #32
 8000eee:	2230      	movs	r2, #48	; 0x30
 8000ef0:	2100      	movs	r1, #0
 8000ef2:	4618      	mov	r0, r3
 8000ef4:	f004 fe76 	bl	8005be4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ef8:	f107 030c 	add.w	r3, r7, #12
 8000efc:	2200      	movs	r2, #0
 8000efe:	601a      	str	r2, [r3, #0]
 8000f00:	605a      	str	r2, [r3, #4]
 8000f02:	609a      	str	r2, [r3, #8]
 8000f04:	60da      	str	r2, [r3, #12]
 8000f06:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000f08:	2300      	movs	r3, #0
 8000f0a:	60bb      	str	r3, [r7, #8]
 8000f0c:	4b28      	ldr	r3, [pc, #160]	; (8000fb0 <SystemClock_Config+0xcc>)
 8000f0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f10:	4a27      	ldr	r2, [pc, #156]	; (8000fb0 <SystemClock_Config+0xcc>)
 8000f12:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000f16:	6413      	str	r3, [r2, #64]	; 0x40
 8000f18:	4b25      	ldr	r3, [pc, #148]	; (8000fb0 <SystemClock_Config+0xcc>)
 8000f1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000f1c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000f20:	60bb      	str	r3, [r7, #8]
 8000f22:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000f24:	2300      	movs	r3, #0
 8000f26:	607b      	str	r3, [r7, #4]
 8000f28:	4b22      	ldr	r3, [pc, #136]	; (8000fb4 <SystemClock_Config+0xd0>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	4a21      	ldr	r2, [pc, #132]	; (8000fb4 <SystemClock_Config+0xd0>)
 8000f2e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000f32:	6013      	str	r3, [r2, #0]
 8000f34:	4b1f      	ldr	r3, [pc, #124]	; (8000fb4 <SystemClock_Config+0xd0>)
 8000f36:	681b      	ldr	r3, [r3, #0]
 8000f38:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000f3c:	607b      	str	r3, [r7, #4]
 8000f3e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000f40:	2301      	movs	r3, #1
 8000f42:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 8000f44:	f44f 23a0 	mov.w	r3, #327680	; 0x50000
 8000f48:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000f4a:	2302      	movs	r3, #2
 8000f4c:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000f4e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000f52:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 4;
 8000f54:	2304      	movs	r3, #4
 8000f56:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 168;
 8000f58:	23a8      	movs	r3, #168	; 0xa8
 8000f5a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f5c:	2302      	movs	r3, #2
 8000f5e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 8000f60:	2307      	movs	r3, #7
 8000f62:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f64:	f107 0320 	add.w	r3, r7, #32
 8000f68:	4618      	mov	r0, r3
 8000f6a:	f002 f9db 	bl	8003324 <HAL_RCC_OscConfig>
 8000f6e:	4603      	mov	r3, r0
 8000f70:	2b00      	cmp	r3, #0
 8000f72:	d001      	beq.n	8000f78 <SystemClock_Config+0x94>
  {
    Error_Handler();
 8000f74:	f000 f9e8 	bl	8001348 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f78:	230f      	movs	r3, #15
 8000f7a:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f7c:	2302      	movs	r3, #2
 8000f7e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f80:	2300      	movs	r3, #0
 8000f82:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f84:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000f88:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000f8a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000f8e:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000f90:	f107 030c 	add.w	r3, r7, #12
 8000f94:	2105      	movs	r1, #5
 8000f96:	4618      	mov	r0, r3
 8000f98:	f002 fc3c 	bl	8003814 <HAL_RCC_ClockConfig>
 8000f9c:	4603      	mov	r3, r0
 8000f9e:	2b00      	cmp	r3, #0
 8000fa0:	d001      	beq.n	8000fa6 <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8000fa2:	f000 f9d1 	bl	8001348 <Error_Handler>
  }
}
 8000fa6:	bf00      	nop
 8000fa8:	3750      	adds	r7, #80	; 0x50
 8000faa:	46bd      	mov	sp, r7
 8000fac:	bd80      	pop	{r7, pc}
 8000fae:	bf00      	nop
 8000fb0:	40023800 	.word	0x40023800
 8000fb4:	40007000 	.word	0x40007000

08000fb8 <MX_ETH_Init>:
  * @brief ETH Initialization Function
  * @param None
  * @retval None
  */
static void MX_ETH_Init(void)
{
 8000fb8:	b580      	push	{r7, lr}
 8000fba:	af00      	add	r7, sp, #0
   static uint8_t MACAddr[6];

  /* USER CODE BEGIN ETH_Init 1 */

  /* USER CODE END ETH_Init 1 */
  heth.Instance = ETH;
 8000fbc:	4b1f      	ldr	r3, [pc, #124]	; (800103c <MX_ETH_Init+0x84>)
 8000fbe:	4a20      	ldr	r2, [pc, #128]	; (8001040 <MX_ETH_Init+0x88>)
 8000fc0:	601a      	str	r2, [r3, #0]
  MACAddr[0] = 0x00;
 8000fc2:	4b20      	ldr	r3, [pc, #128]	; (8001044 <MX_ETH_Init+0x8c>)
 8000fc4:	2200      	movs	r2, #0
 8000fc6:	701a      	strb	r2, [r3, #0]
  MACAddr[1] = 0x80;
 8000fc8:	4b1e      	ldr	r3, [pc, #120]	; (8001044 <MX_ETH_Init+0x8c>)
 8000fca:	2280      	movs	r2, #128	; 0x80
 8000fcc:	705a      	strb	r2, [r3, #1]
  MACAddr[2] = 0xE1;
 8000fce:	4b1d      	ldr	r3, [pc, #116]	; (8001044 <MX_ETH_Init+0x8c>)
 8000fd0:	22e1      	movs	r2, #225	; 0xe1
 8000fd2:	709a      	strb	r2, [r3, #2]
  MACAddr[3] = 0x00;
 8000fd4:	4b1b      	ldr	r3, [pc, #108]	; (8001044 <MX_ETH_Init+0x8c>)
 8000fd6:	2200      	movs	r2, #0
 8000fd8:	70da      	strb	r2, [r3, #3]
  MACAddr[4] = 0x00;
 8000fda:	4b1a      	ldr	r3, [pc, #104]	; (8001044 <MX_ETH_Init+0x8c>)
 8000fdc:	2200      	movs	r2, #0
 8000fde:	711a      	strb	r2, [r3, #4]
  MACAddr[5] = 0x00;
 8000fe0:	4b18      	ldr	r3, [pc, #96]	; (8001044 <MX_ETH_Init+0x8c>)
 8000fe2:	2200      	movs	r2, #0
 8000fe4:	715a      	strb	r2, [r3, #5]
  heth.Init.MACAddr = &MACAddr[0];
 8000fe6:	4b15      	ldr	r3, [pc, #84]	; (800103c <MX_ETH_Init+0x84>)
 8000fe8:	4a16      	ldr	r2, [pc, #88]	; (8001044 <MX_ETH_Init+0x8c>)
 8000fea:	605a      	str	r2, [r3, #4]
  heth.Init.MediaInterface = HAL_ETH_RMII_MODE;
 8000fec:	4b13      	ldr	r3, [pc, #76]	; (800103c <MX_ETH_Init+0x84>)
 8000fee:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 8000ff2:	609a      	str	r2, [r3, #8]
  heth.Init.TxDesc = DMATxDscrTab;
 8000ff4:	4b11      	ldr	r3, [pc, #68]	; (800103c <MX_ETH_Init+0x84>)
 8000ff6:	4a14      	ldr	r2, [pc, #80]	; (8001048 <MX_ETH_Init+0x90>)
 8000ff8:	60da      	str	r2, [r3, #12]
  heth.Init.RxDesc = DMARxDscrTab;
 8000ffa:	4b10      	ldr	r3, [pc, #64]	; (800103c <MX_ETH_Init+0x84>)
 8000ffc:	4a13      	ldr	r2, [pc, #76]	; (800104c <MX_ETH_Init+0x94>)
 8000ffe:	611a      	str	r2, [r3, #16]
  heth.Init.RxBuffLen = 1524;
 8001000:	4b0e      	ldr	r3, [pc, #56]	; (800103c <MX_ETH_Init+0x84>)
 8001002:	f240 52f4 	movw	r2, #1524	; 0x5f4
 8001006:	615a      	str	r2, [r3, #20]

  /* USER CODE BEGIN MACADDRESS */

  /* USER CODE END MACADDRESS */

  if (HAL_ETH_Init(&heth) != HAL_OK)
 8001008:	480c      	ldr	r0, [pc, #48]	; (800103c <MX_ETH_Init+0x84>)
 800100a:	f001 fb8f 	bl	800272c <HAL_ETH_Init>
 800100e:	4603      	mov	r3, r0
 8001010:	2b00      	cmp	r3, #0
 8001012:	d001      	beq.n	8001018 <MX_ETH_Init+0x60>
  {
    Error_Handler();
 8001014:	f000 f998 	bl	8001348 <Error_Handler>
  }

  memset(&TxConfig, 0 , sizeof(ETH_TxPacketConfig));
 8001018:	2238      	movs	r2, #56	; 0x38
 800101a:	2100      	movs	r1, #0
 800101c:	480c      	ldr	r0, [pc, #48]	; (8001050 <MX_ETH_Init+0x98>)
 800101e:	f004 fde1 	bl	8005be4 <memset>
  TxConfig.Attributes = ETH_TX_PACKETS_FEATURES_CSUM | ETH_TX_PACKETS_FEATURES_CRCPAD;
 8001022:	4b0b      	ldr	r3, [pc, #44]	; (8001050 <MX_ETH_Init+0x98>)
 8001024:	2221      	movs	r2, #33	; 0x21
 8001026:	601a      	str	r2, [r3, #0]
  TxConfig.ChecksumCtrl = ETH_CHECKSUM_IPHDR_PAYLOAD_INSERT_PHDR_CALC;
 8001028:	4b09      	ldr	r3, [pc, #36]	; (8001050 <MX_ETH_Init+0x98>)
 800102a:	f44f 0240 	mov.w	r2, #12582912	; 0xc00000
 800102e:	615a      	str	r2, [r3, #20]
  TxConfig.CRCPadCtrl = ETH_CRC_PAD_INSERT;
 8001030:	4b07      	ldr	r3, [pc, #28]	; (8001050 <MX_ETH_Init+0x98>)
 8001032:	2200      	movs	r2, #0
 8001034:	611a      	str	r2, [r3, #16]
  /* USER CODE BEGIN ETH_Init 2 */

  /* USER CODE END ETH_Init 2 */

}
 8001036:	bf00      	nop
 8001038:	bd80      	pop	{r7, pc}
 800103a:	bf00      	nop
 800103c:	200004cc 	.word	0x200004cc
 8001040:	40028000 	.word	0x40028000
 8001044:	20000b50 	.word	0x20000b50
 8001048:	2000042c 	.word	0x2000042c
 800104c:	2000038c 	.word	0x2000038c
 8001050:	20000354 	.word	0x20000354

08001054 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 8001054:	b580      	push	{r7, lr}
 8001056:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 8001058:	4b11      	ldr	r3, [pc, #68]	; (80010a0 <MX_UART4_Init+0x4c>)
 800105a:	4a12      	ldr	r2, [pc, #72]	; (80010a4 <MX_UART4_Init+0x50>)
 800105c:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 9600;
 800105e:	4b10      	ldr	r3, [pc, #64]	; (80010a0 <MX_UART4_Init+0x4c>)
 8001060:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8001064:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8001066:	4b0e      	ldr	r3, [pc, #56]	; (80010a0 <MX_UART4_Init+0x4c>)
 8001068:	2200      	movs	r2, #0
 800106a:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 800106c:	4b0c      	ldr	r3, [pc, #48]	; (80010a0 <MX_UART4_Init+0x4c>)
 800106e:	2200      	movs	r2, #0
 8001070:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 8001072:	4b0b      	ldr	r3, [pc, #44]	; (80010a0 <MX_UART4_Init+0x4c>)
 8001074:	2200      	movs	r2, #0
 8001076:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 8001078:	4b09      	ldr	r3, [pc, #36]	; (80010a0 <MX_UART4_Init+0x4c>)
 800107a:	220c      	movs	r2, #12
 800107c:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800107e:	4b08      	ldr	r3, [pc, #32]	; (80010a0 <MX_UART4_Init+0x4c>)
 8001080:	2200      	movs	r2, #0
 8001082:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8001084:	4b06      	ldr	r3, [pc, #24]	; (80010a0 <MX_UART4_Init+0x4c>)
 8001086:	2200      	movs	r2, #0
 8001088:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart4) != HAL_OK)
 800108a:	4805      	ldr	r0, [pc, #20]	; (80010a0 <MX_UART4_Init+0x4c>)
 800108c:	f002 fde2 	bl	8003c54 <HAL_UART_Init>
 8001090:	4603      	mov	r3, r0
 8001092:	2b00      	cmp	r3, #0
 8001094:	d001      	beq.n	800109a <MX_UART4_Init+0x46>
  {
    Error_Handler();
 8001096:	f000 f957 	bl	8001348 <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 800109a:	bf00      	nop
 800109c:	bd80      	pop	{r7, pc}
 800109e:	bf00      	nop
 80010a0:	2000057c 	.word	0x2000057c
 80010a4:	40004c00 	.word	0x40004c00

080010a8 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80010a8:	b580      	push	{r7, lr}
 80010aa:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80010ac:	4b11      	ldr	r3, [pc, #68]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010ae:	4a12      	ldr	r2, [pc, #72]	; (80010f8 <MX_USART3_UART_Init+0x50>)
 80010b0:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80010b2:	4b10      	ldr	r3, [pc, #64]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010b4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80010b8:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80010ba:	4b0e      	ldr	r3, [pc, #56]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010bc:	2200      	movs	r2, #0
 80010be:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80010c0:	4b0c      	ldr	r3, [pc, #48]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010c2:	2200      	movs	r2, #0
 80010c4:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80010c6:	4b0b      	ldr	r3, [pc, #44]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010c8:	2200      	movs	r2, #0
 80010ca:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80010cc:	4b09      	ldr	r3, [pc, #36]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010ce:	220c      	movs	r2, #12
 80010d0:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80010d2:	4b08      	ldr	r3, [pc, #32]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010d4:	2200      	movs	r2, #0
 80010d6:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80010d8:	4b06      	ldr	r3, [pc, #24]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010da:	2200      	movs	r2, #0
 80010dc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80010de:	4805      	ldr	r0, [pc, #20]	; (80010f4 <MX_USART3_UART_Init+0x4c>)
 80010e0:	f002 fdb8 	bl	8003c54 <HAL_UART_Init>
 80010e4:	4603      	mov	r3, r0
 80010e6:	2b00      	cmp	r3, #0
 80010e8:	d001      	beq.n	80010ee <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 80010ea:	f000 f92d 	bl	8001348 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 80010ee:	bf00      	nop
 80010f0:	bd80      	pop	{r7, pc}
 80010f2:	bf00      	nop
 80010f4:	200005c4 	.word	0x200005c4
 80010f8:	40004800 	.word	0x40004800

080010fc <MX_USB_OTG_FS_PCD_Init>:
  * @brief USB_OTG_FS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_FS_PCD_Init(void)
{
 80010fc:	b580      	push	{r7, lr}
 80010fe:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_FS_Init 0 */

  /* USER CODE BEGIN USB_OTG_FS_Init 1 */

  /* USER CODE END USB_OTG_FS_Init 1 */
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 8001100:	4b14      	ldr	r3, [pc, #80]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001102:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 8001106:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 4;
 8001108:	4b12      	ldr	r3, [pc, #72]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800110a:	2204      	movs	r2, #4
 800110c:	711a      	strb	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.speed = PCD_SPEED_FULL;
 800110e:	4b11      	ldr	r3, [pc, #68]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001110:	2202      	movs	r2, #2
 8001112:	71da      	strb	r2, [r3, #7]
  hpcd_USB_OTG_FS.Init.dma_enable = DISABLE;
 8001114:	4b0f      	ldr	r3, [pc, #60]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001116:	2200      	movs	r2, #0
 8001118:	719a      	strb	r2, [r3, #6]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 800111a:	4b0e      	ldr	r3, [pc, #56]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800111c:	2202      	movs	r2, #2
 800111e:	725a      	strb	r2, [r3, #9]
  hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 8001120:	4b0c      	ldr	r3, [pc, #48]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001122:	2201      	movs	r2, #1
 8001124:	729a      	strb	r2, [r3, #10]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 8001126:	4b0b      	ldr	r3, [pc, #44]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001128:	2200      	movs	r2, #0
 800112a:	72da      	strb	r2, [r3, #11]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 800112c:	4b09      	ldr	r3, [pc, #36]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800112e:	2200      	movs	r2, #0
 8001130:	731a      	strb	r2, [r3, #12]
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 8001132:	4b08      	ldr	r3, [pc, #32]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001134:	2201      	movs	r2, #1
 8001136:	739a      	strb	r2, [r3, #14]
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 8001138:	4b06      	ldr	r3, [pc, #24]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 800113a:	2200      	movs	r2, #0
 800113c:	73da      	strb	r2, [r3, #15]
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 800113e:	4805      	ldr	r0, [pc, #20]	; (8001154 <MX_USB_OTG_FS_PCD_Init+0x58>)
 8001140:	f001 ffe1 	bl	8003106 <HAL_PCD_Init>
 8001144:	4603      	mov	r3, r0
 8001146:	2b00      	cmp	r3, #0
 8001148:	d001      	beq.n	800114e <MX_USB_OTG_FS_PCD_Init+0x52>
  {
    Error_Handler();
 800114a:	f000 f8fd 	bl	8001348 <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_FS_Init 2 */

  /* USER CODE END USB_OTG_FS_Init 2 */

}
 800114e:	bf00      	nop
 8001150:	bd80      	pop	{r7, pc}
 8001152:	bf00      	nop
 8001154:	2000066c 	.word	0x2000066c

08001158 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 8001158:	b580      	push	{r7, lr}
 800115a:	b082      	sub	sp, #8
 800115c:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 800115e:	2300      	movs	r3, #0
 8001160:	607b      	str	r3, [r7, #4]
 8001162:	4b0c      	ldr	r3, [pc, #48]	; (8001194 <MX_DMA_Init+0x3c>)
 8001164:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001166:	4a0b      	ldr	r2, [pc, #44]	; (8001194 <MX_DMA_Init+0x3c>)
 8001168:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800116c:	6313      	str	r3, [r2, #48]	; 0x30
 800116e:	4b09      	ldr	r3, [pc, #36]	; (8001194 <MX_DMA_Init+0x3c>)
 8001170:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001172:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001176:	607b      	str	r3, [r7, #4]
 8001178:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream2_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream2_IRQn, 0, 0);
 800117a:	2200      	movs	r2, #0
 800117c:	2100      	movs	r1, #0
 800117e:	200d      	movs	r0, #13
 8001180:	f000 fe9b 	bl	8001eba <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream2_IRQn);
 8001184:	200d      	movs	r0, #13
 8001186:	f000 feb4 	bl	8001ef2 <HAL_NVIC_EnableIRQ>

}
 800118a:	bf00      	nop
 800118c:	3708      	adds	r7, #8
 800118e:	46bd      	mov	sp, r7
 8001190:	bd80      	pop	{r7, pc}
 8001192:	bf00      	nop
 8001194:	40023800 	.word	0x40023800

08001198 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001198:	b580      	push	{r7, lr}
 800119a:	b08c      	sub	sp, #48	; 0x30
 800119c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800119e:	f107 031c 	add.w	r3, r7, #28
 80011a2:	2200      	movs	r2, #0
 80011a4:	601a      	str	r2, [r3, #0]
 80011a6:	605a      	str	r2, [r3, #4]
 80011a8:	609a      	str	r2, [r3, #8]
 80011aa:	60da      	str	r2, [r3, #12]
 80011ac:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80011ae:	2300      	movs	r3, #0
 80011b0:	61bb      	str	r3, [r7, #24]
 80011b2:	4b60      	ldr	r3, [pc, #384]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011b6:	4a5f      	ldr	r2, [pc, #380]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011b8:	f043 0304 	orr.w	r3, r3, #4
 80011bc:	6313      	str	r3, [r2, #48]	; 0x30
 80011be:	4b5d      	ldr	r3, [pc, #372]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011c2:	f003 0304 	and.w	r3, r3, #4
 80011c6:	61bb      	str	r3, [r7, #24]
 80011c8:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80011ca:	2300      	movs	r3, #0
 80011cc:	617b      	str	r3, [r7, #20]
 80011ce:	4b59      	ldr	r3, [pc, #356]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011d2:	4a58      	ldr	r2, [pc, #352]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011d4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80011d8:	6313      	str	r3, [r2, #48]	; 0x30
 80011da:	4b56      	ldr	r3, [pc, #344]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011de:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80011e2:	617b      	str	r3, [r7, #20]
 80011e4:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80011e6:	2300      	movs	r3, #0
 80011e8:	613b      	str	r3, [r7, #16]
 80011ea:	4b52      	ldr	r3, [pc, #328]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011ee:	4a51      	ldr	r2, [pc, #324]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011f0:	f043 0301 	orr.w	r3, r3, #1
 80011f4:	6313      	str	r3, [r2, #48]	; 0x30
 80011f6:	4b4f      	ldr	r3, [pc, #316]	; (8001334 <MX_GPIO_Init+0x19c>)
 80011f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80011fa:	f003 0301 	and.w	r3, r3, #1
 80011fe:	613b      	str	r3, [r7, #16]
 8001200:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001202:	2300      	movs	r3, #0
 8001204:	60fb      	str	r3, [r7, #12]
 8001206:	4b4b      	ldr	r3, [pc, #300]	; (8001334 <MX_GPIO_Init+0x19c>)
 8001208:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800120a:	4a4a      	ldr	r2, [pc, #296]	; (8001334 <MX_GPIO_Init+0x19c>)
 800120c:	f043 0302 	orr.w	r3, r3, #2
 8001210:	6313      	str	r3, [r2, #48]	; 0x30
 8001212:	4b48      	ldr	r3, [pc, #288]	; (8001334 <MX_GPIO_Init+0x19c>)
 8001214:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001216:	f003 0302 	and.w	r3, r3, #2
 800121a:	60fb      	str	r3, [r7, #12]
 800121c:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800121e:	2300      	movs	r3, #0
 8001220:	60bb      	str	r3, [r7, #8]
 8001222:	4b44      	ldr	r3, [pc, #272]	; (8001334 <MX_GPIO_Init+0x19c>)
 8001224:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001226:	4a43      	ldr	r2, [pc, #268]	; (8001334 <MX_GPIO_Init+0x19c>)
 8001228:	f043 0308 	orr.w	r3, r3, #8
 800122c:	6313      	str	r3, [r2, #48]	; 0x30
 800122e:	4b41      	ldr	r3, [pc, #260]	; (8001334 <MX_GPIO_Init+0x19c>)
 8001230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001232:	f003 0308 	and.w	r3, r3, #8
 8001236:	60bb      	str	r3, [r7, #8]
 8001238:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800123a:	2300      	movs	r3, #0
 800123c:	607b      	str	r3, [r7, #4]
 800123e:	4b3d      	ldr	r3, [pc, #244]	; (8001334 <MX_GPIO_Init+0x19c>)
 8001240:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001242:	4a3c      	ldr	r2, [pc, #240]	; (8001334 <MX_GPIO_Init+0x19c>)
 8001244:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001248:	6313      	str	r3, [r2, #48]	; 0x30
 800124a:	4b3a      	ldr	r3, [pc, #232]	; (8001334 <MX_GPIO_Init+0x19c>)
 800124c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800124e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001252:	607b      	str	r3, [r7, #4]
 8001254:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD1_Pin|LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 8001256:	2200      	movs	r2, #0
 8001258:	f244 0181 	movw	r1, #16513	; 0x4081
 800125c:	4836      	ldr	r0, [pc, #216]	; (8001338 <MX_GPIO_Init+0x1a0>)
 800125e:	f001 ff39 	bl	80030d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(USB_PowerSwitchOn_GPIO_Port, USB_PowerSwitchOn_Pin, GPIO_PIN_RESET);
 8001262:	2200      	movs	r2, #0
 8001264:	2140      	movs	r1, #64	; 0x40
 8001266:	4835      	ldr	r0, [pc, #212]	; (800133c <MX_GPIO_Init+0x1a4>)
 8001268:	f001 ff34 	bl	80030d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(CFG0_GPIO_Port, CFG0_Pin, GPIO_PIN_RESET);
 800126c:	2200      	movs	r2, #0
 800126e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001272:	4833      	ldr	r0, [pc, #204]	; (8001340 <MX_GPIO_Init+0x1a8>)
 8001274:	f001 ff2e 	bl	80030d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(RST1_GPIO_Port, RST1_Pin, GPIO_PIN_RESET);
 8001278:	2200      	movs	r2, #0
 800127a:	2104      	movs	r1, #4
 800127c:	4831      	ldr	r0, [pc, #196]	; (8001344 <MX_GPIO_Init+0x1ac>)
 800127e:	f001 ff29 	bl	80030d4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : USER_Btn_Pin */
  GPIO_InitStruct.Pin = USER_Btn_Pin;
 8001282:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001286:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001288:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800128c:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800128e:	2300      	movs	r3, #0
 8001290:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(USER_Btn_GPIO_Port, &GPIO_InitStruct);
 8001292:	f107 031c 	add.w	r3, r7, #28
 8001296:	4619      	mov	r1, r3
 8001298:	4829      	ldr	r0, [pc, #164]	; (8001340 <MX_GPIO_Init+0x1a8>)
 800129a:	f001 fd6f 	bl	8002d7c <HAL_GPIO_Init>

  /*Configure GPIO pins : LD1_Pin LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD1_Pin|LD3_Pin|LD2_Pin;
 800129e:	f244 0381 	movw	r3, #16513	; 0x4081
 80012a2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012a4:	2301      	movs	r3, #1
 80012a6:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012a8:	2300      	movs	r3, #0
 80012aa:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012ac:	2300      	movs	r3, #0
 80012ae:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80012b0:	f107 031c 	add.w	r3, r7, #28
 80012b4:	4619      	mov	r1, r3
 80012b6:	4820      	ldr	r0, [pc, #128]	; (8001338 <MX_GPIO_Init+0x1a0>)
 80012b8:	f001 fd60 	bl	8002d7c <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_PowerSwitchOn_Pin */
  GPIO_InitStruct.Pin = USB_PowerSwitchOn_Pin;
 80012bc:	2340      	movs	r3, #64	; 0x40
 80012be:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012c0:	2301      	movs	r3, #1
 80012c2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012c4:	2300      	movs	r3, #0
 80012c6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012c8:	2300      	movs	r3, #0
 80012ca:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(USB_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 80012cc:	f107 031c 	add.w	r3, r7, #28
 80012d0:	4619      	mov	r1, r3
 80012d2:	481a      	ldr	r0, [pc, #104]	; (800133c <MX_GPIO_Init+0x1a4>)
 80012d4:	f001 fd52 	bl	8002d7c <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_OverCurrent_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 80012d8:	2380      	movs	r3, #128	; 0x80
 80012da:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80012dc:	2300      	movs	r3, #0
 80012de:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012e0:	2300      	movs	r3, #0
 80012e2:	627b      	str	r3, [r7, #36]	; 0x24
  HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 80012e4:	f107 031c 	add.w	r3, r7, #28
 80012e8:	4619      	mov	r1, r3
 80012ea:	4814      	ldr	r0, [pc, #80]	; (800133c <MX_GPIO_Init+0x1a4>)
 80012ec:	f001 fd46 	bl	8002d7c <HAL_GPIO_Init>

  /*Configure GPIO pin : CFG0_Pin */
  GPIO_InitStruct.Pin = CFG0_Pin;
 80012f0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80012f4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012f6:	2301      	movs	r3, #1
 80012f8:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012fa:	2300      	movs	r3, #0
 80012fc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012fe:	2300      	movs	r3, #0
 8001300:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(CFG0_GPIO_Port, &GPIO_InitStruct);
 8001302:	f107 031c 	add.w	r3, r7, #28
 8001306:	4619      	mov	r1, r3
 8001308:	480d      	ldr	r0, [pc, #52]	; (8001340 <MX_GPIO_Init+0x1a8>)
 800130a:	f001 fd37 	bl	8002d7c <HAL_GPIO_Init>

  /*Configure GPIO pin : RST1_Pin */
  GPIO_InitStruct.Pin = RST1_Pin;
 800130e:	2304      	movs	r3, #4
 8001310:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001312:	2301      	movs	r3, #1
 8001314:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001316:	2300      	movs	r3, #0
 8001318:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800131a:	2300      	movs	r3, #0
 800131c:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(RST1_GPIO_Port, &GPIO_InitStruct);
 800131e:	f107 031c 	add.w	r3, r7, #28
 8001322:	4619      	mov	r1, r3
 8001324:	4807      	ldr	r0, [pc, #28]	; (8001344 <MX_GPIO_Init+0x1ac>)
 8001326:	f001 fd29 	bl	8002d7c <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800132a:	bf00      	nop
 800132c:	3730      	adds	r7, #48	; 0x30
 800132e:	46bd      	mov	sp, r7
 8001330:	bd80      	pop	{r7, pc}
 8001332:	bf00      	nop
 8001334:	40023800 	.word	0x40023800
 8001338:	40020400 	.word	0x40020400
 800133c:	40021800 	.word	0x40021800
 8001340:	40020800 	.word	0x40020800
 8001344:	40020c00 	.word	0x40020c00

08001348 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001348:	b480      	push	{r7}
 800134a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800134c:	b672      	cpsid	i
}
 800134e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001350:	e7fe      	b.n	8001350 <Error_Handler+0x8>
	...

08001354 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001354:	b480      	push	{r7}
 8001356:	b083      	sub	sp, #12
 8001358:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800135a:	2300      	movs	r3, #0
 800135c:	607b      	str	r3, [r7, #4]
 800135e:	4b10      	ldr	r3, [pc, #64]	; (80013a0 <HAL_MspInit+0x4c>)
 8001360:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001362:	4a0f      	ldr	r2, [pc, #60]	; (80013a0 <HAL_MspInit+0x4c>)
 8001364:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001368:	6453      	str	r3, [r2, #68]	; 0x44
 800136a:	4b0d      	ldr	r3, [pc, #52]	; (80013a0 <HAL_MspInit+0x4c>)
 800136c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800136e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001372:	607b      	str	r3, [r7, #4]
 8001374:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001376:	2300      	movs	r3, #0
 8001378:	603b      	str	r3, [r7, #0]
 800137a:	4b09      	ldr	r3, [pc, #36]	; (80013a0 <HAL_MspInit+0x4c>)
 800137c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800137e:	4a08      	ldr	r2, [pc, #32]	; (80013a0 <HAL_MspInit+0x4c>)
 8001380:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001384:	6413      	str	r3, [r2, #64]	; 0x40
 8001386:	4b06      	ldr	r3, [pc, #24]	; (80013a0 <HAL_MspInit+0x4c>)
 8001388:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800138a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800138e:	603b      	str	r3, [r7, #0]
 8001390:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001392:	bf00      	nop
 8001394:	370c      	adds	r7, #12
 8001396:	46bd      	mov	sp, r7
 8001398:	f85d 7b04 	ldr.w	r7, [sp], #4
 800139c:	4770      	bx	lr
 800139e:	bf00      	nop
 80013a0:	40023800 	.word	0x40023800

080013a4 <HAL_ETH_MspInit>:
* This function configures the hardware resources used in this example
* @param heth: ETH handle pointer
* @retval None
*/
void HAL_ETH_MspInit(ETH_HandleTypeDef* heth)
{
 80013a4:	b580      	push	{r7, lr}
 80013a6:	b08e      	sub	sp, #56	; 0x38
 80013a8:	af00      	add	r7, sp, #0
 80013aa:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013ac:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80013b0:	2200      	movs	r2, #0
 80013b2:	601a      	str	r2, [r3, #0]
 80013b4:	605a      	str	r2, [r3, #4]
 80013b6:	609a      	str	r2, [r3, #8]
 80013b8:	60da      	str	r2, [r3, #12]
 80013ba:	611a      	str	r2, [r3, #16]
  if(heth->Instance==ETH)
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	4a55      	ldr	r2, [pc, #340]	; (8001518 <HAL_ETH_MspInit+0x174>)
 80013c2:	4293      	cmp	r3, r2
 80013c4:	f040 80a4 	bne.w	8001510 <HAL_ETH_MspInit+0x16c>
  {
  /* USER CODE BEGIN ETH_MspInit 0 */

  /* USER CODE END ETH_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ETH_CLK_ENABLE();
 80013c8:	2300      	movs	r3, #0
 80013ca:	623b      	str	r3, [r7, #32]
 80013cc:	4b53      	ldr	r3, [pc, #332]	; (800151c <HAL_ETH_MspInit+0x178>)
 80013ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013d0:	4a52      	ldr	r2, [pc, #328]	; (800151c <HAL_ETH_MspInit+0x178>)
 80013d2:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80013d6:	6313      	str	r3, [r2, #48]	; 0x30
 80013d8:	4b50      	ldr	r3, [pc, #320]	; (800151c <HAL_ETH_MspInit+0x178>)
 80013da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013dc:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80013e0:	623b      	str	r3, [r7, #32]
 80013e2:	6a3b      	ldr	r3, [r7, #32]
 80013e4:	2300      	movs	r3, #0
 80013e6:	61fb      	str	r3, [r7, #28]
 80013e8:	4b4c      	ldr	r3, [pc, #304]	; (800151c <HAL_ETH_MspInit+0x178>)
 80013ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013ec:	4a4b      	ldr	r2, [pc, #300]	; (800151c <HAL_ETH_MspInit+0x178>)
 80013ee:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 80013f2:	6313      	str	r3, [r2, #48]	; 0x30
 80013f4:	4b49      	ldr	r3, [pc, #292]	; (800151c <HAL_ETH_MspInit+0x178>)
 80013f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80013f8:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 80013fc:	61fb      	str	r3, [r7, #28]
 80013fe:	69fb      	ldr	r3, [r7, #28]
 8001400:	2300      	movs	r3, #0
 8001402:	61bb      	str	r3, [r7, #24]
 8001404:	4b45      	ldr	r3, [pc, #276]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001406:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001408:	4a44      	ldr	r2, [pc, #272]	; (800151c <HAL_ETH_MspInit+0x178>)
 800140a:	f043 6300 	orr.w	r3, r3, #134217728	; 0x8000000
 800140e:	6313      	str	r3, [r2, #48]	; 0x30
 8001410:	4b42      	ldr	r3, [pc, #264]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001412:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001414:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8001418:	61bb      	str	r3, [r7, #24]
 800141a:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800141c:	2300      	movs	r3, #0
 800141e:	617b      	str	r3, [r7, #20]
 8001420:	4b3e      	ldr	r3, [pc, #248]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001424:	4a3d      	ldr	r2, [pc, #244]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001426:	f043 0304 	orr.w	r3, r3, #4
 800142a:	6313      	str	r3, [r2, #48]	; 0x30
 800142c:	4b3b      	ldr	r3, [pc, #236]	; (800151c <HAL_ETH_MspInit+0x178>)
 800142e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001430:	f003 0304 	and.w	r3, r3, #4
 8001434:	617b      	str	r3, [r7, #20]
 8001436:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001438:	2300      	movs	r3, #0
 800143a:	613b      	str	r3, [r7, #16]
 800143c:	4b37      	ldr	r3, [pc, #220]	; (800151c <HAL_ETH_MspInit+0x178>)
 800143e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001440:	4a36      	ldr	r2, [pc, #216]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001442:	f043 0301 	orr.w	r3, r3, #1
 8001446:	6313      	str	r3, [r2, #48]	; 0x30
 8001448:	4b34      	ldr	r3, [pc, #208]	; (800151c <HAL_ETH_MspInit+0x178>)
 800144a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800144c:	f003 0301 	and.w	r3, r3, #1
 8001450:	613b      	str	r3, [r7, #16]
 8001452:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001454:	2300      	movs	r3, #0
 8001456:	60fb      	str	r3, [r7, #12]
 8001458:	4b30      	ldr	r3, [pc, #192]	; (800151c <HAL_ETH_MspInit+0x178>)
 800145a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800145c:	4a2f      	ldr	r2, [pc, #188]	; (800151c <HAL_ETH_MspInit+0x178>)
 800145e:	f043 0302 	orr.w	r3, r3, #2
 8001462:	6313      	str	r3, [r2, #48]	; 0x30
 8001464:	4b2d      	ldr	r3, [pc, #180]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001466:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001468:	f003 0302 	and.w	r3, r3, #2
 800146c:	60fb      	str	r3, [r7, #12]
 800146e:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001470:	2300      	movs	r3, #0
 8001472:	60bb      	str	r3, [r7, #8]
 8001474:	4b29      	ldr	r3, [pc, #164]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001476:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001478:	4a28      	ldr	r2, [pc, #160]	; (800151c <HAL_ETH_MspInit+0x178>)
 800147a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800147e:	6313      	str	r3, [r2, #48]	; 0x30
 8001480:	4b26      	ldr	r3, [pc, #152]	; (800151c <HAL_ETH_MspInit+0x178>)
 8001482:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001484:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8001488:	60bb      	str	r3, [r7, #8]
 800148a:	68bb      	ldr	r3, [r7, #8]
    PC5     ------> ETH_RXD1
    PB13     ------> ETH_TXD1
    PG11     ------> ETH_TX_EN
    PG13     ------> ETH_TXD0
    */
    GPIO_InitStruct.Pin = RMII_MDC_Pin|RMII_RXD0_Pin|RMII_RXD1_Pin;
 800148c:	2332      	movs	r3, #50	; 0x32
 800148e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001490:	2302      	movs	r3, #2
 8001492:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001494:	2300      	movs	r3, #0
 8001496:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001498:	2303      	movs	r3, #3
 800149a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 800149c:	230b      	movs	r3, #11
 800149e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80014a4:	4619      	mov	r1, r3
 80014a6:	481e      	ldr	r0, [pc, #120]	; (8001520 <HAL_ETH_MspInit+0x17c>)
 80014a8:	f001 fc68 	bl	8002d7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_REF_CLK_Pin|RMII_MDIO_Pin|RMII_CRS_DV_Pin;
 80014ac:	2386      	movs	r3, #134	; 0x86
 80014ae:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014b0:	2302      	movs	r3, #2
 80014b2:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014b4:	2300      	movs	r3, #0
 80014b6:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014b8:	2303      	movs	r3, #3
 80014ba:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 80014bc:	230b      	movs	r3, #11
 80014be:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80014c0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80014c4:	4619      	mov	r1, r3
 80014c6:	4817      	ldr	r0, [pc, #92]	; (8001524 <HAL_ETH_MspInit+0x180>)
 80014c8:	f001 fc58 	bl	8002d7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_TXD1_Pin;
 80014cc:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80014d0:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014d2:	2302      	movs	r3, #2
 80014d4:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014d6:	2300      	movs	r3, #0
 80014d8:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014da:	2303      	movs	r3, #3
 80014dc:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 80014de:	230b      	movs	r3, #11
 80014e0:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(RMII_TXD1_GPIO_Port, &GPIO_InitStruct);
 80014e2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80014e6:	4619      	mov	r1, r3
 80014e8:	480f      	ldr	r0, [pc, #60]	; (8001528 <HAL_ETH_MspInit+0x184>)
 80014ea:	f001 fc47 	bl	8002d7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = RMII_TX_EN_Pin|RMII_TXD0_Pin;
 80014ee:	f44f 5320 	mov.w	r3, #10240	; 0x2800
 80014f2:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80014f4:	2302      	movs	r3, #2
 80014f6:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014f8:	2300      	movs	r3, #0
 80014fa:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80014fc:	2303      	movs	r3, #3
 80014fe:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF11_ETH;
 8001500:	230b      	movs	r3, #11
 8001502:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001504:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001508:	4619      	mov	r1, r3
 800150a:	4808      	ldr	r0, [pc, #32]	; (800152c <HAL_ETH_MspInit+0x188>)
 800150c:	f001 fc36 	bl	8002d7c <HAL_GPIO_Init>
  /* USER CODE BEGIN ETH_MspInit 1 */

  /* USER CODE END ETH_MspInit 1 */
  }

}
 8001510:	bf00      	nop
 8001512:	3738      	adds	r7, #56	; 0x38
 8001514:	46bd      	mov	sp, r7
 8001516:	bd80      	pop	{r7, pc}
 8001518:	40028000 	.word	0x40028000
 800151c:	40023800 	.word	0x40023800
 8001520:	40020800 	.word	0x40020800
 8001524:	40020000 	.word	0x40020000
 8001528:	40020400 	.word	0x40020400
 800152c:	40021800 	.word	0x40021800

08001530 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8001530:	b580      	push	{r7, lr}
 8001532:	b08c      	sub	sp, #48	; 0x30
 8001534:	af00      	add	r7, sp, #0
 8001536:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001538:	f107 031c 	add.w	r3, r7, #28
 800153c:	2200      	movs	r2, #0
 800153e:	601a      	str	r2, [r3, #0]
 8001540:	605a      	str	r2, [r3, #4]
 8001542:	609a      	str	r2, [r3, #8]
 8001544:	60da      	str	r2, [r3, #12]
 8001546:	611a      	str	r2, [r3, #16]
  if(huart->Instance==UART4)
 8001548:	687b      	ldr	r3, [r7, #4]
 800154a:	681b      	ldr	r3, [r3, #0]
 800154c:	4a52      	ldr	r2, [pc, #328]	; (8001698 <HAL_UART_MspInit+0x168>)
 800154e:	4293      	cmp	r3, r2
 8001550:	d163      	bne.n	800161a <HAL_UART_MspInit+0xea>
  {
  /* USER CODE BEGIN UART4_MspInit 0 */

  /* USER CODE END UART4_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_UART4_CLK_ENABLE();
 8001552:	2300      	movs	r3, #0
 8001554:	61bb      	str	r3, [r7, #24]
 8001556:	4b51      	ldr	r3, [pc, #324]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001558:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800155a:	4a50      	ldr	r2, [pc, #320]	; (800169c <HAL_UART_MspInit+0x16c>)
 800155c:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8001560:	6413      	str	r3, [r2, #64]	; 0x40
 8001562:	4b4e      	ldr	r3, [pc, #312]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001564:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001566:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800156a:	61bb      	str	r3, [r7, #24]
 800156c:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 800156e:	2300      	movs	r3, #0
 8001570:	617b      	str	r3, [r7, #20]
 8001572:	4b4a      	ldr	r3, [pc, #296]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001574:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001576:	4a49      	ldr	r2, [pc, #292]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001578:	f043 0304 	orr.w	r3, r3, #4
 800157c:	6313      	str	r3, [r2, #48]	; 0x30
 800157e:	4b47      	ldr	r3, [pc, #284]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001580:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001582:	f003 0304 	and.w	r3, r3, #4
 8001586:	617b      	str	r3, [r7, #20]
 8001588:	697b      	ldr	r3, [r7, #20]
    /**UART4 GPIO Configuration
    PC10     ------> UART4_TX
    PC11     ------> UART4_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 800158a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800158e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001590:	2302      	movs	r3, #2
 8001592:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001594:	2300      	movs	r3, #0
 8001596:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001598:	2303      	movs	r3, #3
 800159a:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 800159c:	2308      	movs	r3, #8
 800159e:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80015a0:	f107 031c 	add.w	r3, r7, #28
 80015a4:	4619      	mov	r1, r3
 80015a6:	483e      	ldr	r0, [pc, #248]	; (80016a0 <HAL_UART_MspInit+0x170>)
 80015a8:	f001 fbe8 	bl	8002d7c <HAL_GPIO_Init>

    /* UART4 DMA Init */
    /* UART4_RX Init */
    hdma_uart4_rx.Instance = DMA1_Stream2;
 80015ac:	4b3d      	ldr	r3, [pc, #244]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015ae:	4a3e      	ldr	r2, [pc, #248]	; (80016a8 <HAL_UART_MspInit+0x178>)
 80015b0:	601a      	str	r2, [r3, #0]
    hdma_uart4_rx.Init.Channel = DMA_CHANNEL_4;
 80015b2:	4b3c      	ldr	r3, [pc, #240]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015b4:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80015b8:	605a      	str	r2, [r3, #4]
    hdma_uart4_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 80015ba:	4b3a      	ldr	r3, [pc, #232]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015bc:	2200      	movs	r2, #0
 80015be:	609a      	str	r2, [r3, #8]
    hdma_uart4_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 80015c0:	4b38      	ldr	r3, [pc, #224]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015c2:	2200      	movs	r2, #0
 80015c4:	60da      	str	r2, [r3, #12]
    hdma_uart4_rx.Init.MemInc = DMA_MINC_ENABLE;
 80015c6:	4b37      	ldr	r3, [pc, #220]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015c8:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80015cc:	611a      	str	r2, [r3, #16]
    hdma_uart4_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80015ce:	4b35      	ldr	r3, [pc, #212]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015d0:	2200      	movs	r2, #0
 80015d2:	615a      	str	r2, [r3, #20]
    hdma_uart4_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80015d4:	4b33      	ldr	r3, [pc, #204]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015d6:	2200      	movs	r2, #0
 80015d8:	619a      	str	r2, [r3, #24]
    hdma_uart4_rx.Init.Mode = DMA_NORMAL;
 80015da:	4b32      	ldr	r3, [pc, #200]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015dc:	2200      	movs	r2, #0
 80015de:	61da      	str	r2, [r3, #28]
    hdma_uart4_rx.Init.Priority = DMA_PRIORITY_LOW;
 80015e0:	4b30      	ldr	r3, [pc, #192]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015e2:	2200      	movs	r2, #0
 80015e4:	621a      	str	r2, [r3, #32]
    hdma_uart4_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80015e6:	4b2f      	ldr	r3, [pc, #188]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015e8:	2200      	movs	r2, #0
 80015ea:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_uart4_rx) != HAL_OK)
 80015ec:	482d      	ldr	r0, [pc, #180]	; (80016a4 <HAL_UART_MspInit+0x174>)
 80015ee:	f000 fc9b 	bl	8001f28 <HAL_DMA_Init>
 80015f2:	4603      	mov	r3, r0
 80015f4:	2b00      	cmp	r3, #0
 80015f6:	d001      	beq.n	80015fc <HAL_UART_MspInit+0xcc>
    {
      Error_Handler();
 80015f8:	f7ff fea6 	bl	8001348 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_uart4_rx);
 80015fc:	687b      	ldr	r3, [r7, #4]
 80015fe:	4a29      	ldr	r2, [pc, #164]	; (80016a4 <HAL_UART_MspInit+0x174>)
 8001600:	63da      	str	r2, [r3, #60]	; 0x3c
 8001602:	4a28      	ldr	r2, [pc, #160]	; (80016a4 <HAL_UART_MspInit+0x174>)
 8001604:	687b      	ldr	r3, [r7, #4]
 8001606:	6393      	str	r3, [r2, #56]	; 0x38

    /* UART4 interrupt Init */
    HAL_NVIC_SetPriority(UART4_IRQn, 0, 0);
 8001608:	2200      	movs	r2, #0
 800160a:	2100      	movs	r1, #0
 800160c:	2034      	movs	r0, #52	; 0x34
 800160e:	f000 fc54 	bl	8001eba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(UART4_IRQn);
 8001612:	2034      	movs	r0, #52	; 0x34
 8001614:	f000 fc6d 	bl	8001ef2 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8001618:	e039      	b.n	800168e <HAL_UART_MspInit+0x15e>
  else if(huart->Instance==USART3)
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	4a23      	ldr	r2, [pc, #140]	; (80016ac <HAL_UART_MspInit+0x17c>)
 8001620:	4293      	cmp	r3, r2
 8001622:	d134      	bne.n	800168e <HAL_UART_MspInit+0x15e>
    __HAL_RCC_USART3_CLK_ENABLE();
 8001624:	2300      	movs	r3, #0
 8001626:	613b      	str	r3, [r7, #16]
 8001628:	4b1c      	ldr	r3, [pc, #112]	; (800169c <HAL_UART_MspInit+0x16c>)
 800162a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800162c:	4a1b      	ldr	r2, [pc, #108]	; (800169c <HAL_UART_MspInit+0x16c>)
 800162e:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001632:	6413      	str	r3, [r2, #64]	; 0x40
 8001634:	4b19      	ldr	r3, [pc, #100]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001636:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001638:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800163c:	613b      	str	r3, [r7, #16]
 800163e:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001640:	2300      	movs	r3, #0
 8001642:	60fb      	str	r3, [r7, #12]
 8001644:	4b15      	ldr	r3, [pc, #84]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001646:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001648:	4a14      	ldr	r2, [pc, #80]	; (800169c <HAL_UART_MspInit+0x16c>)
 800164a:	f043 0308 	orr.w	r3, r3, #8
 800164e:	6313      	str	r3, [r2, #48]	; 0x30
 8001650:	4b12      	ldr	r3, [pc, #72]	; (800169c <HAL_UART_MspInit+0x16c>)
 8001652:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001654:	f003 0308 	and.w	r3, r3, #8
 8001658:	60fb      	str	r3, [r7, #12]
 800165a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 800165c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001660:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001662:	2302      	movs	r3, #2
 8001664:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001666:	2300      	movs	r3, #0
 8001668:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800166a:	2303      	movs	r3, #3
 800166c:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 800166e:	2307      	movs	r3, #7
 8001670:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001672:	f107 031c 	add.w	r3, r7, #28
 8001676:	4619      	mov	r1, r3
 8001678:	480d      	ldr	r0, [pc, #52]	; (80016b0 <HAL_UART_MspInit+0x180>)
 800167a:	f001 fb7f 	bl	8002d7c <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 800167e:	2200      	movs	r2, #0
 8001680:	2100      	movs	r1, #0
 8001682:	2027      	movs	r0, #39	; 0x27
 8001684:	f000 fc19 	bl	8001eba <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8001688:	2027      	movs	r0, #39	; 0x27
 800168a:	f000 fc32 	bl	8001ef2 <HAL_NVIC_EnableIRQ>
}
 800168e:	bf00      	nop
 8001690:	3730      	adds	r7, #48	; 0x30
 8001692:	46bd      	mov	sp, r7
 8001694:	bd80      	pop	{r7, pc}
 8001696:	bf00      	nop
 8001698:	40004c00 	.word	0x40004c00
 800169c:	40023800 	.word	0x40023800
 80016a0:	40020800 	.word	0x40020800
 80016a4:	2000060c 	.word	0x2000060c
 80016a8:	40026040 	.word	0x40026040
 80016ac:	40004800 	.word	0x40004800
 80016b0:	40020c00 	.word	0x40020c00

080016b4 <HAL_PCD_MspInit>:
* This function configures the hardware resources used in this example
* @param hpcd: PCD handle pointer
* @retval None
*/
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 80016b4:	b580      	push	{r7, lr}
 80016b6:	b08a      	sub	sp, #40	; 0x28
 80016b8:	af00      	add	r7, sp, #0
 80016ba:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80016bc:	f107 0314 	add.w	r3, r7, #20
 80016c0:	2200      	movs	r2, #0
 80016c2:	601a      	str	r2, [r3, #0]
 80016c4:	605a      	str	r2, [r3, #4]
 80016c6:	609a      	str	r2, [r3, #8]
 80016c8:	60da      	str	r2, [r3, #12]
 80016ca:	611a      	str	r2, [r3, #16]
  if(hpcd->Instance==USB_OTG_FS)
 80016cc:	687b      	ldr	r3, [r7, #4]
 80016ce:	681b      	ldr	r3, [r3, #0]
 80016d0:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80016d4:	d13f      	bne.n	8001756 <HAL_PCD_MspInit+0xa2>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80016d6:	2300      	movs	r3, #0
 80016d8:	613b      	str	r3, [r7, #16]
 80016da:	4b21      	ldr	r3, [pc, #132]	; (8001760 <HAL_PCD_MspInit+0xac>)
 80016dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016de:	4a20      	ldr	r2, [pc, #128]	; (8001760 <HAL_PCD_MspInit+0xac>)
 80016e0:	f043 0301 	orr.w	r3, r3, #1
 80016e4:	6313      	str	r3, [r2, #48]	; 0x30
 80016e6:	4b1e      	ldr	r3, [pc, #120]	; (8001760 <HAL_PCD_MspInit+0xac>)
 80016e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80016ea:	f003 0301 	and.w	r3, r3, #1
 80016ee:	613b      	str	r3, [r7, #16]
 80016f0:	693b      	ldr	r3, [r7, #16]
    PA9     ------> USB_OTG_FS_VBUS
    PA10     ------> USB_OTG_FS_ID
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP
    */
    GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 80016f2:	f44f 53e8 	mov.w	r3, #7424	; 0x1d00
 80016f6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80016f8:	2302      	movs	r3, #2
 80016fa:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016fc:	2300      	movs	r3, #0
 80016fe:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001700:	2303      	movs	r3, #3
 8001702:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8001704:	230a      	movs	r3, #10
 8001706:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001708:	f107 0314 	add.w	r3, r7, #20
 800170c:	4619      	mov	r1, r3
 800170e:	4815      	ldr	r0, [pc, #84]	; (8001764 <HAL_PCD_MspInit+0xb0>)
 8001710:	f001 fb34 	bl	8002d7c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = USB_VBUS_Pin;
 8001714:	f44f 7300 	mov.w	r3, #512	; 0x200
 8001718:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800171a:	2300      	movs	r3, #0
 800171c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800171e:	2300      	movs	r3, #0
 8001720:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
 8001722:	f107 0314 	add.w	r3, r7, #20
 8001726:	4619      	mov	r1, r3
 8001728:	480e      	ldr	r0, [pc, #56]	; (8001764 <HAL_PCD_MspInit+0xb0>)
 800172a:	f001 fb27 	bl	8002d7c <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 800172e:	4b0c      	ldr	r3, [pc, #48]	; (8001760 <HAL_PCD_MspInit+0xac>)
 8001730:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8001732:	4a0b      	ldr	r2, [pc, #44]	; (8001760 <HAL_PCD_MspInit+0xac>)
 8001734:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001738:	6353      	str	r3, [r2, #52]	; 0x34
 800173a:	2300      	movs	r3, #0
 800173c:	60fb      	str	r3, [r7, #12]
 800173e:	4b08      	ldr	r3, [pc, #32]	; (8001760 <HAL_PCD_MspInit+0xac>)
 8001740:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001742:	4a07      	ldr	r2, [pc, #28]	; (8001760 <HAL_PCD_MspInit+0xac>)
 8001744:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001748:	6453      	str	r3, [r2, #68]	; 0x44
 800174a:	4b05      	ldr	r3, [pc, #20]	; (8001760 <HAL_PCD_MspInit+0xac>)
 800174c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800174e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001752:	60fb      	str	r3, [r7, #12]
 8001754:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }

}
 8001756:	bf00      	nop
 8001758:	3728      	adds	r7, #40	; 0x28
 800175a:	46bd      	mov	sp, r7
 800175c:	bd80      	pop	{r7, pc}
 800175e:	bf00      	nop
 8001760:	40023800 	.word	0x40023800
 8001764:	40020000 	.word	0x40020000

08001768 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001768:	b480      	push	{r7}
 800176a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 800176c:	e7fe      	b.n	800176c <NMI_Handler+0x4>

0800176e <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800176e:	b480      	push	{r7}
 8001770:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001772:	e7fe      	b.n	8001772 <HardFault_Handler+0x4>

08001774 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001774:	b480      	push	{r7}
 8001776:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001778:	e7fe      	b.n	8001778 <MemManage_Handler+0x4>

0800177a <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800177a:	b480      	push	{r7}
 800177c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800177e:	e7fe      	b.n	800177e <BusFault_Handler+0x4>

08001780 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001780:	b480      	push	{r7}
 8001782:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001784:	e7fe      	b.n	8001784 <UsageFault_Handler+0x4>

08001786 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001786:	b480      	push	{r7}
 8001788:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 800178a:	bf00      	nop
 800178c:	46bd      	mov	sp, r7
 800178e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001792:	4770      	bx	lr

08001794 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001794:	b480      	push	{r7}
 8001796:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001798:	bf00      	nop
 800179a:	46bd      	mov	sp, r7
 800179c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017a0:	4770      	bx	lr

080017a2 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80017a2:	b480      	push	{r7}
 80017a4:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80017a6:	bf00      	nop
 80017a8:	46bd      	mov	sp, r7
 80017aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ae:	4770      	bx	lr

080017b0 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80017b0:	b580      	push	{r7, lr}
 80017b2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80017b4:	f000 fa62 	bl	8001c7c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80017b8:	bf00      	nop
 80017ba:	bd80      	pop	{r7, pc}

080017bc <DMA1_Stream2_IRQHandler>:

/**
  * @brief This function handles DMA1 stream2 global interrupt.
  */
void DMA1_Stream2_IRQHandler(void)
{
 80017bc:	b580      	push	{r7, lr}
 80017be:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream2_IRQn 0 */

  /* USER CODE END DMA1_Stream2_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_uart4_rx);
 80017c0:	4802      	ldr	r0, [pc, #8]	; (80017cc <DMA1_Stream2_IRQHandler+0x10>)
 80017c2:	f000 fd49 	bl	8002258 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream2_IRQn 1 */

  /* USER CODE END DMA1_Stream2_IRQn 1 */
}
 80017c6:	bf00      	nop
 80017c8:	bd80      	pop	{r7, pc}
 80017ca:	bf00      	nop
 80017cc:	2000060c 	.word	0x2000060c

080017d0 <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 80017d0:	b580      	push	{r7, lr}
 80017d2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 80017d4:	4802      	ldr	r0, [pc, #8]	; (80017e0 <USART3_IRQHandler+0x10>)
 80017d6:	f002 fbd1 	bl	8003f7c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 80017da:	bf00      	nop
 80017dc:	bd80      	pop	{r7, pc}
 80017de:	bf00      	nop
 80017e0:	200005c4 	.word	0x200005c4

080017e4 <UART4_IRQHandler>:

/**
  * @brief This function handles UART4 global interrupt.
  */
void UART4_IRQHandler(void)
{
 80017e4:	b580      	push	{r7, lr}
 80017e6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UART4_IRQn 0 */

  /* USER CODE END UART4_IRQn 0 */
  HAL_UART_IRQHandler(&huart4);
 80017e8:	4802      	ldr	r0, [pc, #8]	; (80017f4 <UART4_IRQHandler+0x10>)
 80017ea:	f002 fbc7 	bl	8003f7c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN UART4_IRQn 1 */

  /* USER CODE END UART4_IRQn 1 */
}
 80017ee:	bf00      	nop
 80017f0:	bd80      	pop	{r7, pc}
 80017f2:	bf00      	nop
 80017f4:	2000057c 	.word	0x2000057c

080017f8 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80017f8:	b480      	push	{r7}
 80017fa:	af00      	add	r7, sp, #0
  return 1;
 80017fc:	2301      	movs	r3, #1
}
 80017fe:	4618      	mov	r0, r3
 8001800:	46bd      	mov	sp, r7
 8001802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001806:	4770      	bx	lr

08001808 <_kill>:

int _kill(int pid, int sig)
{
 8001808:	b580      	push	{r7, lr}
 800180a:	b082      	sub	sp, #8
 800180c:	af00      	add	r7, sp, #0
 800180e:	6078      	str	r0, [r7, #4]
 8001810:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8001812:	f004 fa91 	bl	8005d38 <__errno>
 8001816:	4603      	mov	r3, r0
 8001818:	2216      	movs	r2, #22
 800181a:	601a      	str	r2, [r3, #0]
  return -1;
 800181c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001820:	4618      	mov	r0, r3
 8001822:	3708      	adds	r7, #8
 8001824:	46bd      	mov	sp, r7
 8001826:	bd80      	pop	{r7, pc}

08001828 <_exit>:

void _exit (int status)
{
 8001828:	b580      	push	{r7, lr}
 800182a:	b082      	sub	sp, #8
 800182c:	af00      	add	r7, sp, #0
 800182e:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8001830:	f04f 31ff 	mov.w	r1, #4294967295
 8001834:	6878      	ldr	r0, [r7, #4]
 8001836:	f7ff ffe7 	bl	8001808 <_kill>
  while (1) {}    /* Make sure we hang here */
 800183a:	e7fe      	b.n	800183a <_exit+0x12>

0800183c <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800183c:	b580      	push	{r7, lr}
 800183e:	b086      	sub	sp, #24
 8001840:	af00      	add	r7, sp, #0
 8001842:	60f8      	str	r0, [r7, #12]
 8001844:	60b9      	str	r1, [r7, #8]
 8001846:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001848:	2300      	movs	r3, #0
 800184a:	617b      	str	r3, [r7, #20]
 800184c:	e00a      	b.n	8001864 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800184e:	f3af 8000 	nop.w
 8001852:	4601      	mov	r1, r0
 8001854:	68bb      	ldr	r3, [r7, #8]
 8001856:	1c5a      	adds	r2, r3, #1
 8001858:	60ba      	str	r2, [r7, #8]
 800185a:	b2ca      	uxtb	r2, r1
 800185c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800185e:	697b      	ldr	r3, [r7, #20]
 8001860:	3301      	adds	r3, #1
 8001862:	617b      	str	r3, [r7, #20]
 8001864:	697a      	ldr	r2, [r7, #20]
 8001866:	687b      	ldr	r3, [r7, #4]
 8001868:	429a      	cmp	r2, r3
 800186a:	dbf0      	blt.n	800184e <_read+0x12>
  }

  return len;
 800186c:	687b      	ldr	r3, [r7, #4]
}
 800186e:	4618      	mov	r0, r3
 8001870:	3718      	adds	r7, #24
 8001872:	46bd      	mov	sp, r7
 8001874:	bd80      	pop	{r7, pc}

08001876 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001876:	b580      	push	{r7, lr}
 8001878:	b086      	sub	sp, #24
 800187a:	af00      	add	r7, sp, #0
 800187c:	60f8      	str	r0, [r7, #12]
 800187e:	60b9      	str	r1, [r7, #8]
 8001880:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001882:	2300      	movs	r3, #0
 8001884:	617b      	str	r3, [r7, #20]
 8001886:	e009      	b.n	800189c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001888:	68bb      	ldr	r3, [r7, #8]
 800188a:	1c5a      	adds	r2, r3, #1
 800188c:	60ba      	str	r2, [r7, #8]
 800188e:	781b      	ldrb	r3, [r3, #0]
 8001890:	4618      	mov	r0, r3
 8001892:	f000 f965 	bl	8001b60 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001896:	697b      	ldr	r3, [r7, #20]
 8001898:	3301      	adds	r3, #1
 800189a:	617b      	str	r3, [r7, #20]
 800189c:	697a      	ldr	r2, [r7, #20]
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	429a      	cmp	r2, r3
 80018a2:	dbf1      	blt.n	8001888 <_write+0x12>
  }
  return len;
 80018a4:	687b      	ldr	r3, [r7, #4]
}
 80018a6:	4618      	mov	r0, r3
 80018a8:	3718      	adds	r7, #24
 80018aa:	46bd      	mov	sp, r7
 80018ac:	bd80      	pop	{r7, pc}

080018ae <_close>:

int _close(int file)
{
 80018ae:	b480      	push	{r7}
 80018b0:	b083      	sub	sp, #12
 80018b2:	af00      	add	r7, sp, #0
 80018b4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80018b6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80018ba:	4618      	mov	r0, r3
 80018bc:	370c      	adds	r7, #12
 80018be:	46bd      	mov	sp, r7
 80018c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018c4:	4770      	bx	lr

080018c6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80018c6:	b480      	push	{r7}
 80018c8:	b083      	sub	sp, #12
 80018ca:	af00      	add	r7, sp, #0
 80018cc:	6078      	str	r0, [r7, #4]
 80018ce:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80018d0:	683b      	ldr	r3, [r7, #0]
 80018d2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80018d6:	605a      	str	r2, [r3, #4]
  return 0;
 80018d8:	2300      	movs	r3, #0
}
 80018da:	4618      	mov	r0, r3
 80018dc:	370c      	adds	r7, #12
 80018de:	46bd      	mov	sp, r7
 80018e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018e4:	4770      	bx	lr

080018e6 <_isatty>:

int _isatty(int file)
{
 80018e6:	b480      	push	{r7}
 80018e8:	b083      	sub	sp, #12
 80018ea:	af00      	add	r7, sp, #0
 80018ec:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80018ee:	2301      	movs	r3, #1
}
 80018f0:	4618      	mov	r0, r3
 80018f2:	370c      	adds	r7, #12
 80018f4:	46bd      	mov	sp, r7
 80018f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018fa:	4770      	bx	lr

080018fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80018fc:	b480      	push	{r7}
 80018fe:	b085      	sub	sp, #20
 8001900:	af00      	add	r7, sp, #0
 8001902:	60f8      	str	r0, [r7, #12]
 8001904:	60b9      	str	r1, [r7, #8]
 8001906:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8001908:	2300      	movs	r3, #0
}
 800190a:	4618      	mov	r0, r3
 800190c:	3714      	adds	r7, #20
 800190e:	46bd      	mov	sp, r7
 8001910:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001914:	4770      	bx	lr
	...

08001918 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8001918:	b580      	push	{r7, lr}
 800191a:	b086      	sub	sp, #24
 800191c:	af00      	add	r7, sp, #0
 800191e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8001920:	4a14      	ldr	r2, [pc, #80]	; (8001974 <_sbrk+0x5c>)
 8001922:	4b15      	ldr	r3, [pc, #84]	; (8001978 <_sbrk+0x60>)
 8001924:	1ad3      	subs	r3, r2, r3
 8001926:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8001928:	697b      	ldr	r3, [r7, #20]
 800192a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800192c:	4b13      	ldr	r3, [pc, #76]	; (800197c <_sbrk+0x64>)
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	2b00      	cmp	r3, #0
 8001932:	d102      	bne.n	800193a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8001934:	4b11      	ldr	r3, [pc, #68]	; (800197c <_sbrk+0x64>)
 8001936:	4a12      	ldr	r2, [pc, #72]	; (8001980 <_sbrk+0x68>)
 8001938:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800193a:	4b10      	ldr	r3, [pc, #64]	; (800197c <_sbrk+0x64>)
 800193c:	681a      	ldr	r2, [r3, #0]
 800193e:	687b      	ldr	r3, [r7, #4]
 8001940:	4413      	add	r3, r2
 8001942:	693a      	ldr	r2, [r7, #16]
 8001944:	429a      	cmp	r2, r3
 8001946:	d207      	bcs.n	8001958 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8001948:	f004 f9f6 	bl	8005d38 <__errno>
 800194c:	4603      	mov	r3, r0
 800194e:	220c      	movs	r2, #12
 8001950:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8001952:	f04f 33ff 	mov.w	r3, #4294967295
 8001956:	e009      	b.n	800196c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8001958:	4b08      	ldr	r3, [pc, #32]	; (800197c <_sbrk+0x64>)
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800195e:	4b07      	ldr	r3, [pc, #28]	; (800197c <_sbrk+0x64>)
 8001960:	681a      	ldr	r2, [r3, #0]
 8001962:	687b      	ldr	r3, [r7, #4]
 8001964:	4413      	add	r3, r2
 8001966:	4a05      	ldr	r2, [pc, #20]	; (800197c <_sbrk+0x64>)
 8001968:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800196a:	68fb      	ldr	r3, [r7, #12]
}
 800196c:	4618      	mov	r0, r3
 800196e:	3718      	adds	r7, #24
 8001970:	46bd      	mov	sp, r7
 8001972:	bd80      	pop	{r7, pc}
 8001974:	20030000 	.word	0x20030000
 8001978:	00000400 	.word	0x00000400
 800197c:	20000b58 	.word	0x20000b58
 8001980:	20000d88 	.word	0x20000d88

08001984 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8001984:	b480      	push	{r7}
 8001986:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001988:	4b06      	ldr	r3, [pc, #24]	; (80019a4 <SystemInit+0x20>)
 800198a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800198e:	4a05      	ldr	r2, [pc, #20]	; (80019a4 <SystemInit+0x20>)
 8001990:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001994:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8001998:	bf00      	nop
 800199a:	46bd      	mov	sp, r7
 800199c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019a0:	4770      	bx	lr
 80019a2:	bf00      	nop
 80019a4:	e000ed00 	.word	0xe000ed00

080019a8 <uart_init>:
 *      Author: roby238
 */

#include "uart.h"

uint8_t uart_init(void) {
 80019a8:	b580      	push	{r7, lr}
 80019aa:	af00      	add	r7, sp, #0
	HAL_Delay(100);
 80019ac:	2064      	movs	r0, #100	; 0x64
 80019ae:	f000 f985 	bl	8001cbc <HAL_Delay>

#if DEBUG
printf("UART Initializing...\r\n");
 80019b2:	4810      	ldr	r0, [pc, #64]	; (80019f4 <uart_init+0x4c>)
 80019b4:	f004 f816 	bl	80059e4 <puts>
#endif

	if (HAL_UART_Init(&huart3) != HAL_OK) {
 80019b8:	480f      	ldr	r0, [pc, #60]	; (80019f8 <uart_init+0x50>)
 80019ba:	f002 f94b 	bl	8003c54 <HAL_UART_Init>
 80019be:	4603      	mov	r3, r0
 80019c0:	2b00      	cmp	r3, #0
 80019c2:	d001      	beq.n	80019c8 <uart_init+0x20>
		Error_Handler();
 80019c4:	f7ff fcc0 	bl	8001348 <Error_Handler>
	}

	gBufObj[0].idx = 0;
 80019c8:	4b0c      	ldr	r3, [pc, #48]	; (80019fc <uart_init+0x54>)
 80019ca:	2200      	movs	r2, #0
 80019cc:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
	gBufObj[0].flag = false;
 80019d0:	4b0a      	ldr	r3, [pc, #40]	; (80019fc <uart_init+0x54>)
 80019d2:	2200      	movs	r2, #0
 80019d4:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66

	if (HAL_UART_Receive_IT(&huart3, (uint8_t *)&rxd, 1) != HAL_OK) {
 80019d8:	2201      	movs	r2, #1
 80019da:	4909      	ldr	r1, [pc, #36]	; (8001a00 <uart_init+0x58>)
 80019dc:	4806      	ldr	r0, [pc, #24]	; (80019f8 <uart_init+0x50>)
 80019de:	f002 fa4a 	bl	8003e76 <HAL_UART_Receive_IT>
 80019e2:	4603      	mov	r3, r0
 80019e4:	2b00      	cmp	r3, #0
 80019e6:	d001      	beq.n	80019ec <uart_init+0x44>
		return 1;
 80019e8:	2301      	movs	r3, #1
 80019ea:	e000      	b.n	80019ee <uart_init+0x46>
	}

	return 0;
 80019ec:	2300      	movs	r3, #0
}
 80019ee:	4618      	mov	r0, r3
 80019f0:	bd80      	pop	{r7, pc}
 80019f2:	bf00      	nop
 80019f4:	08006d74 	.word	0x08006d74
 80019f8:	200005c4 	.word	0x200005c4
 80019fc:	20000b5c 	.word	0x20000b5c
 8001a00:	20000c30 	.word	0x20000c30

08001a04 <uart_regcbf>:

uint8_t uart_regcbf(UART_CBF cbf) {
 8001a04:	b480      	push	{r7}
 8001a06:	b083      	sub	sp, #12
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	6078      	str	r0, [r7, #4]
	uart_cbf = cbf;
 8001a0c:	4a04      	ldr	r2, [pc, #16]	; (8001a20 <uart_regcbf+0x1c>)
 8001a0e:	687b      	ldr	r3, [r7, #4]
 8001a10:	6013      	str	r3, [r2, #0]
	return 0;
 8001a12:	2300      	movs	r3, #0
}
 8001a14:	4618      	mov	r0, r3
 8001a16:	370c      	adds	r7, #12
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a1e:	4770      	bx	lr
 8001a20:	20000c2c 	.word	0x20000c2c

08001a24 <uart_proc>:

// non-blocking procedure routine
uint8_t uart_proc(void) {
 8001a24:	b580      	push	{r7, lr}
 8001a26:	b082      	sub	sp, #8
 8001a28:	af00      	add	r7, sp, #0
	BUF_T *p = (BUF_T *)&gBufObj[0];
 8001a2a:	4b11      	ldr	r3, [pc, #68]	; (8001a70 <uart_proc+0x4c>)
 8001a2c:	607b      	str	r3, [r7, #4]
	if (p->flag == true) {
 8001a2e:	687b      	ldr	r3, [r7, #4]
 8001a30:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 8001a34:	2b01      	cmp	r3, #1
 8001a36:	d116      	bne.n	8001a66 <uart_proc+0x42>

#if DEBUG
printf("%s: %s", __func__, p->buf);
 8001a38:	687b      	ldr	r3, [r7, #4]
 8001a3a:	461a      	mov	r2, r3
 8001a3c:	490d      	ldr	r1, [pc, #52]	; (8001a74 <uart_proc+0x50>)
 8001a3e:	480e      	ldr	r0, [pc, #56]	; (8001a78 <uart_proc+0x54>)
 8001a40:	f003 ff6a 	bl	8005918 <iprintf>
#endif

		// uart parsing
		if (uart_cbf != NULL) uart_cbf(p->buf);
 8001a44:	4b0d      	ldr	r3, [pc, #52]	; (8001a7c <uart_proc+0x58>)
 8001a46:	681b      	ldr	r3, [r3, #0]
 8001a48:	2b00      	cmp	r3, #0
 8001a4a:	d004      	beq.n	8001a56 <uart_proc+0x32>
 8001a4c:	4b0b      	ldr	r3, [pc, #44]	; (8001a7c <uart_proc+0x58>)
 8001a4e:	681b      	ldr	r3, [r3, #0]
 8001a50:	687a      	ldr	r2, [r7, #4]
 8001a52:	4610      	mov	r0, r2
 8001a54:	4798      	blx	r3
		p->idx = 0;
 8001a56:	687b      	ldr	r3, [r7, #4]
 8001a58:	2200      	movs	r2, #0
 8001a5a:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
		p->flag = false;
 8001a5e:	687b      	ldr	r3, [r7, #4]
 8001a60:	2200      	movs	r2, #0
 8001a62:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
	}
	return 0;
 8001a66:	2300      	movs	r3, #0
}
 8001a68:	4618      	mov	r0, r3
 8001a6a:	3708      	adds	r7, #8
 8001a6c:	46bd      	mov	sp, r7
 8001a6e:	bd80      	pop	{r7, pc}
 8001a70:	20000b5c 	.word	0x20000b5c
 8001a74:	08006df8 	.word	0x08006df8
 8001a78:	08006d8c 	.word	0x08006d8c
 8001a7c:	20000c2c 	.word	0x20000c2c

08001a80 <HAL_UART_TxCpltCallback>:

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
 8001a80:	b480      	push	{r7}
 8001a82:	b083      	sub	sp, #12
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	6078      	str	r0, [r7, #4]
	if (huart == &huart4) {
		;
	}
}
 8001a88:	bf00      	nop
 8001a8a:	370c      	adds	r7, #12
 8001a8c:	46bd      	mov	sp, r7
 8001a8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a92:	4770      	bx	lr

08001a94 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8001a94:	b580      	push	{r7, lr}
 8001a96:	b084      	sub	sp, #16
 8001a98:	af00      	add	r7, sp, #0
 8001a9a:	6078      	str	r0, [r7, #4]
	if (huart == &huart4) {
 8001a9c:	687b      	ldr	r3, [r7, #4]
 8001a9e:	4a21      	ldr	r2, [pc, #132]	; (8001b24 <HAL_UART_RxCpltCallback+0x90>)
 8001aa0:	4293      	cmp	r3, r2
 8001aa2:	d03a      	beq.n	8001b1a <HAL_UART_RxCpltCallback+0x86>
		;
	}
	else if (huart == &huart3) {
 8001aa4:	687b      	ldr	r3, [r7, #4]
 8001aa6:	4a20      	ldr	r2, [pc, #128]	; (8001b28 <HAL_UART_RxCpltCallback+0x94>)
 8001aa8:	4293      	cmp	r3, r2
 8001aaa:	d136      	bne.n	8001b1a <HAL_UART_RxCpltCallback+0x86>
		BUF_T *p = (BUF_T *)&gBufObj[0];
 8001aac:	4b1f      	ldr	r3, [pc, #124]	; (8001b2c <HAL_UART_RxCpltCallback+0x98>)
 8001aae:	60fb      	str	r3, [r7, #12]
		if (p->flag == false) {
 8001ab0:	68fb      	ldr	r3, [r7, #12]
 8001ab2:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d12a      	bne.n	8001b10 <HAL_UART_RxCpltCallback+0x7c>
			p->buf[p->idx] = rxd;
 8001aba:	68fb      	ldr	r3, [r7, #12]
 8001abc:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
 8001ac0:	461a      	mov	r2, r3
 8001ac2:	4b1b      	ldr	r3, [pc, #108]	; (8001b30 <HAL_UART_RxCpltCallback+0x9c>)
 8001ac4:	781b      	ldrb	r3, [r3, #0]
 8001ac6:	b2d9      	uxtb	r1, r3
 8001ac8:	68fb      	ldr	r3, [r7, #12]
 8001aca:	5499      	strb	r1, [r3, r2]
			if (p->idx < D_BUF_MAX) p->idx++;
 8001acc:	68fb      	ldr	r3, [r7, #12]
 8001ace:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
 8001ad2:	2b63      	cmp	r3, #99	; 0x63
 8001ad4:	d807      	bhi.n	8001ae6 <HAL_UART_RxCpltCallback+0x52>
 8001ad6:	68fb      	ldr	r3, [r7, #12]
 8001ad8:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
 8001adc:	3301      	adds	r3, #1
 8001ade:	b2da      	uxtb	r2, r3
 8001ae0:	68fb      	ldr	r3, [r7, #12]
 8001ae2:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
			if (rxd == '\r' || rxd == '\n') {
 8001ae6:	4b12      	ldr	r3, [pc, #72]	; (8001b30 <HAL_UART_RxCpltCallback+0x9c>)
 8001ae8:	781b      	ldrb	r3, [r3, #0]
 8001aea:	b2db      	uxtb	r3, r3
 8001aec:	2b0d      	cmp	r3, #13
 8001aee:	d004      	beq.n	8001afa <HAL_UART_RxCpltCallback+0x66>
 8001af0:	4b0f      	ldr	r3, [pc, #60]	; (8001b30 <HAL_UART_RxCpltCallback+0x9c>)
 8001af2:	781b      	ldrb	r3, [r3, #0]
 8001af4:	b2db      	uxtb	r3, r3
 8001af6:	2b0a      	cmp	r3, #10
 8001af8:	d10a      	bne.n	8001b10 <HAL_UART_RxCpltCallback+0x7c>
				p->buf[p->idx] = '\0';
 8001afa:	68fb      	ldr	r3, [r7, #12]
 8001afc:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
 8001b00:	461a      	mov	r2, r3
 8001b02:	68fb      	ldr	r3, [r7, #12]
 8001b04:	2100      	movs	r1, #0
 8001b06:	5499      	strb	r1, [r3, r2]
				p->flag = true;
 8001b08:	68fb      	ldr	r3, [r7, #12]
 8001b0a:	2201      	movs	r2, #1
 8001b0c:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
			}
		}
		HAL_UART_Receive_IT(&huart3, (uint8_t *)&rxd, 1);
 8001b10:	2201      	movs	r2, #1
 8001b12:	4907      	ldr	r1, [pc, #28]	; (8001b30 <HAL_UART_RxCpltCallback+0x9c>)
 8001b14:	4804      	ldr	r0, [pc, #16]	; (8001b28 <HAL_UART_RxCpltCallback+0x94>)
 8001b16:	f002 f9ae 	bl	8003e76 <HAL_UART_Receive_IT>
	}
}
 8001b1a:	bf00      	nop
 8001b1c:	3710      	adds	r7, #16
 8001b1e:	46bd      	mov	sp, r7
 8001b20:	bd80      	pop	{r7, pc}
 8001b22:	bf00      	nop
 8001b24:	2000057c 	.word	0x2000057c
 8001b28:	200005c4 	.word	0x200005c4
 8001b2c:	20000b5c 	.word	0x20000b5c
 8001b30:	20000c30 	.word	0x20000c30

08001b34 <HAL_UARTEx_RxEventCallback>:

void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t size) {
 8001b34:	b580      	push	{r7, lr}
 8001b36:	b082      	sub	sp, #8
 8001b38:	af00      	add	r7, sp, #0
 8001b3a:	6078      	str	r0, [r7, #4]
 8001b3c:	460b      	mov	r3, r1
 8001b3e:	807b      	strh	r3, [r7, #2]
	if (huart->Instance == UART4) {
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	4a05      	ldr	r2, [pc, #20]	; (8001b5c <HAL_UARTEx_RxEventCallback+0x28>)
 8001b46:	4293      	cmp	r3, r2
 8001b48:	d103      	bne.n	8001b52 <HAL_UARTEx_RxEventCallback+0x1e>
		eth_read(size);
 8001b4a:	887b      	ldrh	r3, [r7, #2]
 8001b4c:	4618      	mov	r0, r3
 8001b4e:	f7ff f8b9 	bl	8000cc4 <eth_read>
	}
}
 8001b52:	bf00      	nop
 8001b54:	3708      	adds	r7, #8
 8001b56:	46bd      	mov	sp, r7
 8001b58:	bd80      	pop	{r7, pc}
 8001b5a:	bf00      	nop
 8001b5c:	40004c00 	.word	0x40004c00

08001b60 <__io_putchar>:

int __io_putchar(int ch) {
 8001b60:	b580      	push	{r7, lr}
 8001b62:	b082      	sub	sp, #8
 8001b64:	af00      	add	r7, sp, #0
 8001b66:	6078      	str	r0, [r7, #4]
	HAL_UART_Transmit(&huart3, (uint8_t *)&ch, 1, 0xffff);
 8001b68:	1d39      	adds	r1, r7, #4
 8001b6a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001b6e:	2201      	movs	r2, #1
 8001b70:	4803      	ldr	r0, [pc, #12]	; (8001b80 <__io_putchar+0x20>)
 8001b72:	f002 f8bf 	bl	8003cf4 <HAL_UART_Transmit>
	return ch;
 8001b76:	687b      	ldr	r3, [r7, #4]
}
 8001b78:	4618      	mov	r0, r3
 8001b7a:	3708      	adds	r7, #8
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	bd80      	pop	{r7, pc}
 8001b80:	200005c4 	.word	0x200005c4

08001b84 <Reset_Handler>:
 8001b84:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001bbc <LoopFillZerobss+0xe>
 8001b88:	f7ff fefc 	bl	8001984 <SystemInit>
 8001b8c:	480c      	ldr	r0, [pc, #48]	; (8001bc0 <LoopFillZerobss+0x12>)
 8001b8e:	490d      	ldr	r1, [pc, #52]	; (8001bc4 <LoopFillZerobss+0x16>)
 8001b90:	4a0d      	ldr	r2, [pc, #52]	; (8001bc8 <LoopFillZerobss+0x1a>)
 8001b92:	2300      	movs	r3, #0
 8001b94:	e002      	b.n	8001b9c <LoopCopyDataInit>

08001b96 <CopyDataInit>:
 8001b96:	58d4      	ldr	r4, [r2, r3]
 8001b98:	50c4      	str	r4, [r0, r3]
 8001b9a:	3304      	adds	r3, #4

08001b9c <LoopCopyDataInit>:
 8001b9c:	18c4      	adds	r4, r0, r3
 8001b9e:	428c      	cmp	r4, r1
 8001ba0:	d3f9      	bcc.n	8001b96 <CopyDataInit>
 8001ba2:	4a0a      	ldr	r2, [pc, #40]	; (8001bcc <LoopFillZerobss+0x1e>)
 8001ba4:	4c0a      	ldr	r4, [pc, #40]	; (8001bd0 <LoopFillZerobss+0x22>)
 8001ba6:	2300      	movs	r3, #0
 8001ba8:	e001      	b.n	8001bae <LoopFillZerobss>

08001baa <FillZerobss>:
 8001baa:	6013      	str	r3, [r2, #0]
 8001bac:	3204      	adds	r2, #4

08001bae <LoopFillZerobss>:
 8001bae:	42a2      	cmp	r2, r4
 8001bb0:	d3fb      	bcc.n	8001baa <FillZerobss>
 8001bb2:	f004 f8c7 	bl	8005d44 <__libc_init_array>
 8001bb6:	f7ff f97f 	bl	8000eb8 <main>
 8001bba:	4770      	bx	lr
 8001bbc:	20030000 	.word	0x20030000
 8001bc0:	20000000 	.word	0x20000000
 8001bc4:	2000009c 	.word	0x2000009c
 8001bc8:	08006efc 	.word	0x08006efc
 8001bcc:	2000009c 	.word	0x2000009c
 8001bd0:	20000d84 	.word	0x20000d84

08001bd4 <ADC_IRQHandler>:
 8001bd4:	e7fe      	b.n	8001bd4 <ADC_IRQHandler>
	...

08001bd8 <HAL_Init>:
 8001bd8:	b580      	push	{r7, lr}
 8001bda:	af00      	add	r7, sp, #0
 8001bdc:	4b0e      	ldr	r3, [pc, #56]	; (8001c18 <HAL_Init+0x40>)
 8001bde:	681b      	ldr	r3, [r3, #0]
 8001be0:	4a0d      	ldr	r2, [pc, #52]	; (8001c18 <HAL_Init+0x40>)
 8001be2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001be6:	6013      	str	r3, [r2, #0]
 8001be8:	4b0b      	ldr	r3, [pc, #44]	; (8001c18 <HAL_Init+0x40>)
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	4a0a      	ldr	r2, [pc, #40]	; (8001c18 <HAL_Init+0x40>)
 8001bee:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001bf2:	6013      	str	r3, [r2, #0]
 8001bf4:	4b08      	ldr	r3, [pc, #32]	; (8001c18 <HAL_Init+0x40>)
 8001bf6:	681b      	ldr	r3, [r3, #0]
 8001bf8:	4a07      	ldr	r2, [pc, #28]	; (8001c18 <HAL_Init+0x40>)
 8001bfa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001bfe:	6013      	str	r3, [r2, #0]
 8001c00:	2003      	movs	r0, #3
 8001c02:	f000 f94f 	bl	8001ea4 <HAL_NVIC_SetPriorityGrouping>
 8001c06:	2000      	movs	r0, #0
 8001c08:	f000 f808 	bl	8001c1c <HAL_InitTick>
 8001c0c:	f7ff fba2 	bl	8001354 <HAL_MspInit>
 8001c10:	2300      	movs	r3, #0
 8001c12:	4618      	mov	r0, r3
 8001c14:	bd80      	pop	{r7, pc}
 8001c16:	bf00      	nop
 8001c18:	40023c00 	.word	0x40023c00

08001c1c <HAL_InitTick>:
 8001c1c:	b580      	push	{r7, lr}
 8001c1e:	b082      	sub	sp, #8
 8001c20:	af00      	add	r7, sp, #0
 8001c22:	6078      	str	r0, [r7, #4]
 8001c24:	4b12      	ldr	r3, [pc, #72]	; (8001c70 <HAL_InitTick+0x54>)
 8001c26:	681a      	ldr	r2, [r3, #0]
 8001c28:	4b12      	ldr	r3, [pc, #72]	; (8001c74 <HAL_InitTick+0x58>)
 8001c2a:	781b      	ldrb	r3, [r3, #0]
 8001c2c:	4619      	mov	r1, r3
 8001c2e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001c32:	fbb3 f3f1 	udiv	r3, r3, r1
 8001c36:	fbb2 f3f3 	udiv	r3, r2, r3
 8001c3a:	4618      	mov	r0, r3
 8001c3c:	f000 f967 	bl	8001f0e <HAL_SYSTICK_Config>
 8001c40:	4603      	mov	r3, r0
 8001c42:	2b00      	cmp	r3, #0
 8001c44:	d001      	beq.n	8001c4a <HAL_InitTick+0x2e>
 8001c46:	2301      	movs	r3, #1
 8001c48:	e00e      	b.n	8001c68 <HAL_InitTick+0x4c>
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	2b0f      	cmp	r3, #15
 8001c4e:	d80a      	bhi.n	8001c66 <HAL_InitTick+0x4a>
 8001c50:	2200      	movs	r2, #0
 8001c52:	6879      	ldr	r1, [r7, #4]
 8001c54:	f04f 30ff 	mov.w	r0, #4294967295
 8001c58:	f000 f92f 	bl	8001eba <HAL_NVIC_SetPriority>
 8001c5c:	4a06      	ldr	r2, [pc, #24]	; (8001c78 <HAL_InitTick+0x5c>)
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	6013      	str	r3, [r2, #0]
 8001c62:	2300      	movs	r3, #0
 8001c64:	e000      	b.n	8001c68 <HAL_InitTick+0x4c>
 8001c66:	2301      	movs	r3, #1
 8001c68:	4618      	mov	r0, r3
 8001c6a:	3708      	adds	r7, #8
 8001c6c:	46bd      	mov	sp, r7
 8001c6e:	bd80      	pop	{r7, pc}
 8001c70:	20000034 	.word	0x20000034
 8001c74:	2000003c 	.word	0x2000003c
 8001c78:	20000038 	.word	0x20000038

08001c7c <HAL_IncTick>:
 8001c7c:	b480      	push	{r7}
 8001c7e:	af00      	add	r7, sp, #0
 8001c80:	4b06      	ldr	r3, [pc, #24]	; (8001c9c <HAL_IncTick+0x20>)
 8001c82:	781b      	ldrb	r3, [r3, #0]
 8001c84:	461a      	mov	r2, r3
 8001c86:	4b06      	ldr	r3, [pc, #24]	; (8001ca0 <HAL_IncTick+0x24>)
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	4413      	add	r3, r2
 8001c8c:	4a04      	ldr	r2, [pc, #16]	; (8001ca0 <HAL_IncTick+0x24>)
 8001c8e:	6013      	str	r3, [r2, #0]
 8001c90:	bf00      	nop
 8001c92:	46bd      	mov	sp, r7
 8001c94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c98:	4770      	bx	lr
 8001c9a:	bf00      	nop
 8001c9c:	2000003c 	.word	0x2000003c
 8001ca0:	20000c34 	.word	0x20000c34

08001ca4 <HAL_GetTick>:
 8001ca4:	b480      	push	{r7}
 8001ca6:	af00      	add	r7, sp, #0
 8001ca8:	4b03      	ldr	r3, [pc, #12]	; (8001cb8 <HAL_GetTick+0x14>)
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	4618      	mov	r0, r3
 8001cae:	46bd      	mov	sp, r7
 8001cb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001cb4:	4770      	bx	lr
 8001cb6:	bf00      	nop
 8001cb8:	20000c34 	.word	0x20000c34

08001cbc <HAL_Delay>:
 8001cbc:	b580      	push	{r7, lr}
 8001cbe:	b084      	sub	sp, #16
 8001cc0:	af00      	add	r7, sp, #0
 8001cc2:	6078      	str	r0, [r7, #4]
 8001cc4:	f7ff ffee 	bl	8001ca4 <HAL_GetTick>
 8001cc8:	60b8      	str	r0, [r7, #8]
 8001cca:	687b      	ldr	r3, [r7, #4]
 8001ccc:	60fb      	str	r3, [r7, #12]
 8001cce:	68fb      	ldr	r3, [r7, #12]
 8001cd0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001cd4:	d005      	beq.n	8001ce2 <HAL_Delay+0x26>
 8001cd6:	4b0a      	ldr	r3, [pc, #40]	; (8001d00 <HAL_Delay+0x44>)
 8001cd8:	781b      	ldrb	r3, [r3, #0]
 8001cda:	461a      	mov	r2, r3
 8001cdc:	68fb      	ldr	r3, [r7, #12]
 8001cde:	4413      	add	r3, r2
 8001ce0:	60fb      	str	r3, [r7, #12]
 8001ce2:	bf00      	nop
 8001ce4:	f7ff ffde 	bl	8001ca4 <HAL_GetTick>
 8001ce8:	4602      	mov	r2, r0
 8001cea:	68bb      	ldr	r3, [r7, #8]
 8001cec:	1ad3      	subs	r3, r2, r3
 8001cee:	68fa      	ldr	r2, [r7, #12]
 8001cf0:	429a      	cmp	r2, r3
 8001cf2:	d8f7      	bhi.n	8001ce4 <HAL_Delay+0x28>
 8001cf4:	bf00      	nop
 8001cf6:	bf00      	nop
 8001cf8:	3710      	adds	r7, #16
 8001cfa:	46bd      	mov	sp, r7
 8001cfc:	bd80      	pop	{r7, pc}
 8001cfe:	bf00      	nop
 8001d00:	2000003c 	.word	0x2000003c

08001d04 <__NVIC_SetPriorityGrouping>:
 8001d04:	b480      	push	{r7}
 8001d06:	b085      	sub	sp, #20
 8001d08:	af00      	add	r7, sp, #0
 8001d0a:	6078      	str	r0, [r7, #4]
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	f003 0307 	and.w	r3, r3, #7
 8001d12:	60fb      	str	r3, [r7, #12]
 8001d14:	4b0c      	ldr	r3, [pc, #48]	; (8001d48 <__NVIC_SetPriorityGrouping+0x44>)
 8001d16:	68db      	ldr	r3, [r3, #12]
 8001d18:	60bb      	str	r3, [r7, #8]
 8001d1a:	68ba      	ldr	r2, [r7, #8]
 8001d1c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8001d20:	4013      	ands	r3, r2
 8001d22:	60bb      	str	r3, [r7, #8]
 8001d24:	68fb      	ldr	r3, [r7, #12]
 8001d26:	021a      	lsls	r2, r3, #8
 8001d28:	68bb      	ldr	r3, [r7, #8]
 8001d2a:	4313      	orrs	r3, r2
 8001d2c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001d30:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001d34:	60bb      	str	r3, [r7, #8]
 8001d36:	4a04      	ldr	r2, [pc, #16]	; (8001d48 <__NVIC_SetPriorityGrouping+0x44>)
 8001d38:	68bb      	ldr	r3, [r7, #8]
 8001d3a:	60d3      	str	r3, [r2, #12]
 8001d3c:	bf00      	nop
 8001d3e:	3714      	adds	r7, #20
 8001d40:	46bd      	mov	sp, r7
 8001d42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d46:	4770      	bx	lr
 8001d48:	e000ed00 	.word	0xe000ed00

08001d4c <__NVIC_GetPriorityGrouping>:
 8001d4c:	b480      	push	{r7}
 8001d4e:	af00      	add	r7, sp, #0
 8001d50:	4b04      	ldr	r3, [pc, #16]	; (8001d64 <__NVIC_GetPriorityGrouping+0x18>)
 8001d52:	68db      	ldr	r3, [r3, #12]
 8001d54:	0a1b      	lsrs	r3, r3, #8
 8001d56:	f003 0307 	and.w	r3, r3, #7
 8001d5a:	4618      	mov	r0, r3
 8001d5c:	46bd      	mov	sp, r7
 8001d5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d62:	4770      	bx	lr
 8001d64:	e000ed00 	.word	0xe000ed00

08001d68 <__NVIC_EnableIRQ>:
 8001d68:	b480      	push	{r7}
 8001d6a:	b083      	sub	sp, #12
 8001d6c:	af00      	add	r7, sp, #0
 8001d6e:	4603      	mov	r3, r0
 8001d70:	71fb      	strb	r3, [r7, #7]
 8001d72:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d76:	2b00      	cmp	r3, #0
 8001d78:	db0b      	blt.n	8001d92 <__NVIC_EnableIRQ+0x2a>
 8001d7a:	79fb      	ldrb	r3, [r7, #7]
 8001d7c:	f003 021f 	and.w	r2, r3, #31
 8001d80:	4907      	ldr	r1, [pc, #28]	; (8001da0 <__NVIC_EnableIRQ+0x38>)
 8001d82:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001d86:	095b      	lsrs	r3, r3, #5
 8001d88:	2001      	movs	r0, #1
 8001d8a:	fa00 f202 	lsl.w	r2, r0, r2
 8001d8e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001d92:	bf00      	nop
 8001d94:	370c      	adds	r7, #12
 8001d96:	46bd      	mov	sp, r7
 8001d98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d9c:	4770      	bx	lr
 8001d9e:	bf00      	nop
 8001da0:	e000e100 	.word	0xe000e100

08001da4 <__NVIC_SetPriority>:
 8001da4:	b480      	push	{r7}
 8001da6:	b083      	sub	sp, #12
 8001da8:	af00      	add	r7, sp, #0
 8001daa:	4603      	mov	r3, r0
 8001dac:	6039      	str	r1, [r7, #0]
 8001dae:	71fb      	strb	r3, [r7, #7]
 8001db0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001db4:	2b00      	cmp	r3, #0
 8001db6:	db0a      	blt.n	8001dce <__NVIC_SetPriority+0x2a>
 8001db8:	683b      	ldr	r3, [r7, #0]
 8001dba:	b2da      	uxtb	r2, r3
 8001dbc:	490c      	ldr	r1, [pc, #48]	; (8001df0 <__NVIC_SetPriority+0x4c>)
 8001dbe:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001dc2:	0112      	lsls	r2, r2, #4
 8001dc4:	b2d2      	uxtb	r2, r2
 8001dc6:	440b      	add	r3, r1
 8001dc8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001dcc:	e00a      	b.n	8001de4 <__NVIC_SetPriority+0x40>
 8001dce:	683b      	ldr	r3, [r7, #0]
 8001dd0:	b2da      	uxtb	r2, r3
 8001dd2:	4908      	ldr	r1, [pc, #32]	; (8001df4 <__NVIC_SetPriority+0x50>)
 8001dd4:	79fb      	ldrb	r3, [r7, #7]
 8001dd6:	f003 030f 	and.w	r3, r3, #15
 8001dda:	3b04      	subs	r3, #4
 8001ddc:	0112      	lsls	r2, r2, #4
 8001dde:	b2d2      	uxtb	r2, r2
 8001de0:	440b      	add	r3, r1
 8001de2:	761a      	strb	r2, [r3, #24]
 8001de4:	bf00      	nop
 8001de6:	370c      	adds	r7, #12
 8001de8:	46bd      	mov	sp, r7
 8001dea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dee:	4770      	bx	lr
 8001df0:	e000e100 	.word	0xe000e100
 8001df4:	e000ed00 	.word	0xe000ed00

08001df8 <NVIC_EncodePriority>:
 8001df8:	b480      	push	{r7}
 8001dfa:	b089      	sub	sp, #36	; 0x24
 8001dfc:	af00      	add	r7, sp, #0
 8001dfe:	60f8      	str	r0, [r7, #12]
 8001e00:	60b9      	str	r1, [r7, #8]
 8001e02:	607a      	str	r2, [r7, #4]
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	f003 0307 	and.w	r3, r3, #7
 8001e0a:	61fb      	str	r3, [r7, #28]
 8001e0c:	69fb      	ldr	r3, [r7, #28]
 8001e0e:	f1c3 0307 	rsb	r3, r3, #7
 8001e12:	2b04      	cmp	r3, #4
 8001e14:	bf28      	it	cs
 8001e16:	2304      	movcs	r3, #4
 8001e18:	61bb      	str	r3, [r7, #24]
 8001e1a:	69fb      	ldr	r3, [r7, #28]
 8001e1c:	3304      	adds	r3, #4
 8001e1e:	2b06      	cmp	r3, #6
 8001e20:	d902      	bls.n	8001e28 <NVIC_EncodePriority+0x30>
 8001e22:	69fb      	ldr	r3, [r7, #28]
 8001e24:	3b03      	subs	r3, #3
 8001e26:	e000      	b.n	8001e2a <NVIC_EncodePriority+0x32>
 8001e28:	2300      	movs	r3, #0
 8001e2a:	617b      	str	r3, [r7, #20]
 8001e2c:	f04f 32ff 	mov.w	r2, #4294967295
 8001e30:	69bb      	ldr	r3, [r7, #24]
 8001e32:	fa02 f303 	lsl.w	r3, r2, r3
 8001e36:	43da      	mvns	r2, r3
 8001e38:	68bb      	ldr	r3, [r7, #8]
 8001e3a:	401a      	ands	r2, r3
 8001e3c:	697b      	ldr	r3, [r7, #20]
 8001e3e:	409a      	lsls	r2, r3
 8001e40:	f04f 31ff 	mov.w	r1, #4294967295
 8001e44:	697b      	ldr	r3, [r7, #20]
 8001e46:	fa01 f303 	lsl.w	r3, r1, r3
 8001e4a:	43d9      	mvns	r1, r3
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	400b      	ands	r3, r1
 8001e50:	4313      	orrs	r3, r2
 8001e52:	4618      	mov	r0, r3
 8001e54:	3724      	adds	r7, #36	; 0x24
 8001e56:	46bd      	mov	sp, r7
 8001e58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e5c:	4770      	bx	lr
	...

08001e60 <SysTick_Config>:
 8001e60:	b580      	push	{r7, lr}
 8001e62:	b082      	sub	sp, #8
 8001e64:	af00      	add	r7, sp, #0
 8001e66:	6078      	str	r0, [r7, #4]
 8001e68:	687b      	ldr	r3, [r7, #4]
 8001e6a:	3b01      	subs	r3, #1
 8001e6c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001e70:	d301      	bcc.n	8001e76 <SysTick_Config+0x16>
 8001e72:	2301      	movs	r3, #1
 8001e74:	e00f      	b.n	8001e96 <SysTick_Config+0x36>
 8001e76:	4a0a      	ldr	r2, [pc, #40]	; (8001ea0 <SysTick_Config+0x40>)
 8001e78:	687b      	ldr	r3, [r7, #4]
 8001e7a:	3b01      	subs	r3, #1
 8001e7c:	6053      	str	r3, [r2, #4]
 8001e7e:	210f      	movs	r1, #15
 8001e80:	f04f 30ff 	mov.w	r0, #4294967295
 8001e84:	f7ff ff8e 	bl	8001da4 <__NVIC_SetPriority>
 8001e88:	4b05      	ldr	r3, [pc, #20]	; (8001ea0 <SysTick_Config+0x40>)
 8001e8a:	2200      	movs	r2, #0
 8001e8c:	609a      	str	r2, [r3, #8]
 8001e8e:	4b04      	ldr	r3, [pc, #16]	; (8001ea0 <SysTick_Config+0x40>)
 8001e90:	2207      	movs	r2, #7
 8001e92:	601a      	str	r2, [r3, #0]
 8001e94:	2300      	movs	r3, #0
 8001e96:	4618      	mov	r0, r3
 8001e98:	3708      	adds	r7, #8
 8001e9a:	46bd      	mov	sp, r7
 8001e9c:	bd80      	pop	{r7, pc}
 8001e9e:	bf00      	nop
 8001ea0:	e000e010 	.word	0xe000e010

08001ea4 <HAL_NVIC_SetPriorityGrouping>:
 8001ea4:	b580      	push	{r7, lr}
 8001ea6:	b082      	sub	sp, #8
 8001ea8:	af00      	add	r7, sp, #0
 8001eaa:	6078      	str	r0, [r7, #4]
 8001eac:	6878      	ldr	r0, [r7, #4]
 8001eae:	f7ff ff29 	bl	8001d04 <__NVIC_SetPriorityGrouping>
 8001eb2:	bf00      	nop
 8001eb4:	3708      	adds	r7, #8
 8001eb6:	46bd      	mov	sp, r7
 8001eb8:	bd80      	pop	{r7, pc}

08001eba <HAL_NVIC_SetPriority>:
 8001eba:	b580      	push	{r7, lr}
 8001ebc:	b086      	sub	sp, #24
 8001ebe:	af00      	add	r7, sp, #0
 8001ec0:	4603      	mov	r3, r0
 8001ec2:	60b9      	str	r1, [r7, #8]
 8001ec4:	607a      	str	r2, [r7, #4]
 8001ec6:	73fb      	strb	r3, [r7, #15]
 8001ec8:	2300      	movs	r3, #0
 8001eca:	617b      	str	r3, [r7, #20]
 8001ecc:	f7ff ff3e 	bl	8001d4c <__NVIC_GetPriorityGrouping>
 8001ed0:	6178      	str	r0, [r7, #20]
 8001ed2:	687a      	ldr	r2, [r7, #4]
 8001ed4:	68b9      	ldr	r1, [r7, #8]
 8001ed6:	6978      	ldr	r0, [r7, #20]
 8001ed8:	f7ff ff8e 	bl	8001df8 <NVIC_EncodePriority>
 8001edc:	4602      	mov	r2, r0
 8001ede:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001ee2:	4611      	mov	r1, r2
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	f7ff ff5d 	bl	8001da4 <__NVIC_SetPriority>
 8001eea:	bf00      	nop
 8001eec:	3718      	adds	r7, #24
 8001eee:	46bd      	mov	sp, r7
 8001ef0:	bd80      	pop	{r7, pc}

08001ef2 <HAL_NVIC_EnableIRQ>:
 8001ef2:	b580      	push	{r7, lr}
 8001ef4:	b082      	sub	sp, #8
 8001ef6:	af00      	add	r7, sp, #0
 8001ef8:	4603      	mov	r3, r0
 8001efa:	71fb      	strb	r3, [r7, #7]
 8001efc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f00:	4618      	mov	r0, r3
 8001f02:	f7ff ff31 	bl	8001d68 <__NVIC_EnableIRQ>
 8001f06:	bf00      	nop
 8001f08:	3708      	adds	r7, #8
 8001f0a:	46bd      	mov	sp, r7
 8001f0c:	bd80      	pop	{r7, pc}

08001f0e <HAL_SYSTICK_Config>:
 8001f0e:	b580      	push	{r7, lr}
 8001f10:	b082      	sub	sp, #8
 8001f12:	af00      	add	r7, sp, #0
 8001f14:	6078      	str	r0, [r7, #4]
 8001f16:	6878      	ldr	r0, [r7, #4]
 8001f18:	f7ff ffa2 	bl	8001e60 <SysTick_Config>
 8001f1c:	4603      	mov	r3, r0
 8001f1e:	4618      	mov	r0, r3
 8001f20:	3708      	adds	r7, #8
 8001f22:	46bd      	mov	sp, r7
 8001f24:	bd80      	pop	{r7, pc}
	...

08001f28 <HAL_DMA_Init>:
 8001f28:	b580      	push	{r7, lr}
 8001f2a:	b086      	sub	sp, #24
 8001f2c:	af00      	add	r7, sp, #0
 8001f2e:	6078      	str	r0, [r7, #4]
 8001f30:	2300      	movs	r3, #0
 8001f32:	617b      	str	r3, [r7, #20]
 8001f34:	f7ff feb6 	bl	8001ca4 <HAL_GetTick>
 8001f38:	6138      	str	r0, [r7, #16]
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	2b00      	cmp	r3, #0
 8001f3e:	d101      	bne.n	8001f44 <HAL_DMA_Init+0x1c>
 8001f40:	2301      	movs	r3, #1
 8001f42:	e099      	b.n	8002078 <HAL_DMA_Init+0x150>
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	2202      	movs	r2, #2
 8001f48:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001f4c:	687b      	ldr	r3, [r7, #4]
 8001f4e:	2200      	movs	r2, #0
 8001f50:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8001f54:	687b      	ldr	r3, [r7, #4]
 8001f56:	681b      	ldr	r3, [r3, #0]
 8001f58:	681a      	ldr	r2, [r3, #0]
 8001f5a:	687b      	ldr	r3, [r7, #4]
 8001f5c:	681b      	ldr	r3, [r3, #0]
 8001f5e:	f022 0201 	bic.w	r2, r2, #1
 8001f62:	601a      	str	r2, [r3, #0]
 8001f64:	e00f      	b.n	8001f86 <HAL_DMA_Init+0x5e>
 8001f66:	f7ff fe9d 	bl	8001ca4 <HAL_GetTick>
 8001f6a:	4602      	mov	r2, r0
 8001f6c:	693b      	ldr	r3, [r7, #16]
 8001f6e:	1ad3      	subs	r3, r2, r3
 8001f70:	2b05      	cmp	r3, #5
 8001f72:	d908      	bls.n	8001f86 <HAL_DMA_Init+0x5e>
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	2220      	movs	r2, #32
 8001f78:	655a      	str	r2, [r3, #84]	; 0x54
 8001f7a:	687b      	ldr	r3, [r7, #4]
 8001f7c:	2203      	movs	r2, #3
 8001f7e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8001f82:	2303      	movs	r3, #3
 8001f84:	e078      	b.n	8002078 <HAL_DMA_Init+0x150>
 8001f86:	687b      	ldr	r3, [r7, #4]
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	681b      	ldr	r3, [r3, #0]
 8001f8c:	f003 0301 	and.w	r3, r3, #1
 8001f90:	2b00      	cmp	r3, #0
 8001f92:	d1e8      	bne.n	8001f66 <HAL_DMA_Init+0x3e>
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	681b      	ldr	r3, [r3, #0]
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	617b      	str	r3, [r7, #20]
 8001f9c:	697a      	ldr	r2, [r7, #20]
 8001f9e:	4b38      	ldr	r3, [pc, #224]	; (8002080 <HAL_DMA_Init+0x158>)
 8001fa0:	4013      	ands	r3, r2
 8001fa2:	617b      	str	r3, [r7, #20]
 8001fa4:	687b      	ldr	r3, [r7, #4]
 8001fa6:	685a      	ldr	r2, [r3, #4]
 8001fa8:	687b      	ldr	r3, [r7, #4]
 8001faa:	689b      	ldr	r3, [r3, #8]
 8001fac:	431a      	orrs	r2, r3
 8001fae:	687b      	ldr	r3, [r7, #4]
 8001fb0:	68db      	ldr	r3, [r3, #12]
 8001fb2:	431a      	orrs	r2, r3
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	691b      	ldr	r3, [r3, #16]
 8001fb8:	431a      	orrs	r2, r3
 8001fba:	687b      	ldr	r3, [r7, #4]
 8001fbc:	695b      	ldr	r3, [r3, #20]
 8001fbe:	431a      	orrs	r2, r3
 8001fc0:	687b      	ldr	r3, [r7, #4]
 8001fc2:	699b      	ldr	r3, [r3, #24]
 8001fc4:	431a      	orrs	r2, r3
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	69db      	ldr	r3, [r3, #28]
 8001fca:	431a      	orrs	r2, r3
 8001fcc:	687b      	ldr	r3, [r7, #4]
 8001fce:	6a1b      	ldr	r3, [r3, #32]
 8001fd0:	4313      	orrs	r3, r2
 8001fd2:	697a      	ldr	r2, [r7, #20]
 8001fd4:	4313      	orrs	r3, r2
 8001fd6:	617b      	str	r3, [r7, #20]
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001fdc:	2b04      	cmp	r3, #4
 8001fde:	d107      	bne.n	8001ff0 <HAL_DMA_Init+0xc8>
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8001fe4:	687b      	ldr	r3, [r7, #4]
 8001fe6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001fe8:	4313      	orrs	r3, r2
 8001fea:	697a      	ldr	r2, [r7, #20]
 8001fec:	4313      	orrs	r3, r2
 8001fee:	617b      	str	r3, [r7, #20]
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	681b      	ldr	r3, [r3, #0]
 8001ff4:	697a      	ldr	r2, [r7, #20]
 8001ff6:	601a      	str	r2, [r3, #0]
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	681b      	ldr	r3, [r3, #0]
 8001ffc:	695b      	ldr	r3, [r3, #20]
 8001ffe:	617b      	str	r3, [r7, #20]
 8002000:	697b      	ldr	r3, [r7, #20]
 8002002:	f023 0307 	bic.w	r3, r3, #7
 8002006:	617b      	str	r3, [r7, #20]
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800200c:	697a      	ldr	r2, [r7, #20]
 800200e:	4313      	orrs	r3, r2
 8002010:	617b      	str	r3, [r7, #20]
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002016:	2b04      	cmp	r3, #4
 8002018:	d117      	bne.n	800204a <HAL_DMA_Init+0x122>
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800201e:	697a      	ldr	r2, [r7, #20]
 8002020:	4313      	orrs	r3, r2
 8002022:	617b      	str	r3, [r7, #20]
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002028:	2b00      	cmp	r3, #0
 800202a:	d00e      	beq.n	800204a <HAL_DMA_Init+0x122>
 800202c:	6878      	ldr	r0, [r7, #4]
 800202e:	f000 fb01 	bl	8002634 <DMA_CheckFifoParam>
 8002032:	4603      	mov	r3, r0
 8002034:	2b00      	cmp	r3, #0
 8002036:	d008      	beq.n	800204a <HAL_DMA_Init+0x122>
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	2240      	movs	r2, #64	; 0x40
 800203c:	655a      	str	r2, [r3, #84]	; 0x54
 800203e:	687b      	ldr	r3, [r7, #4]
 8002040:	2201      	movs	r2, #1
 8002042:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002046:	2301      	movs	r3, #1
 8002048:	e016      	b.n	8002078 <HAL_DMA_Init+0x150>
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	681b      	ldr	r3, [r3, #0]
 800204e:	697a      	ldr	r2, [r7, #20]
 8002050:	615a      	str	r2, [r3, #20]
 8002052:	6878      	ldr	r0, [r7, #4]
 8002054:	f000 fab8 	bl	80025c8 <DMA_CalcBaseAndBitshift>
 8002058:	4603      	mov	r3, r0
 800205a:	60fb      	str	r3, [r7, #12]
 800205c:	687b      	ldr	r3, [r7, #4]
 800205e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002060:	223f      	movs	r2, #63	; 0x3f
 8002062:	409a      	lsls	r2, r3
 8002064:	68fb      	ldr	r3, [r7, #12]
 8002066:	609a      	str	r2, [r3, #8]
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	2200      	movs	r2, #0
 800206c:	655a      	str	r2, [r3, #84]	; 0x54
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	2201      	movs	r2, #1
 8002072:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002076:	2300      	movs	r3, #0
 8002078:	4618      	mov	r0, r3
 800207a:	3718      	adds	r7, #24
 800207c:	46bd      	mov	sp, r7
 800207e:	bd80      	pop	{r7, pc}
 8002080:	f010803f 	.word	0xf010803f

08002084 <HAL_DMA_Start_IT>:
 8002084:	b580      	push	{r7, lr}
 8002086:	b086      	sub	sp, #24
 8002088:	af00      	add	r7, sp, #0
 800208a:	60f8      	str	r0, [r7, #12]
 800208c:	60b9      	str	r1, [r7, #8]
 800208e:	607a      	str	r2, [r7, #4]
 8002090:	603b      	str	r3, [r7, #0]
 8002092:	2300      	movs	r3, #0
 8002094:	75fb      	strb	r3, [r7, #23]
 8002096:	68fb      	ldr	r3, [r7, #12]
 8002098:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800209a:	613b      	str	r3, [r7, #16]
 800209c:	68fb      	ldr	r3, [r7, #12]
 800209e:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80020a2:	2b01      	cmp	r3, #1
 80020a4:	d101      	bne.n	80020aa <HAL_DMA_Start_IT+0x26>
 80020a6:	2302      	movs	r3, #2
 80020a8:	e040      	b.n	800212c <HAL_DMA_Start_IT+0xa8>
 80020aa:	68fb      	ldr	r3, [r7, #12]
 80020ac:	2201      	movs	r2, #1
 80020ae:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80020b2:	68fb      	ldr	r3, [r7, #12]
 80020b4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80020b8:	b2db      	uxtb	r3, r3
 80020ba:	2b01      	cmp	r3, #1
 80020bc:	d12f      	bne.n	800211e <HAL_DMA_Start_IT+0x9a>
 80020be:	68fb      	ldr	r3, [r7, #12]
 80020c0:	2202      	movs	r2, #2
 80020c2:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80020c6:	68fb      	ldr	r3, [r7, #12]
 80020c8:	2200      	movs	r2, #0
 80020ca:	655a      	str	r2, [r3, #84]	; 0x54
 80020cc:	683b      	ldr	r3, [r7, #0]
 80020ce:	687a      	ldr	r2, [r7, #4]
 80020d0:	68b9      	ldr	r1, [r7, #8]
 80020d2:	68f8      	ldr	r0, [r7, #12]
 80020d4:	f000 fa4a 	bl	800256c <DMA_SetConfig>
 80020d8:	68fb      	ldr	r3, [r7, #12]
 80020da:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80020dc:	223f      	movs	r2, #63	; 0x3f
 80020de:	409a      	lsls	r2, r3
 80020e0:	693b      	ldr	r3, [r7, #16]
 80020e2:	609a      	str	r2, [r3, #8]
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	681b      	ldr	r3, [r3, #0]
 80020e8:	681a      	ldr	r2, [r3, #0]
 80020ea:	68fb      	ldr	r3, [r7, #12]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	f042 0216 	orr.w	r2, r2, #22
 80020f2:	601a      	str	r2, [r3, #0]
 80020f4:	68fb      	ldr	r3, [r7, #12]
 80020f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80020f8:	2b00      	cmp	r3, #0
 80020fa:	d007      	beq.n	800210c <HAL_DMA_Start_IT+0x88>
 80020fc:	68fb      	ldr	r3, [r7, #12]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	681a      	ldr	r2, [r3, #0]
 8002102:	68fb      	ldr	r3, [r7, #12]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	f042 0208 	orr.w	r2, r2, #8
 800210a:	601a      	str	r2, [r3, #0]
 800210c:	68fb      	ldr	r3, [r7, #12]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	681a      	ldr	r2, [r3, #0]
 8002112:	68fb      	ldr	r3, [r7, #12]
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	f042 0201 	orr.w	r2, r2, #1
 800211a:	601a      	str	r2, [r3, #0]
 800211c:	e005      	b.n	800212a <HAL_DMA_Start_IT+0xa6>
 800211e:	68fb      	ldr	r3, [r7, #12]
 8002120:	2200      	movs	r2, #0
 8002122:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002126:	2302      	movs	r3, #2
 8002128:	75fb      	strb	r3, [r7, #23]
 800212a:	7dfb      	ldrb	r3, [r7, #23]
 800212c:	4618      	mov	r0, r3
 800212e:	3718      	adds	r7, #24
 8002130:	46bd      	mov	sp, r7
 8002132:	bd80      	pop	{r7, pc}

08002134 <HAL_DMA_Abort>:
 8002134:	b580      	push	{r7, lr}
 8002136:	b084      	sub	sp, #16
 8002138:	af00      	add	r7, sp, #0
 800213a:	6078      	str	r0, [r7, #4]
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002140:	60fb      	str	r3, [r7, #12]
 8002142:	f7ff fdaf 	bl	8001ca4 <HAL_GetTick>
 8002146:	60b8      	str	r0, [r7, #8]
 8002148:	687b      	ldr	r3, [r7, #4]
 800214a:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800214e:	b2db      	uxtb	r3, r3
 8002150:	2b02      	cmp	r3, #2
 8002152:	d008      	beq.n	8002166 <HAL_DMA_Abort+0x32>
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	2280      	movs	r2, #128	; 0x80
 8002158:	655a      	str	r2, [r3, #84]	; 0x54
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	2200      	movs	r2, #0
 800215e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002162:	2301      	movs	r3, #1
 8002164:	e052      	b.n	800220c <HAL_DMA_Abort+0xd8>
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	681b      	ldr	r3, [r3, #0]
 800216a:	681a      	ldr	r2, [r3, #0]
 800216c:	687b      	ldr	r3, [r7, #4]
 800216e:	681b      	ldr	r3, [r3, #0]
 8002170:	f022 0216 	bic.w	r2, r2, #22
 8002174:	601a      	str	r2, [r3, #0]
 8002176:	687b      	ldr	r3, [r7, #4]
 8002178:	681b      	ldr	r3, [r3, #0]
 800217a:	695a      	ldr	r2, [r3, #20]
 800217c:	687b      	ldr	r3, [r7, #4]
 800217e:	681b      	ldr	r3, [r3, #0]
 8002180:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002184:	615a      	str	r2, [r3, #20]
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800218a:	2b00      	cmp	r3, #0
 800218c:	d103      	bne.n	8002196 <HAL_DMA_Abort+0x62>
 800218e:	687b      	ldr	r3, [r7, #4]
 8002190:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002192:	2b00      	cmp	r3, #0
 8002194:	d007      	beq.n	80021a6 <HAL_DMA_Abort+0x72>
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	681a      	ldr	r2, [r3, #0]
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	f022 0208 	bic.w	r2, r2, #8
 80021a4:	601a      	str	r2, [r3, #0]
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	681b      	ldr	r3, [r3, #0]
 80021aa:	681a      	ldr	r2, [r3, #0]
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	f022 0201 	bic.w	r2, r2, #1
 80021b4:	601a      	str	r2, [r3, #0]
 80021b6:	e013      	b.n	80021e0 <HAL_DMA_Abort+0xac>
 80021b8:	f7ff fd74 	bl	8001ca4 <HAL_GetTick>
 80021bc:	4602      	mov	r2, r0
 80021be:	68bb      	ldr	r3, [r7, #8]
 80021c0:	1ad3      	subs	r3, r2, r3
 80021c2:	2b05      	cmp	r3, #5
 80021c4:	d90c      	bls.n	80021e0 <HAL_DMA_Abort+0xac>
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	2220      	movs	r2, #32
 80021ca:	655a      	str	r2, [r3, #84]	; 0x54
 80021cc:	687b      	ldr	r3, [r7, #4]
 80021ce:	2203      	movs	r2, #3
 80021d0:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80021d4:	687b      	ldr	r3, [r7, #4]
 80021d6:	2200      	movs	r2, #0
 80021d8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80021dc:	2303      	movs	r3, #3
 80021de:	e015      	b.n	800220c <HAL_DMA_Abort+0xd8>
 80021e0:	687b      	ldr	r3, [r7, #4]
 80021e2:	681b      	ldr	r3, [r3, #0]
 80021e4:	681b      	ldr	r3, [r3, #0]
 80021e6:	f003 0301 	and.w	r3, r3, #1
 80021ea:	2b00      	cmp	r3, #0
 80021ec:	d1e4      	bne.n	80021b8 <HAL_DMA_Abort+0x84>
 80021ee:	687b      	ldr	r3, [r7, #4]
 80021f0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80021f2:	223f      	movs	r2, #63	; 0x3f
 80021f4:	409a      	lsls	r2, r3
 80021f6:	68fb      	ldr	r3, [r7, #12]
 80021f8:	609a      	str	r2, [r3, #8]
 80021fa:	687b      	ldr	r3, [r7, #4]
 80021fc:	2201      	movs	r2, #1
 80021fe:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	2200      	movs	r2, #0
 8002206:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800220a:	2300      	movs	r3, #0
 800220c:	4618      	mov	r0, r3
 800220e:	3710      	adds	r7, #16
 8002210:	46bd      	mov	sp, r7
 8002212:	bd80      	pop	{r7, pc}

08002214 <HAL_DMA_Abort_IT>:
 8002214:	b480      	push	{r7}
 8002216:	b083      	sub	sp, #12
 8002218:	af00      	add	r7, sp, #0
 800221a:	6078      	str	r0, [r7, #4]
 800221c:	687b      	ldr	r3, [r7, #4]
 800221e:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8002222:	b2db      	uxtb	r3, r3
 8002224:	2b02      	cmp	r3, #2
 8002226:	d004      	beq.n	8002232 <HAL_DMA_Abort_IT+0x1e>
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	2280      	movs	r2, #128	; 0x80
 800222c:	655a      	str	r2, [r3, #84]	; 0x54
 800222e:	2301      	movs	r3, #1
 8002230:	e00c      	b.n	800224c <HAL_DMA_Abort_IT+0x38>
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	2205      	movs	r2, #5
 8002236:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800223a:	687b      	ldr	r3, [r7, #4]
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	681a      	ldr	r2, [r3, #0]
 8002240:	687b      	ldr	r3, [r7, #4]
 8002242:	681b      	ldr	r3, [r3, #0]
 8002244:	f022 0201 	bic.w	r2, r2, #1
 8002248:	601a      	str	r2, [r3, #0]
 800224a:	2300      	movs	r3, #0
 800224c:	4618      	mov	r0, r3
 800224e:	370c      	adds	r7, #12
 8002250:	46bd      	mov	sp, r7
 8002252:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002256:	4770      	bx	lr

08002258 <HAL_DMA_IRQHandler>:
 8002258:	b580      	push	{r7, lr}
 800225a:	b086      	sub	sp, #24
 800225c:	af00      	add	r7, sp, #0
 800225e:	6078      	str	r0, [r7, #4]
 8002260:	2300      	movs	r3, #0
 8002262:	60bb      	str	r3, [r7, #8]
 8002264:	4b8e      	ldr	r3, [pc, #568]	; (80024a0 <HAL_DMA_IRQHandler+0x248>)
 8002266:	681b      	ldr	r3, [r3, #0]
 8002268:	4a8e      	ldr	r2, [pc, #568]	; (80024a4 <HAL_DMA_IRQHandler+0x24c>)
 800226a:	fba2 2303 	umull	r2, r3, r2, r3
 800226e:	0a9b      	lsrs	r3, r3, #10
 8002270:	617b      	str	r3, [r7, #20]
 8002272:	687b      	ldr	r3, [r7, #4]
 8002274:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8002276:	613b      	str	r3, [r7, #16]
 8002278:	693b      	ldr	r3, [r7, #16]
 800227a:	681b      	ldr	r3, [r3, #0]
 800227c:	60fb      	str	r3, [r7, #12]
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002282:	2208      	movs	r2, #8
 8002284:	409a      	lsls	r2, r3
 8002286:	68fb      	ldr	r3, [r7, #12]
 8002288:	4013      	ands	r3, r2
 800228a:	2b00      	cmp	r3, #0
 800228c:	d01a      	beq.n	80022c4 <HAL_DMA_IRQHandler+0x6c>
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	681b      	ldr	r3, [r3, #0]
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	f003 0304 	and.w	r3, r3, #4
 8002298:	2b00      	cmp	r3, #0
 800229a:	d013      	beq.n	80022c4 <HAL_DMA_IRQHandler+0x6c>
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	681b      	ldr	r3, [r3, #0]
 80022a0:	681a      	ldr	r2, [r3, #0]
 80022a2:	687b      	ldr	r3, [r7, #4]
 80022a4:	681b      	ldr	r3, [r3, #0]
 80022a6:	f022 0204 	bic.w	r2, r2, #4
 80022aa:	601a      	str	r2, [r3, #0]
 80022ac:	687b      	ldr	r3, [r7, #4]
 80022ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80022b0:	2208      	movs	r2, #8
 80022b2:	409a      	lsls	r2, r3
 80022b4:	693b      	ldr	r3, [r7, #16]
 80022b6:	609a      	str	r2, [r3, #8]
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80022bc:	f043 0201 	orr.w	r2, r3, #1
 80022c0:	687b      	ldr	r3, [r7, #4]
 80022c2:	655a      	str	r2, [r3, #84]	; 0x54
 80022c4:	687b      	ldr	r3, [r7, #4]
 80022c6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80022c8:	2201      	movs	r2, #1
 80022ca:	409a      	lsls	r2, r3
 80022cc:	68fb      	ldr	r3, [r7, #12]
 80022ce:	4013      	ands	r3, r2
 80022d0:	2b00      	cmp	r3, #0
 80022d2:	d012      	beq.n	80022fa <HAL_DMA_IRQHandler+0xa2>
 80022d4:	687b      	ldr	r3, [r7, #4]
 80022d6:	681b      	ldr	r3, [r3, #0]
 80022d8:	695b      	ldr	r3, [r3, #20]
 80022da:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80022de:	2b00      	cmp	r3, #0
 80022e0:	d00b      	beq.n	80022fa <HAL_DMA_IRQHandler+0xa2>
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80022e6:	2201      	movs	r2, #1
 80022e8:	409a      	lsls	r2, r3
 80022ea:	693b      	ldr	r3, [r7, #16]
 80022ec:	609a      	str	r2, [r3, #8]
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80022f2:	f043 0202 	orr.w	r2, r3, #2
 80022f6:	687b      	ldr	r3, [r7, #4]
 80022f8:	655a      	str	r2, [r3, #84]	; 0x54
 80022fa:	687b      	ldr	r3, [r7, #4]
 80022fc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80022fe:	2204      	movs	r2, #4
 8002300:	409a      	lsls	r2, r3
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	4013      	ands	r3, r2
 8002306:	2b00      	cmp	r3, #0
 8002308:	d012      	beq.n	8002330 <HAL_DMA_IRQHandler+0xd8>
 800230a:	687b      	ldr	r3, [r7, #4]
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	f003 0302 	and.w	r3, r3, #2
 8002314:	2b00      	cmp	r3, #0
 8002316:	d00b      	beq.n	8002330 <HAL_DMA_IRQHandler+0xd8>
 8002318:	687b      	ldr	r3, [r7, #4]
 800231a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800231c:	2204      	movs	r2, #4
 800231e:	409a      	lsls	r2, r3
 8002320:	693b      	ldr	r3, [r7, #16]
 8002322:	609a      	str	r2, [r3, #8]
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002328:	f043 0204 	orr.w	r2, r3, #4
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	655a      	str	r2, [r3, #84]	; 0x54
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002334:	2210      	movs	r2, #16
 8002336:	409a      	lsls	r2, r3
 8002338:	68fb      	ldr	r3, [r7, #12]
 800233a:	4013      	ands	r3, r2
 800233c:	2b00      	cmp	r3, #0
 800233e:	d043      	beq.n	80023c8 <HAL_DMA_IRQHandler+0x170>
 8002340:	687b      	ldr	r3, [r7, #4]
 8002342:	681b      	ldr	r3, [r3, #0]
 8002344:	681b      	ldr	r3, [r3, #0]
 8002346:	f003 0308 	and.w	r3, r3, #8
 800234a:	2b00      	cmp	r3, #0
 800234c:	d03c      	beq.n	80023c8 <HAL_DMA_IRQHandler+0x170>
 800234e:	687b      	ldr	r3, [r7, #4]
 8002350:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002352:	2210      	movs	r2, #16
 8002354:	409a      	lsls	r2, r3
 8002356:	693b      	ldr	r3, [r7, #16]
 8002358:	609a      	str	r2, [r3, #8]
 800235a:	687b      	ldr	r3, [r7, #4]
 800235c:	681b      	ldr	r3, [r3, #0]
 800235e:	681b      	ldr	r3, [r3, #0]
 8002360:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8002364:	2b00      	cmp	r3, #0
 8002366:	d018      	beq.n	800239a <HAL_DMA_IRQHandler+0x142>
 8002368:	687b      	ldr	r3, [r7, #4]
 800236a:	681b      	ldr	r3, [r3, #0]
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002372:	2b00      	cmp	r3, #0
 8002374:	d108      	bne.n	8002388 <HAL_DMA_IRQHandler+0x130>
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800237a:	2b00      	cmp	r3, #0
 800237c:	d024      	beq.n	80023c8 <HAL_DMA_IRQHandler+0x170>
 800237e:	687b      	ldr	r3, [r7, #4]
 8002380:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002382:	6878      	ldr	r0, [r7, #4]
 8002384:	4798      	blx	r3
 8002386:	e01f      	b.n	80023c8 <HAL_DMA_IRQHandler+0x170>
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800238c:	2b00      	cmp	r3, #0
 800238e:	d01b      	beq.n	80023c8 <HAL_DMA_IRQHandler+0x170>
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002394:	6878      	ldr	r0, [r7, #4]
 8002396:	4798      	blx	r3
 8002398:	e016      	b.n	80023c8 <HAL_DMA_IRQHandler+0x170>
 800239a:	687b      	ldr	r3, [r7, #4]
 800239c:	681b      	ldr	r3, [r3, #0]
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80023a4:	2b00      	cmp	r3, #0
 80023a6:	d107      	bne.n	80023b8 <HAL_DMA_IRQHandler+0x160>
 80023a8:	687b      	ldr	r3, [r7, #4]
 80023aa:	681b      	ldr	r3, [r3, #0]
 80023ac:	681a      	ldr	r2, [r3, #0]
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	681b      	ldr	r3, [r3, #0]
 80023b2:	f022 0208 	bic.w	r2, r2, #8
 80023b6:	601a      	str	r2, [r3, #0]
 80023b8:	687b      	ldr	r3, [r7, #4]
 80023ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023bc:	2b00      	cmp	r3, #0
 80023be:	d003      	beq.n	80023c8 <HAL_DMA_IRQHandler+0x170>
 80023c0:	687b      	ldr	r3, [r7, #4]
 80023c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023c4:	6878      	ldr	r0, [r7, #4]
 80023c6:	4798      	blx	r3
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80023cc:	2220      	movs	r2, #32
 80023ce:	409a      	lsls	r2, r3
 80023d0:	68fb      	ldr	r3, [r7, #12]
 80023d2:	4013      	ands	r3, r2
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	f000 808f 	beq.w	80024f8 <HAL_DMA_IRQHandler+0x2a0>
 80023da:	687b      	ldr	r3, [r7, #4]
 80023dc:	681b      	ldr	r3, [r3, #0]
 80023de:	681b      	ldr	r3, [r3, #0]
 80023e0:	f003 0310 	and.w	r3, r3, #16
 80023e4:	2b00      	cmp	r3, #0
 80023e6:	f000 8087 	beq.w	80024f8 <HAL_DMA_IRQHandler+0x2a0>
 80023ea:	687b      	ldr	r3, [r7, #4]
 80023ec:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80023ee:	2220      	movs	r2, #32
 80023f0:	409a      	lsls	r2, r3
 80023f2:	693b      	ldr	r3, [r7, #16]
 80023f4:	609a      	str	r2, [r3, #8]
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80023fc:	b2db      	uxtb	r3, r3
 80023fe:	2b05      	cmp	r3, #5
 8002400:	d136      	bne.n	8002470 <HAL_DMA_IRQHandler+0x218>
 8002402:	687b      	ldr	r3, [r7, #4]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	681a      	ldr	r2, [r3, #0]
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	f022 0216 	bic.w	r2, r2, #22
 8002410:	601a      	str	r2, [r3, #0]
 8002412:	687b      	ldr	r3, [r7, #4]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	695a      	ldr	r2, [r3, #20]
 8002418:	687b      	ldr	r3, [r7, #4]
 800241a:	681b      	ldr	r3, [r3, #0]
 800241c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002420:	615a      	str	r2, [r3, #20]
 8002422:	687b      	ldr	r3, [r7, #4]
 8002424:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002426:	2b00      	cmp	r3, #0
 8002428:	d103      	bne.n	8002432 <HAL_DMA_IRQHandler+0x1da>
 800242a:	687b      	ldr	r3, [r7, #4]
 800242c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800242e:	2b00      	cmp	r3, #0
 8002430:	d007      	beq.n	8002442 <HAL_DMA_IRQHandler+0x1ea>
 8002432:	687b      	ldr	r3, [r7, #4]
 8002434:	681b      	ldr	r3, [r3, #0]
 8002436:	681a      	ldr	r2, [r3, #0]
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	f022 0208 	bic.w	r2, r2, #8
 8002440:	601a      	str	r2, [r3, #0]
 8002442:	687b      	ldr	r3, [r7, #4]
 8002444:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8002446:	223f      	movs	r2, #63	; 0x3f
 8002448:	409a      	lsls	r2, r3
 800244a:	693b      	ldr	r3, [r7, #16]
 800244c:	609a      	str	r2, [r3, #8]
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	2201      	movs	r2, #1
 8002452:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002456:	687b      	ldr	r3, [r7, #4]
 8002458:	2200      	movs	r2, #0
 800245a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002462:	2b00      	cmp	r3, #0
 8002464:	d07e      	beq.n	8002564 <HAL_DMA_IRQHandler+0x30c>
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800246a:	6878      	ldr	r0, [r7, #4]
 800246c:	4798      	blx	r3
 800246e:	e079      	b.n	8002564 <HAL_DMA_IRQHandler+0x30c>
 8002470:	687b      	ldr	r3, [r7, #4]
 8002472:	681b      	ldr	r3, [r3, #0]
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800247a:	2b00      	cmp	r3, #0
 800247c:	d01d      	beq.n	80024ba <HAL_DMA_IRQHandler+0x262>
 800247e:	687b      	ldr	r3, [r7, #4]
 8002480:	681b      	ldr	r3, [r3, #0]
 8002482:	681b      	ldr	r3, [r3, #0]
 8002484:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8002488:	2b00      	cmp	r3, #0
 800248a:	d10d      	bne.n	80024a8 <HAL_DMA_IRQHandler+0x250>
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002490:	2b00      	cmp	r3, #0
 8002492:	d031      	beq.n	80024f8 <HAL_DMA_IRQHandler+0x2a0>
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002498:	6878      	ldr	r0, [r7, #4]
 800249a:	4798      	blx	r3
 800249c:	e02c      	b.n	80024f8 <HAL_DMA_IRQHandler+0x2a0>
 800249e:	bf00      	nop
 80024a0:	20000034 	.word	0x20000034
 80024a4:	1b4e81b5 	.word	0x1b4e81b5
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80024ac:	2b00      	cmp	r3, #0
 80024ae:	d023      	beq.n	80024f8 <HAL_DMA_IRQHandler+0x2a0>
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80024b4:	6878      	ldr	r0, [r7, #4]
 80024b6:	4798      	blx	r3
 80024b8:	e01e      	b.n	80024f8 <HAL_DMA_IRQHandler+0x2a0>
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	681b      	ldr	r3, [r3, #0]
 80024c0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80024c4:	2b00      	cmp	r3, #0
 80024c6:	d10f      	bne.n	80024e8 <HAL_DMA_IRQHandler+0x290>
 80024c8:	687b      	ldr	r3, [r7, #4]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	681a      	ldr	r2, [r3, #0]
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	681b      	ldr	r3, [r3, #0]
 80024d2:	f022 0210 	bic.w	r2, r2, #16
 80024d6:	601a      	str	r2, [r3, #0]
 80024d8:	687b      	ldr	r3, [r7, #4]
 80024da:	2201      	movs	r2, #1
 80024dc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	2200      	movs	r2, #0
 80024e4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80024ec:	2b00      	cmp	r3, #0
 80024ee:	d003      	beq.n	80024f8 <HAL_DMA_IRQHandler+0x2a0>
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80024f4:	6878      	ldr	r0, [r7, #4]
 80024f6:	4798      	blx	r3
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80024fc:	2b00      	cmp	r3, #0
 80024fe:	d032      	beq.n	8002566 <HAL_DMA_IRQHandler+0x30e>
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8002504:	f003 0301 	and.w	r3, r3, #1
 8002508:	2b00      	cmp	r3, #0
 800250a:	d022      	beq.n	8002552 <HAL_DMA_IRQHandler+0x2fa>
 800250c:	687b      	ldr	r3, [r7, #4]
 800250e:	2205      	movs	r2, #5
 8002510:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8002514:	687b      	ldr	r3, [r7, #4]
 8002516:	681b      	ldr	r3, [r3, #0]
 8002518:	681a      	ldr	r2, [r3, #0]
 800251a:	687b      	ldr	r3, [r7, #4]
 800251c:	681b      	ldr	r3, [r3, #0]
 800251e:	f022 0201 	bic.w	r2, r2, #1
 8002522:	601a      	str	r2, [r3, #0]
 8002524:	68bb      	ldr	r3, [r7, #8]
 8002526:	3301      	adds	r3, #1
 8002528:	60bb      	str	r3, [r7, #8]
 800252a:	697a      	ldr	r2, [r7, #20]
 800252c:	429a      	cmp	r2, r3
 800252e:	d307      	bcc.n	8002540 <HAL_DMA_IRQHandler+0x2e8>
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	681b      	ldr	r3, [r3, #0]
 8002536:	f003 0301 	and.w	r3, r3, #1
 800253a:	2b00      	cmp	r3, #0
 800253c:	d1f2      	bne.n	8002524 <HAL_DMA_IRQHandler+0x2cc>
 800253e:	e000      	b.n	8002542 <HAL_DMA_IRQHandler+0x2ea>
 8002540:	bf00      	nop
 8002542:	687b      	ldr	r3, [r7, #4]
 8002544:	2201      	movs	r2, #1
 8002546:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	2200      	movs	r2, #0
 800254e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8002556:	2b00      	cmp	r3, #0
 8002558:	d005      	beq.n	8002566 <HAL_DMA_IRQHandler+0x30e>
 800255a:	687b      	ldr	r3, [r7, #4]
 800255c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800255e:	6878      	ldr	r0, [r7, #4]
 8002560:	4798      	blx	r3
 8002562:	e000      	b.n	8002566 <HAL_DMA_IRQHandler+0x30e>
 8002564:	bf00      	nop
 8002566:	3718      	adds	r7, #24
 8002568:	46bd      	mov	sp, r7
 800256a:	bd80      	pop	{r7, pc}

0800256c <DMA_SetConfig>:
 800256c:	b480      	push	{r7}
 800256e:	b085      	sub	sp, #20
 8002570:	af00      	add	r7, sp, #0
 8002572:	60f8      	str	r0, [r7, #12]
 8002574:	60b9      	str	r1, [r7, #8]
 8002576:	607a      	str	r2, [r7, #4]
 8002578:	603b      	str	r3, [r7, #0]
 800257a:	68fb      	ldr	r3, [r7, #12]
 800257c:	681b      	ldr	r3, [r3, #0]
 800257e:	681a      	ldr	r2, [r3, #0]
 8002580:	68fb      	ldr	r3, [r7, #12]
 8002582:	681b      	ldr	r3, [r3, #0]
 8002584:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8002588:	601a      	str	r2, [r3, #0]
 800258a:	68fb      	ldr	r3, [r7, #12]
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	683a      	ldr	r2, [r7, #0]
 8002590:	605a      	str	r2, [r3, #4]
 8002592:	68fb      	ldr	r3, [r7, #12]
 8002594:	689b      	ldr	r3, [r3, #8]
 8002596:	2b40      	cmp	r3, #64	; 0x40
 8002598:	d108      	bne.n	80025ac <DMA_SetConfig+0x40>
 800259a:	68fb      	ldr	r3, [r7, #12]
 800259c:	681b      	ldr	r3, [r3, #0]
 800259e:	687a      	ldr	r2, [r7, #4]
 80025a0:	609a      	str	r2, [r3, #8]
 80025a2:	68fb      	ldr	r3, [r7, #12]
 80025a4:	681b      	ldr	r3, [r3, #0]
 80025a6:	68ba      	ldr	r2, [r7, #8]
 80025a8:	60da      	str	r2, [r3, #12]
 80025aa:	e007      	b.n	80025bc <DMA_SetConfig+0x50>
 80025ac:	68fb      	ldr	r3, [r7, #12]
 80025ae:	681b      	ldr	r3, [r3, #0]
 80025b0:	68ba      	ldr	r2, [r7, #8]
 80025b2:	609a      	str	r2, [r3, #8]
 80025b4:	68fb      	ldr	r3, [r7, #12]
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	687a      	ldr	r2, [r7, #4]
 80025ba:	60da      	str	r2, [r3, #12]
 80025bc:	bf00      	nop
 80025be:	3714      	adds	r7, #20
 80025c0:	46bd      	mov	sp, r7
 80025c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80025c6:	4770      	bx	lr

080025c8 <DMA_CalcBaseAndBitshift>:
 80025c8:	b480      	push	{r7}
 80025ca:	b085      	sub	sp, #20
 80025cc:	af00      	add	r7, sp, #0
 80025ce:	6078      	str	r0, [r7, #4]
 80025d0:	687b      	ldr	r3, [r7, #4]
 80025d2:	681b      	ldr	r3, [r3, #0]
 80025d4:	b2db      	uxtb	r3, r3
 80025d6:	3b10      	subs	r3, #16
 80025d8:	4a14      	ldr	r2, [pc, #80]	; (800262c <DMA_CalcBaseAndBitshift+0x64>)
 80025da:	fba2 2303 	umull	r2, r3, r2, r3
 80025de:	091b      	lsrs	r3, r3, #4
 80025e0:	60fb      	str	r3, [r7, #12]
 80025e2:	4a13      	ldr	r2, [pc, #76]	; (8002630 <DMA_CalcBaseAndBitshift+0x68>)
 80025e4:	68fb      	ldr	r3, [r7, #12]
 80025e6:	4413      	add	r3, r2
 80025e8:	781b      	ldrb	r3, [r3, #0]
 80025ea:	461a      	mov	r2, r3
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	65da      	str	r2, [r3, #92]	; 0x5c
 80025f0:	68fb      	ldr	r3, [r7, #12]
 80025f2:	2b03      	cmp	r3, #3
 80025f4:	d909      	bls.n	800260a <DMA_CalcBaseAndBitshift+0x42>
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 80025fe:	f023 0303 	bic.w	r3, r3, #3
 8002602:	1d1a      	adds	r2, r3, #4
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	659a      	str	r2, [r3, #88]	; 0x58
 8002608:	e007      	b.n	800261a <DMA_CalcBaseAndBitshift+0x52>
 800260a:	687b      	ldr	r3, [r7, #4]
 800260c:	681b      	ldr	r3, [r3, #0]
 800260e:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 8002612:	f023 0303 	bic.w	r3, r3, #3
 8002616:	687a      	ldr	r2, [r7, #4]
 8002618:	6593      	str	r3, [r2, #88]	; 0x58
 800261a:	687b      	ldr	r3, [r7, #4]
 800261c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800261e:	4618      	mov	r0, r3
 8002620:	3714      	adds	r7, #20
 8002622:	46bd      	mov	sp, r7
 8002624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002628:	4770      	bx	lr
 800262a:	bf00      	nop
 800262c:	aaaaaaab 	.word	0xaaaaaaab
 8002630:	08006e04 	.word	0x08006e04

08002634 <DMA_CheckFifoParam>:
 8002634:	b480      	push	{r7}
 8002636:	b085      	sub	sp, #20
 8002638:	af00      	add	r7, sp, #0
 800263a:	6078      	str	r0, [r7, #4]
 800263c:	2300      	movs	r3, #0
 800263e:	73fb      	strb	r3, [r7, #15]
 8002640:	687b      	ldr	r3, [r7, #4]
 8002642:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002644:	60bb      	str	r3, [r7, #8]
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	699b      	ldr	r3, [r3, #24]
 800264a:	2b00      	cmp	r3, #0
 800264c:	d11f      	bne.n	800268e <DMA_CheckFifoParam+0x5a>
 800264e:	68bb      	ldr	r3, [r7, #8]
 8002650:	2b03      	cmp	r3, #3
 8002652:	d856      	bhi.n	8002702 <DMA_CheckFifoParam+0xce>
 8002654:	a201      	add	r2, pc, #4	; (adr r2, 800265c <DMA_CheckFifoParam+0x28>)
 8002656:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800265a:	bf00      	nop
 800265c:	0800266d 	.word	0x0800266d
 8002660:	0800267f 	.word	0x0800267f
 8002664:	0800266d 	.word	0x0800266d
 8002668:	08002703 	.word	0x08002703
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002670:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8002674:	2b00      	cmp	r3, #0
 8002676:	d046      	beq.n	8002706 <DMA_CheckFifoParam+0xd2>
 8002678:	2301      	movs	r3, #1
 800267a:	73fb      	strb	r3, [r7, #15]
 800267c:	e043      	b.n	8002706 <DMA_CheckFifoParam+0xd2>
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002682:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 8002686:	d140      	bne.n	800270a <DMA_CheckFifoParam+0xd6>
 8002688:	2301      	movs	r3, #1
 800268a:	73fb      	strb	r3, [r7, #15]
 800268c:	e03d      	b.n	800270a <DMA_CheckFifoParam+0xd6>
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	699b      	ldr	r3, [r3, #24]
 8002692:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8002696:	d121      	bne.n	80026dc <DMA_CheckFifoParam+0xa8>
 8002698:	68bb      	ldr	r3, [r7, #8]
 800269a:	2b03      	cmp	r3, #3
 800269c:	d837      	bhi.n	800270e <DMA_CheckFifoParam+0xda>
 800269e:	a201      	add	r2, pc, #4	; (adr r2, 80026a4 <DMA_CheckFifoParam+0x70>)
 80026a0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80026a4:	080026b5 	.word	0x080026b5
 80026a8:	080026bb 	.word	0x080026bb
 80026ac:	080026b5 	.word	0x080026b5
 80026b0:	080026cd 	.word	0x080026cd
 80026b4:	2301      	movs	r3, #1
 80026b6:	73fb      	strb	r3, [r7, #15]
 80026b8:	e030      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 80026ba:	687b      	ldr	r3, [r7, #4]
 80026bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026be:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d025      	beq.n	8002712 <DMA_CheckFifoParam+0xde>
 80026c6:	2301      	movs	r3, #1
 80026c8:	73fb      	strb	r3, [r7, #15]
 80026ca:	e022      	b.n	8002712 <DMA_CheckFifoParam+0xde>
 80026cc:	687b      	ldr	r3, [r7, #4]
 80026ce:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026d0:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80026d4:	d11f      	bne.n	8002716 <DMA_CheckFifoParam+0xe2>
 80026d6:	2301      	movs	r3, #1
 80026d8:	73fb      	strb	r3, [r7, #15]
 80026da:	e01c      	b.n	8002716 <DMA_CheckFifoParam+0xe2>
 80026dc:	68bb      	ldr	r3, [r7, #8]
 80026de:	2b02      	cmp	r3, #2
 80026e0:	d903      	bls.n	80026ea <DMA_CheckFifoParam+0xb6>
 80026e2:	68bb      	ldr	r3, [r7, #8]
 80026e4:	2b03      	cmp	r3, #3
 80026e6:	d003      	beq.n	80026f0 <DMA_CheckFifoParam+0xbc>
 80026e8:	e018      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 80026ea:	2301      	movs	r3, #1
 80026ec:	73fb      	strb	r3, [r7, #15]
 80026ee:	e015      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80026f4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80026f8:	2b00      	cmp	r3, #0
 80026fa:	d00e      	beq.n	800271a <DMA_CheckFifoParam+0xe6>
 80026fc:	2301      	movs	r3, #1
 80026fe:	73fb      	strb	r3, [r7, #15]
 8002700:	e00b      	b.n	800271a <DMA_CheckFifoParam+0xe6>
 8002702:	bf00      	nop
 8002704:	e00a      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 8002706:	bf00      	nop
 8002708:	e008      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 800270a:	bf00      	nop
 800270c:	e006      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 800270e:	bf00      	nop
 8002710:	e004      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 8002712:	bf00      	nop
 8002714:	e002      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 8002716:	bf00      	nop
 8002718:	e000      	b.n	800271c <DMA_CheckFifoParam+0xe8>
 800271a:	bf00      	nop
 800271c:	7bfb      	ldrb	r3, [r7, #15]
 800271e:	4618      	mov	r0, r3
 8002720:	3714      	adds	r7, #20
 8002722:	46bd      	mov	sp, r7
 8002724:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002728:	4770      	bx	lr
 800272a:	bf00      	nop

0800272c <HAL_ETH_Init>:
 800272c:	b580      	push	{r7, lr}
 800272e:	b084      	sub	sp, #16
 8002730:	af00      	add	r7, sp, #0
 8002732:	6078      	str	r0, [r7, #4]
 8002734:	687b      	ldr	r3, [r7, #4]
 8002736:	2b00      	cmp	r3, #0
 8002738:	d101      	bne.n	800273e <HAL_ETH_Init+0x12>
 800273a:	2301      	movs	r3, #1
 800273c:	e06c      	b.n	8002818 <HAL_ETH_Init+0xec>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002744:	2b00      	cmp	r3, #0
 8002746:	d106      	bne.n	8002756 <HAL_ETH_Init+0x2a>
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	2223      	movs	r2, #35	; 0x23
 800274c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8002750:	6878      	ldr	r0, [r7, #4]
 8002752:	f7fe fe27 	bl	80013a4 <HAL_ETH_MspInit>
 8002756:	2300      	movs	r3, #0
 8002758:	60bb      	str	r3, [r7, #8]
 800275a:	4b31      	ldr	r3, [pc, #196]	; (8002820 <HAL_ETH_Init+0xf4>)
 800275c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800275e:	4a30      	ldr	r2, [pc, #192]	; (8002820 <HAL_ETH_Init+0xf4>)
 8002760:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002764:	6453      	str	r3, [r2, #68]	; 0x44
 8002766:	4b2e      	ldr	r3, [pc, #184]	; (8002820 <HAL_ETH_Init+0xf4>)
 8002768:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800276a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800276e:	60bb      	str	r3, [r7, #8]
 8002770:	68bb      	ldr	r3, [r7, #8]
 8002772:	4b2c      	ldr	r3, [pc, #176]	; (8002824 <HAL_ETH_Init+0xf8>)
 8002774:	685b      	ldr	r3, [r3, #4]
 8002776:	4a2b      	ldr	r2, [pc, #172]	; (8002824 <HAL_ETH_Init+0xf8>)
 8002778:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800277c:	6053      	str	r3, [r2, #4]
 800277e:	4b29      	ldr	r3, [pc, #164]	; (8002824 <HAL_ETH_Init+0xf8>)
 8002780:	685a      	ldr	r2, [r3, #4]
 8002782:	687b      	ldr	r3, [r7, #4]
 8002784:	689b      	ldr	r3, [r3, #8]
 8002786:	4927      	ldr	r1, [pc, #156]	; (8002824 <HAL_ETH_Init+0xf8>)
 8002788:	4313      	orrs	r3, r2
 800278a:	604b      	str	r3, [r1, #4]
 800278c:	4b25      	ldr	r3, [pc, #148]	; (8002824 <HAL_ETH_Init+0xf8>)
 800278e:	685b      	ldr	r3, [r3, #4]
 8002790:	687b      	ldr	r3, [r7, #4]
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002798:	681b      	ldr	r3, [r3, #0]
 800279a:	687a      	ldr	r2, [r7, #4]
 800279c:	6812      	ldr	r2, [r2, #0]
 800279e:	f043 0301 	orr.w	r3, r3, #1
 80027a2:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 80027a6:	6013      	str	r3, [r2, #0]
 80027a8:	f7ff fa7c 	bl	8001ca4 <HAL_GetTick>
 80027ac:	60f8      	str	r0, [r7, #12]
 80027ae:	e011      	b.n	80027d4 <HAL_ETH_Init+0xa8>
 80027b0:	f7ff fa78 	bl	8001ca4 <HAL_GetTick>
 80027b4:	4602      	mov	r2, r0
 80027b6:	68fb      	ldr	r3, [r7, #12]
 80027b8:	1ad3      	subs	r3, r2, r3
 80027ba:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80027be:	d909      	bls.n	80027d4 <HAL_ETH_Init+0xa8>
 80027c0:	687b      	ldr	r3, [r7, #4]
 80027c2:	2204      	movs	r2, #4
 80027c4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 80027c8:	687b      	ldr	r3, [r7, #4]
 80027ca:	22e0      	movs	r2, #224	; 0xe0
 80027cc:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 80027d0:	2301      	movs	r3, #1
 80027d2:	e021      	b.n	8002818 <HAL_ETH_Init+0xec>
 80027d4:	687b      	ldr	r3, [r7, #4]
 80027d6:	681b      	ldr	r3, [r3, #0]
 80027d8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80027dc:	681b      	ldr	r3, [r3, #0]
 80027de:	f003 0301 	and.w	r3, r3, #1
 80027e2:	2b00      	cmp	r3, #0
 80027e4:	d1e4      	bne.n	80027b0 <HAL_ETH_Init+0x84>
 80027e6:	6878      	ldr	r0, [r7, #4]
 80027e8:	f000 f958 	bl	8002a9c <ETH_MACDMAConfig>
 80027ec:	6878      	ldr	r0, [r7, #4]
 80027ee:	f000 f9ff 	bl	8002bf0 <ETH_DMATxDescListInit>
 80027f2:	6878      	ldr	r0, [r7, #4]
 80027f4:	f000 fa55 	bl	8002ca2 <ETH_DMARxDescListInit>
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	685b      	ldr	r3, [r3, #4]
 80027fc:	461a      	mov	r2, r3
 80027fe:	2100      	movs	r1, #0
 8002800:	6878      	ldr	r0, [r7, #4]
 8002802:	f000 f9bd 	bl	8002b80 <ETH_MACAddressConfig>
 8002806:	687b      	ldr	r3, [r7, #4]
 8002808:	2200      	movs	r2, #0
 800280a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800280e:	687b      	ldr	r3, [r7, #4]
 8002810:	2210      	movs	r2, #16
 8002812:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 8002816:	2300      	movs	r3, #0
 8002818:	4618      	mov	r0, r3
 800281a:	3710      	adds	r7, #16
 800281c:	46bd      	mov	sp, r7
 800281e:	bd80      	pop	{r7, pc}
 8002820:	40023800 	.word	0x40023800
 8002824:	40013800 	.word	0x40013800

08002828 <ETH_SetMACConfig>:
 8002828:	b580      	push	{r7, lr}
 800282a:	b084      	sub	sp, #16
 800282c:	af00      	add	r7, sp, #0
 800282e:	6078      	str	r0, [r7, #4]
 8002830:	6039      	str	r1, [r7, #0]
 8002832:	687b      	ldr	r3, [r7, #4]
 8002834:	681b      	ldr	r3, [r3, #0]
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	60fb      	str	r3, [r7, #12]
 800283a:	68fa      	ldr	r2, [r7, #12]
 800283c:	4b51      	ldr	r3, [pc, #324]	; (8002984 <ETH_SetMACConfig+0x15c>)
 800283e:	4013      	ands	r3, r2
 8002840:	60fb      	str	r3, [r7, #12]
 8002842:	683b      	ldr	r3, [r7, #0]
 8002844:	7c1b      	ldrb	r3, [r3, #16]
 8002846:	2b00      	cmp	r3, #0
 8002848:	d102      	bne.n	8002850 <ETH_SetMACConfig+0x28>
 800284a:	f44f 0200 	mov.w	r2, #8388608	; 0x800000
 800284e:	e000      	b.n	8002852 <ETH_SetMACConfig+0x2a>
 8002850:	2200      	movs	r2, #0
 8002852:	683b      	ldr	r3, [r7, #0]
 8002854:	7c5b      	ldrb	r3, [r3, #17]
 8002856:	2b00      	cmp	r3, #0
 8002858:	d102      	bne.n	8002860 <ETH_SetMACConfig+0x38>
 800285a:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800285e:	e000      	b.n	8002862 <ETH_SetMACConfig+0x3a>
 8002860:	2300      	movs	r3, #0
 8002862:	431a      	orrs	r2, r3
 8002864:	683b      	ldr	r3, [r7, #0]
 8002866:	689b      	ldr	r3, [r3, #8]
 8002868:	431a      	orrs	r2, r3
 800286a:	683b      	ldr	r3, [r7, #0]
 800286c:	7fdb      	ldrb	r3, [r3, #31]
 800286e:	041b      	lsls	r3, r3, #16
 8002870:	431a      	orrs	r2, r3
 8002872:	683b      	ldr	r3, [r7, #0]
 8002874:	695b      	ldr	r3, [r3, #20]
 8002876:	4313      	orrs	r3, r2
 8002878:	683a      	ldr	r2, [r7, #0]
 800287a:	7f92      	ldrb	r2, [r2, #30]
 800287c:	2a00      	cmp	r2, #0
 800287e:	d102      	bne.n	8002886 <ETH_SetMACConfig+0x5e>
 8002880:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002884:	e000      	b.n	8002888 <ETH_SetMACConfig+0x60>
 8002886:	2200      	movs	r2, #0
 8002888:	431a      	orrs	r2, r3
 800288a:	683b      	ldr	r3, [r7, #0]
 800288c:	7f1b      	ldrb	r3, [r3, #28]
 800288e:	031b      	lsls	r3, r3, #12
 8002890:	431a      	orrs	r2, r3
 8002892:	683b      	ldr	r3, [r7, #0]
 8002894:	699b      	ldr	r3, [r3, #24]
 8002896:	431a      	orrs	r2, r3
 8002898:	683b      	ldr	r3, [r7, #0]
 800289a:	791b      	ldrb	r3, [r3, #4]
 800289c:	029b      	lsls	r3, r3, #10
 800289e:	4313      	orrs	r3, r2
 80028a0:	683a      	ldr	r2, [r7, #0]
 80028a2:	f892 2020 	ldrb.w	r2, [r2, #32]
 80028a6:	2a00      	cmp	r2, #0
 80028a8:	d102      	bne.n	80028b0 <ETH_SetMACConfig+0x88>
 80028aa:	f44f 7200 	mov.w	r2, #512	; 0x200
 80028ae:	e000      	b.n	80028b2 <ETH_SetMACConfig+0x8a>
 80028b0:	2200      	movs	r2, #0
 80028b2:	431a      	orrs	r2, r3
 80028b4:	683b      	ldr	r3, [r7, #0]
 80028b6:	7bdb      	ldrb	r3, [r3, #15]
 80028b8:	01db      	lsls	r3, r3, #7
 80028ba:	431a      	orrs	r2, r3
 80028bc:	683b      	ldr	r3, [r7, #0]
 80028be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80028c0:	431a      	orrs	r2, r3
 80028c2:	683b      	ldr	r3, [r7, #0]
 80028c4:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 80028c8:	011b      	lsls	r3, r3, #4
 80028ca:	4313      	orrs	r3, r2
 80028cc:	68fa      	ldr	r2, [r7, #12]
 80028ce:	4313      	orrs	r3, r2
 80028d0:	60fb      	str	r3, [r7, #12]
 80028d2:	687b      	ldr	r3, [r7, #4]
 80028d4:	681b      	ldr	r3, [r3, #0]
 80028d6:	68fa      	ldr	r2, [r7, #12]
 80028d8:	601a      	str	r2, [r3, #0]
 80028da:	687b      	ldr	r3, [r7, #4]
 80028dc:	681b      	ldr	r3, [r3, #0]
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	60fb      	str	r3, [r7, #12]
 80028e2:	2001      	movs	r0, #1
 80028e4:	f7ff f9ea 	bl	8001cbc <HAL_Delay>
 80028e8:	687b      	ldr	r3, [r7, #4]
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	68fa      	ldr	r2, [r7, #12]
 80028ee:	601a      	str	r2, [r3, #0]
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	699b      	ldr	r3, [r3, #24]
 80028f6:	60fb      	str	r3, [r7, #12]
 80028f8:	68fa      	ldr	r2, [r7, #12]
 80028fa:	f64f 7341 	movw	r3, #65345	; 0xff41
 80028fe:	4013      	ands	r3, r2
 8002900:	60fb      	str	r3, [r7, #12]
 8002902:	683b      	ldr	r3, [r7, #0]
 8002904:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8002906:	041b      	lsls	r3, r3, #16
 8002908:	683a      	ldr	r2, [r7, #0]
 800290a:	f892 204c 	ldrb.w	r2, [r2, #76]	; 0x4c
 800290e:	2a00      	cmp	r2, #0
 8002910:	d101      	bne.n	8002916 <ETH_SetMACConfig+0xee>
 8002912:	2280      	movs	r2, #128	; 0x80
 8002914:	e000      	b.n	8002918 <ETH_SetMACConfig+0xf0>
 8002916:	2200      	movs	r2, #0
 8002918:	431a      	orrs	r2, r3
 800291a:	683b      	ldr	r3, [r7, #0]
 800291c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800291e:	4313      	orrs	r3, r2
 8002920:	683a      	ldr	r2, [r7, #0]
 8002922:	f892 2055 	ldrb.w	r2, [r2, #85]	; 0x55
 8002926:	2a01      	cmp	r2, #1
 8002928:	d101      	bne.n	800292e <ETH_SetMACConfig+0x106>
 800292a:	2208      	movs	r2, #8
 800292c:	e000      	b.n	8002930 <ETH_SetMACConfig+0x108>
 800292e:	2200      	movs	r2, #0
 8002930:	4313      	orrs	r3, r2
 8002932:	683a      	ldr	r2, [r7, #0]
 8002934:	f892 2056 	ldrb.w	r2, [r2, #86]	; 0x56
 8002938:	2a01      	cmp	r2, #1
 800293a:	d101      	bne.n	8002940 <ETH_SetMACConfig+0x118>
 800293c:	2204      	movs	r2, #4
 800293e:	e000      	b.n	8002942 <ETH_SetMACConfig+0x11a>
 8002940:	2200      	movs	r2, #0
 8002942:	4313      	orrs	r3, r2
 8002944:	683a      	ldr	r2, [r7, #0]
 8002946:	f892 2054 	ldrb.w	r2, [r2, #84]	; 0x54
 800294a:	2a01      	cmp	r2, #1
 800294c:	d101      	bne.n	8002952 <ETH_SetMACConfig+0x12a>
 800294e:	2202      	movs	r2, #2
 8002950:	e000      	b.n	8002954 <ETH_SetMACConfig+0x12c>
 8002952:	2200      	movs	r2, #0
 8002954:	4313      	orrs	r3, r2
 8002956:	68fa      	ldr	r2, [r7, #12]
 8002958:	4313      	orrs	r3, r2
 800295a:	60fb      	str	r3, [r7, #12]
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	68fa      	ldr	r2, [r7, #12]
 8002962:	619a      	str	r2, [r3, #24]
 8002964:	687b      	ldr	r3, [r7, #4]
 8002966:	681b      	ldr	r3, [r3, #0]
 8002968:	699b      	ldr	r3, [r3, #24]
 800296a:	60fb      	str	r3, [r7, #12]
 800296c:	2001      	movs	r0, #1
 800296e:	f7ff f9a5 	bl	8001cbc <HAL_Delay>
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	681b      	ldr	r3, [r3, #0]
 8002976:	68fa      	ldr	r2, [r7, #12]
 8002978:	619a      	str	r2, [r3, #24]
 800297a:	bf00      	nop
 800297c:	3710      	adds	r7, #16
 800297e:	46bd      	mov	sp, r7
 8002980:	bd80      	pop	{r7, pc}
 8002982:	bf00      	nop
 8002984:	ff20810f 	.word	0xff20810f

08002988 <ETH_SetDMAConfig>:
 8002988:	b580      	push	{r7, lr}
 800298a:	b084      	sub	sp, #16
 800298c:	af00      	add	r7, sp, #0
 800298e:	6078      	str	r0, [r7, #4]
 8002990:	6039      	str	r1, [r7, #0]
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	681b      	ldr	r3, [r3, #0]
 8002996:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 800299a:	699b      	ldr	r3, [r3, #24]
 800299c:	60fb      	str	r3, [r7, #12]
 800299e:	68fa      	ldr	r2, [r7, #12]
 80029a0:	4b3d      	ldr	r3, [pc, #244]	; (8002a98 <ETH_SetDMAConfig+0x110>)
 80029a2:	4013      	ands	r3, r2
 80029a4:	60fb      	str	r3, [r7, #12]
 80029a6:	683b      	ldr	r3, [r7, #0]
 80029a8:	7b1b      	ldrb	r3, [r3, #12]
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	d102      	bne.n	80029b4 <ETH_SetDMAConfig+0x2c>
 80029ae:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80029b2:	e000      	b.n	80029b6 <ETH_SetDMAConfig+0x2e>
 80029b4:	2200      	movs	r2, #0
 80029b6:	683b      	ldr	r3, [r7, #0]
 80029b8:	7b5b      	ldrb	r3, [r3, #13]
 80029ba:	065b      	lsls	r3, r3, #25
 80029bc:	4313      	orrs	r3, r2
 80029be:	683a      	ldr	r2, [r7, #0]
 80029c0:	7f52      	ldrb	r2, [r2, #29]
 80029c2:	2a00      	cmp	r2, #0
 80029c4:	d102      	bne.n	80029cc <ETH_SetDMAConfig+0x44>
 80029c6:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 80029ca:	e000      	b.n	80029ce <ETH_SetDMAConfig+0x46>
 80029cc:	2200      	movs	r2, #0
 80029ce:	431a      	orrs	r2, r3
 80029d0:	683b      	ldr	r3, [r7, #0]
 80029d2:	7b9b      	ldrb	r3, [r3, #14]
 80029d4:	055b      	lsls	r3, r3, #21
 80029d6:	431a      	orrs	r2, r3
 80029d8:	683b      	ldr	r3, [r7, #0]
 80029da:	695b      	ldr	r3, [r3, #20]
 80029dc:	431a      	orrs	r2, r3
 80029de:	683b      	ldr	r3, [r7, #0]
 80029e0:	7f1b      	ldrb	r3, [r3, #28]
 80029e2:	01db      	lsls	r3, r3, #7
 80029e4:	431a      	orrs	r2, r3
 80029e6:	683b      	ldr	r3, [r7, #0]
 80029e8:	7f9b      	ldrb	r3, [r3, #30]
 80029ea:	019b      	lsls	r3, r3, #6
 80029ec:	431a      	orrs	r2, r3
 80029ee:	683b      	ldr	r3, [r7, #0]
 80029f0:	6a1b      	ldr	r3, [r3, #32]
 80029f2:	431a      	orrs	r2, r3
 80029f4:	683b      	ldr	r3, [r7, #0]
 80029f6:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
 80029fa:	009b      	lsls	r3, r3, #2
 80029fc:	4313      	orrs	r3, r2
 80029fe:	68fa      	ldr	r2, [r7, #12]
 8002a00:	4313      	orrs	r3, r2
 8002a02:	60fb      	str	r3, [r7, #12]
 8002a04:	687b      	ldr	r3, [r7, #4]
 8002a06:	681b      	ldr	r3, [r3, #0]
 8002a08:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002a0c:	461a      	mov	r2, r3
 8002a0e:	68fb      	ldr	r3, [r7, #12]
 8002a10:	6193      	str	r3, [r2, #24]
 8002a12:	687b      	ldr	r3, [r7, #4]
 8002a14:	681b      	ldr	r3, [r3, #0]
 8002a16:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002a1a:	699b      	ldr	r3, [r3, #24]
 8002a1c:	60fb      	str	r3, [r7, #12]
 8002a1e:	2001      	movs	r0, #1
 8002a20:	f7ff f94c 	bl	8001cbc <HAL_Delay>
 8002a24:	687b      	ldr	r3, [r7, #4]
 8002a26:	681b      	ldr	r3, [r3, #0]
 8002a28:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002a2c:	461a      	mov	r2, r3
 8002a2e:	68fb      	ldr	r3, [r7, #12]
 8002a30:	6193      	str	r3, [r2, #24]
 8002a32:	683b      	ldr	r3, [r7, #0]
 8002a34:	791b      	ldrb	r3, [r3, #4]
 8002a36:	065a      	lsls	r2, r3, #25
 8002a38:	683b      	ldr	r3, [r7, #0]
 8002a3a:	689b      	ldr	r3, [r3, #8]
 8002a3c:	431a      	orrs	r2, r3
 8002a3e:	683b      	ldr	r3, [r7, #0]
 8002a40:	699b      	ldr	r3, [r3, #24]
 8002a42:	431a      	orrs	r2, r3
 8002a44:	683b      	ldr	r3, [r7, #0]
 8002a46:	691b      	ldr	r3, [r3, #16]
 8002a48:	431a      	orrs	r2, r3
 8002a4a:	683b      	ldr	r3, [r7, #0]
 8002a4c:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
 8002a50:	01db      	lsls	r3, r3, #7
 8002a52:	431a      	orrs	r2, r3
 8002a54:	683b      	ldr	r3, [r7, #0]
 8002a56:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002a58:	009b      	lsls	r3, r3, #2
 8002a5a:	431a      	orrs	r2, r3
 8002a5c:	683b      	ldr	r3, [r7, #0]
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	4313      	orrs	r3, r2
 8002a62:	687a      	ldr	r2, [r7, #4]
 8002a64:	6812      	ldr	r2, [r2, #0]
 8002a66:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002a6a:	f502 5280 	add.w	r2, r2, #4096	; 0x1000
 8002a6e:	6013      	str	r3, [r2, #0]
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	681b      	ldr	r3, [r3, #0]
 8002a74:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002a78:	681b      	ldr	r3, [r3, #0]
 8002a7a:	60fb      	str	r3, [r7, #12]
 8002a7c:	2001      	movs	r0, #1
 8002a7e:	f7ff f91d 	bl	8001cbc <HAL_Delay>
 8002a82:	687b      	ldr	r3, [r7, #4]
 8002a84:	681b      	ldr	r3, [r3, #0]
 8002a86:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002a8a:	461a      	mov	r2, r3
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	6013      	str	r3, [r2, #0]
 8002a90:	bf00      	nop
 8002a92:	3710      	adds	r7, #16
 8002a94:	46bd      	mov	sp, r7
 8002a96:	bd80      	pop	{r7, pc}
 8002a98:	f8de3f23 	.word	0xf8de3f23

08002a9c <ETH_MACDMAConfig>:
 8002a9c:	b580      	push	{r7, lr}
 8002a9e:	b0a6      	sub	sp, #152	; 0x98
 8002aa0:	af00      	add	r7, sp, #0
 8002aa2:	6078      	str	r0, [r7, #4]
 8002aa4:	2301      	movs	r3, #1
 8002aa6:	f887 3044 	strb.w	r3, [r7, #68]	; 0x44
 8002aaa:	2301      	movs	r3, #1
 8002aac:	f887 3045 	strb.w	r3, [r7, #69]	; 0x45
 8002ab0:	2300      	movs	r3, #0
 8002ab2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002ab4:	2300      	movs	r3, #0
 8002ab6:	f887 3053 	strb.w	r3, [r7, #83]	; 0x53
 8002aba:	2301      	movs	r3, #1
 8002abc:	f887 3052 	strb.w	r3, [r7, #82]	; 0x52
 8002ac0:	2300      	movs	r3, #0
 8002ac2:	f887 3050 	strb.w	r3, [r7, #80]	; 0x50
 8002ac6:	2301      	movs	r3, #1
 8002ac8:	f887 3038 	strb.w	r3, [r7, #56]	; 0x38
 8002acc:	2300      	movs	r3, #0
 8002ace:	f887 3054 	strb.w	r3, [r7, #84]	; 0x54
 8002ad2:	2300      	movs	r3, #0
 8002ad4:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 8002ad8:	2300      	movs	r3, #0
 8002ada:	65bb      	str	r3, [r7, #88]	; 0x58
 8002adc:	2300      	movs	r3, #0
 8002ade:	f887 305c 	strb.w	r3, [r7, #92]	; 0x5c
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	67fb      	str	r3, [r7, #124]	; 0x7c
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	f887 3080 	strb.w	r3, [r7, #128]	; 0x80
 8002aec:	2300      	movs	r3, #0
 8002aee:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8002af2:	2300      	movs	r3, #0
 8002af4:	f887 308a 	strb.w	r3, [r7, #138]	; 0x8a
 8002af8:	2300      	movs	r3, #0
 8002afa:	f887 3088 	strb.w	r3, [r7, #136]	; 0x88
 8002afe:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8002b02:	64bb      	str	r3, [r7, #72]	; 0x48
 8002b04:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8002b08:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002b0a:	2300      	movs	r3, #0
 8002b0c:	f887 3089 	strb.w	r3, [r7, #137]	; 0x89
 8002b10:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8002b14:	4619      	mov	r1, r3
 8002b16:	6878      	ldr	r0, [r7, #4]
 8002b18:	f7ff fe86 	bl	8002828 <ETH_SetMACConfig>
 8002b1c:	2301      	movs	r3, #1
 8002b1e:	753b      	strb	r3, [r7, #20]
 8002b20:	2301      	movs	r3, #1
 8002b22:	757b      	strb	r3, [r7, #21]
 8002b24:	2301      	movs	r3, #1
 8002b26:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8002b2a:	2301      	movs	r3, #1
 8002b2c:	75bb      	strb	r3, [r7, #22]
 8002b2e:	2300      	movs	r3, #0
 8002b30:	61fb      	str	r3, [r7, #28]
 8002b32:	2300      	movs	r3, #0
 8002b34:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8002b38:	2300      	movs	r3, #0
 8002b3a:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 8002b3e:	2300      	movs	r3, #0
 8002b40:	62bb      	str	r3, [r7, #40]	; 0x28
 8002b42:	2301      	movs	r3, #1
 8002b44:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
 8002b48:	2301      	movs	r3, #1
 8002b4a:	733b      	strb	r3, [r7, #12]
 8002b4c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8002b50:	613b      	str	r3, [r7, #16]
 8002b52:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8002b56:	623b      	str	r3, [r7, #32]
 8002b58:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002b5c:	61bb      	str	r3, [r7, #24]
 8002b5e:	2301      	movs	r3, #1
 8002b60:	f887 302d 	strb.w	r3, [r7, #45]	; 0x2d
 8002b64:	2300      	movs	r3, #0
 8002b66:	633b      	str	r3, [r7, #48]	; 0x30
 8002b68:	2300      	movs	r3, #0
 8002b6a:	60bb      	str	r3, [r7, #8]
 8002b6c:	f107 0308 	add.w	r3, r7, #8
 8002b70:	4619      	mov	r1, r3
 8002b72:	6878      	ldr	r0, [r7, #4]
 8002b74:	f7ff ff08 	bl	8002988 <ETH_SetDMAConfig>
 8002b78:	bf00      	nop
 8002b7a:	3798      	adds	r7, #152	; 0x98
 8002b7c:	46bd      	mov	sp, r7
 8002b7e:	bd80      	pop	{r7, pc}

08002b80 <ETH_MACAddressConfig>:
 8002b80:	b480      	push	{r7}
 8002b82:	b087      	sub	sp, #28
 8002b84:	af00      	add	r7, sp, #0
 8002b86:	60f8      	str	r0, [r7, #12]
 8002b88:	60b9      	str	r1, [r7, #8]
 8002b8a:	607a      	str	r2, [r7, #4]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	3305      	adds	r3, #5
 8002b90:	781b      	ldrb	r3, [r3, #0]
 8002b92:	021b      	lsls	r3, r3, #8
 8002b94:	687a      	ldr	r2, [r7, #4]
 8002b96:	3204      	adds	r2, #4
 8002b98:	7812      	ldrb	r2, [r2, #0]
 8002b9a:	4313      	orrs	r3, r2
 8002b9c:	617b      	str	r3, [r7, #20]
 8002b9e:	68ba      	ldr	r2, [r7, #8]
 8002ba0:	4b11      	ldr	r3, [pc, #68]	; (8002be8 <ETH_MACAddressConfig+0x68>)
 8002ba2:	4413      	add	r3, r2
 8002ba4:	461a      	mov	r2, r3
 8002ba6:	697b      	ldr	r3, [r7, #20]
 8002ba8:	6013      	str	r3, [r2, #0]
 8002baa:	687b      	ldr	r3, [r7, #4]
 8002bac:	3303      	adds	r3, #3
 8002bae:	781b      	ldrb	r3, [r3, #0]
 8002bb0:	061a      	lsls	r2, r3, #24
 8002bb2:	687b      	ldr	r3, [r7, #4]
 8002bb4:	3302      	adds	r3, #2
 8002bb6:	781b      	ldrb	r3, [r3, #0]
 8002bb8:	041b      	lsls	r3, r3, #16
 8002bba:	431a      	orrs	r2, r3
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	3301      	adds	r3, #1
 8002bc0:	781b      	ldrb	r3, [r3, #0]
 8002bc2:	021b      	lsls	r3, r3, #8
 8002bc4:	4313      	orrs	r3, r2
 8002bc6:	687a      	ldr	r2, [r7, #4]
 8002bc8:	7812      	ldrb	r2, [r2, #0]
 8002bca:	4313      	orrs	r3, r2
 8002bcc:	617b      	str	r3, [r7, #20]
 8002bce:	68ba      	ldr	r2, [r7, #8]
 8002bd0:	4b06      	ldr	r3, [pc, #24]	; (8002bec <ETH_MACAddressConfig+0x6c>)
 8002bd2:	4413      	add	r3, r2
 8002bd4:	461a      	mov	r2, r3
 8002bd6:	697b      	ldr	r3, [r7, #20]
 8002bd8:	6013      	str	r3, [r2, #0]
 8002bda:	bf00      	nop
 8002bdc:	371c      	adds	r7, #28
 8002bde:	46bd      	mov	sp, r7
 8002be0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002be4:	4770      	bx	lr
 8002be6:	bf00      	nop
 8002be8:	40028040 	.word	0x40028040
 8002bec:	40028044 	.word	0x40028044

08002bf0 <ETH_DMATxDescListInit>:
 8002bf0:	b480      	push	{r7}
 8002bf2:	b085      	sub	sp, #20
 8002bf4:	af00      	add	r7, sp, #0
 8002bf6:	6078      	str	r0, [r7, #4]
 8002bf8:	2300      	movs	r3, #0
 8002bfa:	60fb      	str	r3, [r7, #12]
 8002bfc:	e03e      	b.n	8002c7c <ETH_DMATxDescListInit+0x8c>
 8002bfe:	687b      	ldr	r3, [r7, #4]
 8002c00:	68d9      	ldr	r1, [r3, #12]
 8002c02:	68fa      	ldr	r2, [r7, #12]
 8002c04:	4613      	mov	r3, r2
 8002c06:	009b      	lsls	r3, r3, #2
 8002c08:	4413      	add	r3, r2
 8002c0a:	00db      	lsls	r3, r3, #3
 8002c0c:	440b      	add	r3, r1
 8002c0e:	60bb      	str	r3, [r7, #8]
 8002c10:	68bb      	ldr	r3, [r7, #8]
 8002c12:	2200      	movs	r2, #0
 8002c14:	601a      	str	r2, [r3, #0]
 8002c16:	68bb      	ldr	r3, [r7, #8]
 8002c18:	2200      	movs	r2, #0
 8002c1a:	605a      	str	r2, [r3, #4]
 8002c1c:	68bb      	ldr	r3, [r7, #8]
 8002c1e:	2200      	movs	r2, #0
 8002c20:	609a      	str	r2, [r3, #8]
 8002c22:	68bb      	ldr	r3, [r7, #8]
 8002c24:	2200      	movs	r2, #0
 8002c26:	60da      	str	r2, [r3, #12]
 8002c28:	68b9      	ldr	r1, [r7, #8]
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	68fa      	ldr	r2, [r7, #12]
 8002c2e:	3206      	adds	r2, #6
 8002c30:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002c34:	68bb      	ldr	r3, [r7, #8]
 8002c36:	681b      	ldr	r3, [r3, #0]
 8002c38:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 8002c3c:	68bb      	ldr	r3, [r7, #8]
 8002c3e:	601a      	str	r2, [r3, #0]
 8002c40:	68fb      	ldr	r3, [r7, #12]
 8002c42:	2b02      	cmp	r3, #2
 8002c44:	d80c      	bhi.n	8002c60 <ETH_DMATxDescListInit+0x70>
 8002c46:	687b      	ldr	r3, [r7, #4]
 8002c48:	68d9      	ldr	r1, [r3, #12]
 8002c4a:	68fb      	ldr	r3, [r7, #12]
 8002c4c:	1c5a      	adds	r2, r3, #1
 8002c4e:	4613      	mov	r3, r2
 8002c50:	009b      	lsls	r3, r3, #2
 8002c52:	4413      	add	r3, r2
 8002c54:	00db      	lsls	r3, r3, #3
 8002c56:	440b      	add	r3, r1
 8002c58:	461a      	mov	r2, r3
 8002c5a:	68bb      	ldr	r3, [r7, #8]
 8002c5c:	60da      	str	r2, [r3, #12]
 8002c5e:	e004      	b.n	8002c6a <ETH_DMATxDescListInit+0x7a>
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	68db      	ldr	r3, [r3, #12]
 8002c64:	461a      	mov	r2, r3
 8002c66:	68bb      	ldr	r3, [r7, #8]
 8002c68:	60da      	str	r2, [r3, #12]
 8002c6a:	68bb      	ldr	r3, [r7, #8]
 8002c6c:	681b      	ldr	r3, [r3, #0]
 8002c6e:	f443 0240 	orr.w	r2, r3, #12582912	; 0xc00000
 8002c72:	68bb      	ldr	r3, [r7, #8]
 8002c74:	601a      	str	r2, [r3, #0]
 8002c76:	68fb      	ldr	r3, [r7, #12]
 8002c78:	3301      	adds	r3, #1
 8002c7a:	60fb      	str	r3, [r7, #12]
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	2b03      	cmp	r3, #3
 8002c80:	d9bd      	bls.n	8002bfe <ETH_DMATxDescListInit+0xe>
 8002c82:	687b      	ldr	r3, [r7, #4]
 8002c84:	2200      	movs	r2, #0
 8002c86:	629a      	str	r2, [r3, #40]	; 0x28
 8002c88:	687b      	ldr	r3, [r7, #4]
 8002c8a:	68da      	ldr	r2, [r3, #12]
 8002c8c:	687b      	ldr	r3, [r7, #4]
 8002c8e:	681b      	ldr	r3, [r3, #0]
 8002c90:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002c94:	611a      	str	r2, [r3, #16]
 8002c96:	bf00      	nop
 8002c98:	3714      	adds	r7, #20
 8002c9a:	46bd      	mov	sp, r7
 8002c9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ca0:	4770      	bx	lr

08002ca2 <ETH_DMARxDescListInit>:
 8002ca2:	b480      	push	{r7}
 8002ca4:	b085      	sub	sp, #20
 8002ca6:	af00      	add	r7, sp, #0
 8002ca8:	6078      	str	r0, [r7, #4]
 8002caa:	2300      	movs	r3, #0
 8002cac:	60fb      	str	r3, [r7, #12]
 8002cae:	e046      	b.n	8002d3e <ETH_DMARxDescListInit+0x9c>
 8002cb0:	687b      	ldr	r3, [r7, #4]
 8002cb2:	6919      	ldr	r1, [r3, #16]
 8002cb4:	68fa      	ldr	r2, [r7, #12]
 8002cb6:	4613      	mov	r3, r2
 8002cb8:	009b      	lsls	r3, r3, #2
 8002cba:	4413      	add	r3, r2
 8002cbc:	00db      	lsls	r3, r3, #3
 8002cbe:	440b      	add	r3, r1
 8002cc0:	60bb      	str	r3, [r7, #8]
 8002cc2:	68bb      	ldr	r3, [r7, #8]
 8002cc4:	2200      	movs	r2, #0
 8002cc6:	601a      	str	r2, [r3, #0]
 8002cc8:	68bb      	ldr	r3, [r7, #8]
 8002cca:	2200      	movs	r2, #0
 8002ccc:	605a      	str	r2, [r3, #4]
 8002cce:	68bb      	ldr	r3, [r7, #8]
 8002cd0:	2200      	movs	r2, #0
 8002cd2:	609a      	str	r2, [r3, #8]
 8002cd4:	68bb      	ldr	r3, [r7, #8]
 8002cd6:	2200      	movs	r2, #0
 8002cd8:	60da      	str	r2, [r3, #12]
 8002cda:	68bb      	ldr	r3, [r7, #8]
 8002cdc:	2200      	movs	r2, #0
 8002cde:	621a      	str	r2, [r3, #32]
 8002ce0:	68bb      	ldr	r3, [r7, #8]
 8002ce2:	2200      	movs	r2, #0
 8002ce4:	625a      	str	r2, [r3, #36]	; 0x24
 8002ce6:	68bb      	ldr	r3, [r7, #8]
 8002ce8:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 8002cec:	601a      	str	r2, [r3, #0]
 8002cee:	68bb      	ldr	r3, [r7, #8]
 8002cf0:	f244 52f4 	movw	r2, #17908	; 0x45f4
 8002cf4:	605a      	str	r2, [r3, #4]
 8002cf6:	68bb      	ldr	r3, [r7, #8]
 8002cf8:	685b      	ldr	r3, [r3, #4]
 8002cfa:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 8002cfe:	68bb      	ldr	r3, [r7, #8]
 8002d00:	605a      	str	r2, [r3, #4]
 8002d02:	68b9      	ldr	r1, [r7, #8]
 8002d04:	687b      	ldr	r3, [r7, #4]
 8002d06:	68fa      	ldr	r2, [r7, #12]
 8002d08:	3212      	adds	r2, #18
 8002d0a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002d0e:	68fb      	ldr	r3, [r7, #12]
 8002d10:	2b02      	cmp	r3, #2
 8002d12:	d80c      	bhi.n	8002d2e <ETH_DMARxDescListInit+0x8c>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	6919      	ldr	r1, [r3, #16]
 8002d18:	68fb      	ldr	r3, [r7, #12]
 8002d1a:	1c5a      	adds	r2, r3, #1
 8002d1c:	4613      	mov	r3, r2
 8002d1e:	009b      	lsls	r3, r3, #2
 8002d20:	4413      	add	r3, r2
 8002d22:	00db      	lsls	r3, r3, #3
 8002d24:	440b      	add	r3, r1
 8002d26:	461a      	mov	r2, r3
 8002d28:	68bb      	ldr	r3, [r7, #8]
 8002d2a:	60da      	str	r2, [r3, #12]
 8002d2c:	e004      	b.n	8002d38 <ETH_DMARxDescListInit+0x96>
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	691b      	ldr	r3, [r3, #16]
 8002d32:	461a      	mov	r2, r3
 8002d34:	68bb      	ldr	r3, [r7, #8]
 8002d36:	60da      	str	r2, [r3, #12]
 8002d38:	68fb      	ldr	r3, [r7, #12]
 8002d3a:	3301      	adds	r3, #1
 8002d3c:	60fb      	str	r3, [r7, #12]
 8002d3e:	68fb      	ldr	r3, [r7, #12]
 8002d40:	2b03      	cmp	r3, #3
 8002d42:	d9b5      	bls.n	8002cb0 <ETH_DMARxDescListInit+0xe>
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	2200      	movs	r2, #0
 8002d48:	65da      	str	r2, [r3, #92]	; 0x5c
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	2200      	movs	r2, #0
 8002d4e:	661a      	str	r2, [r3, #96]	; 0x60
 8002d50:	687b      	ldr	r3, [r7, #4]
 8002d52:	2200      	movs	r2, #0
 8002d54:	669a      	str	r2, [r3, #104]	; 0x68
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	2200      	movs	r2, #0
 8002d5a:	66da      	str	r2, [r3, #108]	; 0x6c
 8002d5c:	687b      	ldr	r3, [r7, #4]
 8002d5e:	2200      	movs	r2, #0
 8002d60:	659a      	str	r2, [r3, #88]	; 0x58
 8002d62:	687b      	ldr	r3, [r7, #4]
 8002d64:	691a      	ldr	r2, [r3, #16]
 8002d66:	687b      	ldr	r3, [r7, #4]
 8002d68:	681b      	ldr	r3, [r3, #0]
 8002d6a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002d6e:	60da      	str	r2, [r3, #12]
 8002d70:	bf00      	nop
 8002d72:	3714      	adds	r7, #20
 8002d74:	46bd      	mov	sp, r7
 8002d76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002d7a:	4770      	bx	lr

08002d7c <HAL_GPIO_Init>:
 8002d7c:	b480      	push	{r7}
 8002d7e:	b089      	sub	sp, #36	; 0x24
 8002d80:	af00      	add	r7, sp, #0
 8002d82:	6078      	str	r0, [r7, #4]
 8002d84:	6039      	str	r1, [r7, #0]
 8002d86:	2300      	movs	r3, #0
 8002d88:	617b      	str	r3, [r7, #20]
 8002d8a:	2300      	movs	r3, #0
 8002d8c:	613b      	str	r3, [r7, #16]
 8002d8e:	2300      	movs	r3, #0
 8002d90:	61bb      	str	r3, [r7, #24]
 8002d92:	2300      	movs	r3, #0
 8002d94:	61fb      	str	r3, [r7, #28]
 8002d96:	e177      	b.n	8003088 <HAL_GPIO_Init+0x30c>
 8002d98:	2201      	movs	r2, #1
 8002d9a:	69fb      	ldr	r3, [r7, #28]
 8002d9c:	fa02 f303 	lsl.w	r3, r2, r3
 8002da0:	617b      	str	r3, [r7, #20]
 8002da2:	683b      	ldr	r3, [r7, #0]
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	697a      	ldr	r2, [r7, #20]
 8002da8:	4013      	ands	r3, r2
 8002daa:	613b      	str	r3, [r7, #16]
 8002dac:	693a      	ldr	r2, [r7, #16]
 8002dae:	697b      	ldr	r3, [r7, #20]
 8002db0:	429a      	cmp	r2, r3
 8002db2:	f040 8166 	bne.w	8003082 <HAL_GPIO_Init+0x306>
 8002db6:	683b      	ldr	r3, [r7, #0]
 8002db8:	685b      	ldr	r3, [r3, #4]
 8002dba:	f003 0303 	and.w	r3, r3, #3
 8002dbe:	2b01      	cmp	r3, #1
 8002dc0:	d005      	beq.n	8002dce <HAL_GPIO_Init+0x52>
 8002dc2:	683b      	ldr	r3, [r7, #0]
 8002dc4:	685b      	ldr	r3, [r3, #4]
 8002dc6:	f003 0303 	and.w	r3, r3, #3
 8002dca:	2b02      	cmp	r3, #2
 8002dcc:	d130      	bne.n	8002e30 <HAL_GPIO_Init+0xb4>
 8002dce:	687b      	ldr	r3, [r7, #4]
 8002dd0:	689b      	ldr	r3, [r3, #8]
 8002dd2:	61bb      	str	r3, [r7, #24]
 8002dd4:	69fb      	ldr	r3, [r7, #28]
 8002dd6:	005b      	lsls	r3, r3, #1
 8002dd8:	2203      	movs	r2, #3
 8002dda:	fa02 f303 	lsl.w	r3, r2, r3
 8002dde:	43db      	mvns	r3, r3
 8002de0:	69ba      	ldr	r2, [r7, #24]
 8002de2:	4013      	ands	r3, r2
 8002de4:	61bb      	str	r3, [r7, #24]
 8002de6:	683b      	ldr	r3, [r7, #0]
 8002de8:	68da      	ldr	r2, [r3, #12]
 8002dea:	69fb      	ldr	r3, [r7, #28]
 8002dec:	005b      	lsls	r3, r3, #1
 8002dee:	fa02 f303 	lsl.w	r3, r2, r3
 8002df2:	69ba      	ldr	r2, [r7, #24]
 8002df4:	4313      	orrs	r3, r2
 8002df6:	61bb      	str	r3, [r7, #24]
 8002df8:	687b      	ldr	r3, [r7, #4]
 8002dfa:	69ba      	ldr	r2, [r7, #24]
 8002dfc:	609a      	str	r2, [r3, #8]
 8002dfe:	687b      	ldr	r3, [r7, #4]
 8002e00:	685b      	ldr	r3, [r3, #4]
 8002e02:	61bb      	str	r3, [r7, #24]
 8002e04:	2201      	movs	r2, #1
 8002e06:	69fb      	ldr	r3, [r7, #28]
 8002e08:	fa02 f303 	lsl.w	r3, r2, r3
 8002e0c:	43db      	mvns	r3, r3
 8002e0e:	69ba      	ldr	r2, [r7, #24]
 8002e10:	4013      	ands	r3, r2
 8002e12:	61bb      	str	r3, [r7, #24]
 8002e14:	683b      	ldr	r3, [r7, #0]
 8002e16:	685b      	ldr	r3, [r3, #4]
 8002e18:	091b      	lsrs	r3, r3, #4
 8002e1a:	f003 0201 	and.w	r2, r3, #1
 8002e1e:	69fb      	ldr	r3, [r7, #28]
 8002e20:	fa02 f303 	lsl.w	r3, r2, r3
 8002e24:	69ba      	ldr	r2, [r7, #24]
 8002e26:	4313      	orrs	r3, r2
 8002e28:	61bb      	str	r3, [r7, #24]
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	69ba      	ldr	r2, [r7, #24]
 8002e2e:	605a      	str	r2, [r3, #4]
 8002e30:	683b      	ldr	r3, [r7, #0]
 8002e32:	685b      	ldr	r3, [r3, #4]
 8002e34:	f003 0303 	and.w	r3, r3, #3
 8002e38:	2b03      	cmp	r3, #3
 8002e3a:	d017      	beq.n	8002e6c <HAL_GPIO_Init+0xf0>
 8002e3c:	687b      	ldr	r3, [r7, #4]
 8002e3e:	68db      	ldr	r3, [r3, #12]
 8002e40:	61bb      	str	r3, [r7, #24]
 8002e42:	69fb      	ldr	r3, [r7, #28]
 8002e44:	005b      	lsls	r3, r3, #1
 8002e46:	2203      	movs	r2, #3
 8002e48:	fa02 f303 	lsl.w	r3, r2, r3
 8002e4c:	43db      	mvns	r3, r3
 8002e4e:	69ba      	ldr	r2, [r7, #24]
 8002e50:	4013      	ands	r3, r2
 8002e52:	61bb      	str	r3, [r7, #24]
 8002e54:	683b      	ldr	r3, [r7, #0]
 8002e56:	689a      	ldr	r2, [r3, #8]
 8002e58:	69fb      	ldr	r3, [r7, #28]
 8002e5a:	005b      	lsls	r3, r3, #1
 8002e5c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e60:	69ba      	ldr	r2, [r7, #24]
 8002e62:	4313      	orrs	r3, r2
 8002e64:	61bb      	str	r3, [r7, #24]
 8002e66:	687b      	ldr	r3, [r7, #4]
 8002e68:	69ba      	ldr	r2, [r7, #24]
 8002e6a:	60da      	str	r2, [r3, #12]
 8002e6c:	683b      	ldr	r3, [r7, #0]
 8002e6e:	685b      	ldr	r3, [r3, #4]
 8002e70:	f003 0303 	and.w	r3, r3, #3
 8002e74:	2b02      	cmp	r3, #2
 8002e76:	d123      	bne.n	8002ec0 <HAL_GPIO_Init+0x144>
 8002e78:	69fb      	ldr	r3, [r7, #28]
 8002e7a:	08da      	lsrs	r2, r3, #3
 8002e7c:	687b      	ldr	r3, [r7, #4]
 8002e7e:	3208      	adds	r2, #8
 8002e80:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002e84:	61bb      	str	r3, [r7, #24]
 8002e86:	69fb      	ldr	r3, [r7, #28]
 8002e88:	f003 0307 	and.w	r3, r3, #7
 8002e8c:	009b      	lsls	r3, r3, #2
 8002e8e:	220f      	movs	r2, #15
 8002e90:	fa02 f303 	lsl.w	r3, r2, r3
 8002e94:	43db      	mvns	r3, r3
 8002e96:	69ba      	ldr	r2, [r7, #24]
 8002e98:	4013      	ands	r3, r2
 8002e9a:	61bb      	str	r3, [r7, #24]
 8002e9c:	683b      	ldr	r3, [r7, #0]
 8002e9e:	691a      	ldr	r2, [r3, #16]
 8002ea0:	69fb      	ldr	r3, [r7, #28]
 8002ea2:	f003 0307 	and.w	r3, r3, #7
 8002ea6:	009b      	lsls	r3, r3, #2
 8002ea8:	fa02 f303 	lsl.w	r3, r2, r3
 8002eac:	69ba      	ldr	r2, [r7, #24]
 8002eae:	4313      	orrs	r3, r2
 8002eb0:	61bb      	str	r3, [r7, #24]
 8002eb2:	69fb      	ldr	r3, [r7, #28]
 8002eb4:	08da      	lsrs	r2, r3, #3
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	3208      	adds	r2, #8
 8002eba:	69b9      	ldr	r1, [r7, #24]
 8002ebc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002ec0:	687b      	ldr	r3, [r7, #4]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	61bb      	str	r3, [r7, #24]
 8002ec6:	69fb      	ldr	r3, [r7, #28]
 8002ec8:	005b      	lsls	r3, r3, #1
 8002eca:	2203      	movs	r2, #3
 8002ecc:	fa02 f303 	lsl.w	r3, r2, r3
 8002ed0:	43db      	mvns	r3, r3
 8002ed2:	69ba      	ldr	r2, [r7, #24]
 8002ed4:	4013      	ands	r3, r2
 8002ed6:	61bb      	str	r3, [r7, #24]
 8002ed8:	683b      	ldr	r3, [r7, #0]
 8002eda:	685b      	ldr	r3, [r3, #4]
 8002edc:	f003 0203 	and.w	r2, r3, #3
 8002ee0:	69fb      	ldr	r3, [r7, #28]
 8002ee2:	005b      	lsls	r3, r3, #1
 8002ee4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ee8:	69ba      	ldr	r2, [r7, #24]
 8002eea:	4313      	orrs	r3, r2
 8002eec:	61bb      	str	r3, [r7, #24]
 8002eee:	687b      	ldr	r3, [r7, #4]
 8002ef0:	69ba      	ldr	r2, [r7, #24]
 8002ef2:	601a      	str	r2, [r3, #0]
 8002ef4:	683b      	ldr	r3, [r7, #0]
 8002ef6:	685b      	ldr	r3, [r3, #4]
 8002ef8:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8002efc:	2b00      	cmp	r3, #0
 8002efe:	f000 80c0 	beq.w	8003082 <HAL_GPIO_Init+0x306>
 8002f02:	2300      	movs	r3, #0
 8002f04:	60fb      	str	r3, [r7, #12]
 8002f06:	4b66      	ldr	r3, [pc, #408]	; (80030a0 <HAL_GPIO_Init+0x324>)
 8002f08:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f0a:	4a65      	ldr	r2, [pc, #404]	; (80030a0 <HAL_GPIO_Init+0x324>)
 8002f0c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002f10:	6453      	str	r3, [r2, #68]	; 0x44
 8002f12:	4b63      	ldr	r3, [pc, #396]	; (80030a0 <HAL_GPIO_Init+0x324>)
 8002f14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002f16:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002f1a:	60fb      	str	r3, [r7, #12]
 8002f1c:	68fb      	ldr	r3, [r7, #12]
 8002f1e:	4a61      	ldr	r2, [pc, #388]	; (80030a4 <HAL_GPIO_Init+0x328>)
 8002f20:	69fb      	ldr	r3, [r7, #28]
 8002f22:	089b      	lsrs	r3, r3, #2
 8002f24:	3302      	adds	r3, #2
 8002f26:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002f2a:	61bb      	str	r3, [r7, #24]
 8002f2c:	69fb      	ldr	r3, [r7, #28]
 8002f2e:	f003 0303 	and.w	r3, r3, #3
 8002f32:	009b      	lsls	r3, r3, #2
 8002f34:	220f      	movs	r2, #15
 8002f36:	fa02 f303 	lsl.w	r3, r2, r3
 8002f3a:	43db      	mvns	r3, r3
 8002f3c:	69ba      	ldr	r2, [r7, #24]
 8002f3e:	4013      	ands	r3, r2
 8002f40:	61bb      	str	r3, [r7, #24]
 8002f42:	687b      	ldr	r3, [r7, #4]
 8002f44:	4a58      	ldr	r2, [pc, #352]	; (80030a8 <HAL_GPIO_Init+0x32c>)
 8002f46:	4293      	cmp	r3, r2
 8002f48:	d037      	beq.n	8002fba <HAL_GPIO_Init+0x23e>
 8002f4a:	687b      	ldr	r3, [r7, #4]
 8002f4c:	4a57      	ldr	r2, [pc, #348]	; (80030ac <HAL_GPIO_Init+0x330>)
 8002f4e:	4293      	cmp	r3, r2
 8002f50:	d031      	beq.n	8002fb6 <HAL_GPIO_Init+0x23a>
 8002f52:	687b      	ldr	r3, [r7, #4]
 8002f54:	4a56      	ldr	r2, [pc, #344]	; (80030b0 <HAL_GPIO_Init+0x334>)
 8002f56:	4293      	cmp	r3, r2
 8002f58:	d02b      	beq.n	8002fb2 <HAL_GPIO_Init+0x236>
 8002f5a:	687b      	ldr	r3, [r7, #4]
 8002f5c:	4a55      	ldr	r2, [pc, #340]	; (80030b4 <HAL_GPIO_Init+0x338>)
 8002f5e:	4293      	cmp	r3, r2
 8002f60:	d025      	beq.n	8002fae <HAL_GPIO_Init+0x232>
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	4a54      	ldr	r2, [pc, #336]	; (80030b8 <HAL_GPIO_Init+0x33c>)
 8002f66:	4293      	cmp	r3, r2
 8002f68:	d01f      	beq.n	8002faa <HAL_GPIO_Init+0x22e>
 8002f6a:	687b      	ldr	r3, [r7, #4]
 8002f6c:	4a53      	ldr	r2, [pc, #332]	; (80030bc <HAL_GPIO_Init+0x340>)
 8002f6e:	4293      	cmp	r3, r2
 8002f70:	d019      	beq.n	8002fa6 <HAL_GPIO_Init+0x22a>
 8002f72:	687b      	ldr	r3, [r7, #4]
 8002f74:	4a52      	ldr	r2, [pc, #328]	; (80030c0 <HAL_GPIO_Init+0x344>)
 8002f76:	4293      	cmp	r3, r2
 8002f78:	d013      	beq.n	8002fa2 <HAL_GPIO_Init+0x226>
 8002f7a:	687b      	ldr	r3, [r7, #4]
 8002f7c:	4a51      	ldr	r2, [pc, #324]	; (80030c4 <HAL_GPIO_Init+0x348>)
 8002f7e:	4293      	cmp	r3, r2
 8002f80:	d00d      	beq.n	8002f9e <HAL_GPIO_Init+0x222>
 8002f82:	687b      	ldr	r3, [r7, #4]
 8002f84:	4a50      	ldr	r2, [pc, #320]	; (80030c8 <HAL_GPIO_Init+0x34c>)
 8002f86:	4293      	cmp	r3, r2
 8002f88:	d007      	beq.n	8002f9a <HAL_GPIO_Init+0x21e>
 8002f8a:	687b      	ldr	r3, [r7, #4]
 8002f8c:	4a4f      	ldr	r2, [pc, #316]	; (80030cc <HAL_GPIO_Init+0x350>)
 8002f8e:	4293      	cmp	r3, r2
 8002f90:	d101      	bne.n	8002f96 <HAL_GPIO_Init+0x21a>
 8002f92:	2309      	movs	r3, #9
 8002f94:	e012      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002f96:	230a      	movs	r3, #10
 8002f98:	e010      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002f9a:	2308      	movs	r3, #8
 8002f9c:	e00e      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002f9e:	2307      	movs	r3, #7
 8002fa0:	e00c      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002fa2:	2306      	movs	r3, #6
 8002fa4:	e00a      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002fa6:	2305      	movs	r3, #5
 8002fa8:	e008      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002faa:	2304      	movs	r3, #4
 8002fac:	e006      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002fae:	2303      	movs	r3, #3
 8002fb0:	e004      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002fb2:	2302      	movs	r3, #2
 8002fb4:	e002      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002fb6:	2301      	movs	r3, #1
 8002fb8:	e000      	b.n	8002fbc <HAL_GPIO_Init+0x240>
 8002fba:	2300      	movs	r3, #0
 8002fbc:	69fa      	ldr	r2, [r7, #28]
 8002fbe:	f002 0203 	and.w	r2, r2, #3
 8002fc2:	0092      	lsls	r2, r2, #2
 8002fc4:	4093      	lsls	r3, r2
 8002fc6:	69ba      	ldr	r2, [r7, #24]
 8002fc8:	4313      	orrs	r3, r2
 8002fca:	61bb      	str	r3, [r7, #24]
 8002fcc:	4935      	ldr	r1, [pc, #212]	; (80030a4 <HAL_GPIO_Init+0x328>)
 8002fce:	69fb      	ldr	r3, [r7, #28]
 8002fd0:	089b      	lsrs	r3, r3, #2
 8002fd2:	3302      	adds	r3, #2
 8002fd4:	69ba      	ldr	r2, [r7, #24]
 8002fd6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002fda:	4b3d      	ldr	r3, [pc, #244]	; (80030d0 <HAL_GPIO_Init+0x354>)
 8002fdc:	689b      	ldr	r3, [r3, #8]
 8002fde:	61bb      	str	r3, [r7, #24]
 8002fe0:	693b      	ldr	r3, [r7, #16]
 8002fe2:	43db      	mvns	r3, r3
 8002fe4:	69ba      	ldr	r2, [r7, #24]
 8002fe6:	4013      	ands	r3, r2
 8002fe8:	61bb      	str	r3, [r7, #24]
 8002fea:	683b      	ldr	r3, [r7, #0]
 8002fec:	685b      	ldr	r3, [r3, #4]
 8002fee:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002ff2:	2b00      	cmp	r3, #0
 8002ff4:	d003      	beq.n	8002ffe <HAL_GPIO_Init+0x282>
 8002ff6:	69ba      	ldr	r2, [r7, #24]
 8002ff8:	693b      	ldr	r3, [r7, #16]
 8002ffa:	4313      	orrs	r3, r2
 8002ffc:	61bb      	str	r3, [r7, #24]
 8002ffe:	4a34      	ldr	r2, [pc, #208]	; (80030d0 <HAL_GPIO_Init+0x354>)
 8003000:	69bb      	ldr	r3, [r7, #24]
 8003002:	6093      	str	r3, [r2, #8]
 8003004:	4b32      	ldr	r3, [pc, #200]	; (80030d0 <HAL_GPIO_Init+0x354>)
 8003006:	68db      	ldr	r3, [r3, #12]
 8003008:	61bb      	str	r3, [r7, #24]
 800300a:	693b      	ldr	r3, [r7, #16]
 800300c:	43db      	mvns	r3, r3
 800300e:	69ba      	ldr	r2, [r7, #24]
 8003010:	4013      	ands	r3, r2
 8003012:	61bb      	str	r3, [r7, #24]
 8003014:	683b      	ldr	r3, [r7, #0]
 8003016:	685b      	ldr	r3, [r3, #4]
 8003018:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800301c:	2b00      	cmp	r3, #0
 800301e:	d003      	beq.n	8003028 <HAL_GPIO_Init+0x2ac>
 8003020:	69ba      	ldr	r2, [r7, #24]
 8003022:	693b      	ldr	r3, [r7, #16]
 8003024:	4313      	orrs	r3, r2
 8003026:	61bb      	str	r3, [r7, #24]
 8003028:	4a29      	ldr	r2, [pc, #164]	; (80030d0 <HAL_GPIO_Init+0x354>)
 800302a:	69bb      	ldr	r3, [r7, #24]
 800302c:	60d3      	str	r3, [r2, #12]
 800302e:	4b28      	ldr	r3, [pc, #160]	; (80030d0 <HAL_GPIO_Init+0x354>)
 8003030:	685b      	ldr	r3, [r3, #4]
 8003032:	61bb      	str	r3, [r7, #24]
 8003034:	693b      	ldr	r3, [r7, #16]
 8003036:	43db      	mvns	r3, r3
 8003038:	69ba      	ldr	r2, [r7, #24]
 800303a:	4013      	ands	r3, r2
 800303c:	61bb      	str	r3, [r7, #24]
 800303e:	683b      	ldr	r3, [r7, #0]
 8003040:	685b      	ldr	r3, [r3, #4]
 8003042:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003046:	2b00      	cmp	r3, #0
 8003048:	d003      	beq.n	8003052 <HAL_GPIO_Init+0x2d6>
 800304a:	69ba      	ldr	r2, [r7, #24]
 800304c:	693b      	ldr	r3, [r7, #16]
 800304e:	4313      	orrs	r3, r2
 8003050:	61bb      	str	r3, [r7, #24]
 8003052:	4a1f      	ldr	r2, [pc, #124]	; (80030d0 <HAL_GPIO_Init+0x354>)
 8003054:	69bb      	ldr	r3, [r7, #24]
 8003056:	6053      	str	r3, [r2, #4]
 8003058:	4b1d      	ldr	r3, [pc, #116]	; (80030d0 <HAL_GPIO_Init+0x354>)
 800305a:	681b      	ldr	r3, [r3, #0]
 800305c:	61bb      	str	r3, [r7, #24]
 800305e:	693b      	ldr	r3, [r7, #16]
 8003060:	43db      	mvns	r3, r3
 8003062:	69ba      	ldr	r2, [r7, #24]
 8003064:	4013      	ands	r3, r2
 8003066:	61bb      	str	r3, [r7, #24]
 8003068:	683b      	ldr	r3, [r7, #0]
 800306a:	685b      	ldr	r3, [r3, #4]
 800306c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8003070:	2b00      	cmp	r3, #0
 8003072:	d003      	beq.n	800307c <HAL_GPIO_Init+0x300>
 8003074:	69ba      	ldr	r2, [r7, #24]
 8003076:	693b      	ldr	r3, [r7, #16]
 8003078:	4313      	orrs	r3, r2
 800307a:	61bb      	str	r3, [r7, #24]
 800307c:	4a14      	ldr	r2, [pc, #80]	; (80030d0 <HAL_GPIO_Init+0x354>)
 800307e:	69bb      	ldr	r3, [r7, #24]
 8003080:	6013      	str	r3, [r2, #0]
 8003082:	69fb      	ldr	r3, [r7, #28]
 8003084:	3301      	adds	r3, #1
 8003086:	61fb      	str	r3, [r7, #28]
 8003088:	69fb      	ldr	r3, [r7, #28]
 800308a:	2b0f      	cmp	r3, #15
 800308c:	f67f ae84 	bls.w	8002d98 <HAL_GPIO_Init+0x1c>
 8003090:	bf00      	nop
 8003092:	bf00      	nop
 8003094:	3724      	adds	r7, #36	; 0x24
 8003096:	46bd      	mov	sp, r7
 8003098:	f85d 7b04 	ldr.w	r7, [sp], #4
 800309c:	4770      	bx	lr
 800309e:	bf00      	nop
 80030a0:	40023800 	.word	0x40023800
 80030a4:	40013800 	.word	0x40013800
 80030a8:	40020000 	.word	0x40020000
 80030ac:	40020400 	.word	0x40020400
 80030b0:	40020800 	.word	0x40020800
 80030b4:	40020c00 	.word	0x40020c00
 80030b8:	40021000 	.word	0x40021000
 80030bc:	40021400 	.word	0x40021400
 80030c0:	40021800 	.word	0x40021800
 80030c4:	40021c00 	.word	0x40021c00
 80030c8:	40022000 	.word	0x40022000
 80030cc:	40022400 	.word	0x40022400
 80030d0:	40013c00 	.word	0x40013c00

080030d4 <HAL_GPIO_WritePin>:
 80030d4:	b480      	push	{r7}
 80030d6:	b083      	sub	sp, #12
 80030d8:	af00      	add	r7, sp, #0
 80030da:	6078      	str	r0, [r7, #4]
 80030dc:	460b      	mov	r3, r1
 80030de:	807b      	strh	r3, [r7, #2]
 80030e0:	4613      	mov	r3, r2
 80030e2:	707b      	strb	r3, [r7, #1]
 80030e4:	787b      	ldrb	r3, [r7, #1]
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d003      	beq.n	80030f2 <HAL_GPIO_WritePin+0x1e>
 80030ea:	887a      	ldrh	r2, [r7, #2]
 80030ec:	687b      	ldr	r3, [r7, #4]
 80030ee:	619a      	str	r2, [r3, #24]
 80030f0:	e003      	b.n	80030fa <HAL_GPIO_WritePin+0x26>
 80030f2:	887b      	ldrh	r3, [r7, #2]
 80030f4:	041a      	lsls	r2, r3, #16
 80030f6:	687b      	ldr	r3, [r7, #4]
 80030f8:	619a      	str	r2, [r3, #24]
 80030fa:	bf00      	nop
 80030fc:	370c      	adds	r7, #12
 80030fe:	46bd      	mov	sp, r7
 8003100:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003104:	4770      	bx	lr

08003106 <HAL_PCD_Init>:
 8003106:	b580      	push	{r7, lr}
 8003108:	b086      	sub	sp, #24
 800310a:	af02      	add	r7, sp, #8
 800310c:	6078      	str	r0, [r7, #4]
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	2b00      	cmp	r3, #0
 8003112:	d101      	bne.n	8003118 <HAL_PCD_Init+0x12>
 8003114:	2301      	movs	r3, #1
 8003116:	e101      	b.n	800331c <HAL_PCD_Init+0x216>
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	60bb      	str	r3, [r7, #8]
 800311e:	687b      	ldr	r3, [r7, #4]
 8003120:	f893 3495 	ldrb.w	r3, [r3, #1173]	; 0x495
 8003124:	b2db      	uxtb	r3, r3
 8003126:	2b00      	cmp	r3, #0
 8003128:	d106      	bne.n	8003138 <HAL_PCD_Init+0x32>
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	2200      	movs	r2, #0
 800312e:	f883 2494 	strb.w	r2, [r3, #1172]	; 0x494
 8003132:	6878      	ldr	r0, [r7, #4]
 8003134:	f7fe fabe 	bl	80016b4 <HAL_PCD_MspInit>
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	2203      	movs	r2, #3
 800313c:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 8003140:	68bb      	ldr	r3, [r7, #8]
 8003142:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8003146:	d102      	bne.n	800314e <HAL_PCD_Init+0x48>
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	2200      	movs	r2, #0
 800314c:	719a      	strb	r2, [r3, #6]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	4618      	mov	r0, r3
 8003154:	f002 f882 	bl	800525c <USB_DisableGlobalInt>
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	6818      	ldr	r0, [r3, #0]
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	7c1a      	ldrb	r2, [r3, #16]
 8003160:	f88d 2000 	strb.w	r2, [sp]
 8003164:	3304      	adds	r3, #4
 8003166:	cb0e      	ldmia	r3, {r1, r2, r3}
 8003168:	f002 f814 	bl	8005194 <USB_CoreInit>
 800316c:	4603      	mov	r3, r0
 800316e:	2b00      	cmp	r3, #0
 8003170:	d005      	beq.n	800317e <HAL_PCD_Init+0x78>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	2202      	movs	r2, #2
 8003176:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 800317a:	2301      	movs	r3, #1
 800317c:	e0ce      	b.n	800331c <HAL_PCD_Init+0x216>
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	2100      	movs	r1, #0
 8003184:	4618      	mov	r0, r3
 8003186:	f002 f87a 	bl	800527e <USB_SetCurrentMode>
 800318a:	4603      	mov	r3, r0
 800318c:	2b00      	cmp	r3, #0
 800318e:	d005      	beq.n	800319c <HAL_PCD_Init+0x96>
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	2202      	movs	r2, #2
 8003194:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 8003198:	2301      	movs	r3, #1
 800319a:	e0bf      	b.n	800331c <HAL_PCD_Init+0x216>
 800319c:	2300      	movs	r3, #0
 800319e:	73fb      	strb	r3, [r7, #15]
 80031a0:	e04a      	b.n	8003238 <HAL_PCD_Init+0x132>
 80031a2:	7bfa      	ldrb	r2, [r7, #15]
 80031a4:	6879      	ldr	r1, [r7, #4]
 80031a6:	4613      	mov	r3, r2
 80031a8:	00db      	lsls	r3, r3, #3
 80031aa:	4413      	add	r3, r2
 80031ac:	009b      	lsls	r3, r3, #2
 80031ae:	440b      	add	r3, r1
 80031b0:	3315      	adds	r3, #21
 80031b2:	2201      	movs	r2, #1
 80031b4:	701a      	strb	r2, [r3, #0]
 80031b6:	7bfa      	ldrb	r2, [r7, #15]
 80031b8:	6879      	ldr	r1, [r7, #4]
 80031ba:	4613      	mov	r3, r2
 80031bc:	00db      	lsls	r3, r3, #3
 80031be:	4413      	add	r3, r2
 80031c0:	009b      	lsls	r3, r3, #2
 80031c2:	440b      	add	r3, r1
 80031c4:	3314      	adds	r3, #20
 80031c6:	7bfa      	ldrb	r2, [r7, #15]
 80031c8:	701a      	strb	r2, [r3, #0]
 80031ca:	7bfa      	ldrb	r2, [r7, #15]
 80031cc:	7bfb      	ldrb	r3, [r7, #15]
 80031ce:	b298      	uxth	r0, r3
 80031d0:	6879      	ldr	r1, [r7, #4]
 80031d2:	4613      	mov	r3, r2
 80031d4:	00db      	lsls	r3, r3, #3
 80031d6:	4413      	add	r3, r2
 80031d8:	009b      	lsls	r3, r3, #2
 80031da:	440b      	add	r3, r1
 80031dc:	332e      	adds	r3, #46	; 0x2e
 80031de:	4602      	mov	r2, r0
 80031e0:	801a      	strh	r2, [r3, #0]
 80031e2:	7bfa      	ldrb	r2, [r7, #15]
 80031e4:	6879      	ldr	r1, [r7, #4]
 80031e6:	4613      	mov	r3, r2
 80031e8:	00db      	lsls	r3, r3, #3
 80031ea:	4413      	add	r3, r2
 80031ec:	009b      	lsls	r3, r3, #2
 80031ee:	440b      	add	r3, r1
 80031f0:	3318      	adds	r3, #24
 80031f2:	2200      	movs	r2, #0
 80031f4:	701a      	strb	r2, [r3, #0]
 80031f6:	7bfa      	ldrb	r2, [r7, #15]
 80031f8:	6879      	ldr	r1, [r7, #4]
 80031fa:	4613      	mov	r3, r2
 80031fc:	00db      	lsls	r3, r3, #3
 80031fe:	4413      	add	r3, r2
 8003200:	009b      	lsls	r3, r3, #2
 8003202:	440b      	add	r3, r1
 8003204:	331c      	adds	r3, #28
 8003206:	2200      	movs	r2, #0
 8003208:	601a      	str	r2, [r3, #0]
 800320a:	7bfa      	ldrb	r2, [r7, #15]
 800320c:	6879      	ldr	r1, [r7, #4]
 800320e:	4613      	mov	r3, r2
 8003210:	00db      	lsls	r3, r3, #3
 8003212:	4413      	add	r3, r2
 8003214:	009b      	lsls	r3, r3, #2
 8003216:	440b      	add	r3, r1
 8003218:	3320      	adds	r3, #32
 800321a:	2200      	movs	r2, #0
 800321c:	601a      	str	r2, [r3, #0]
 800321e:	7bfa      	ldrb	r2, [r7, #15]
 8003220:	6879      	ldr	r1, [r7, #4]
 8003222:	4613      	mov	r3, r2
 8003224:	00db      	lsls	r3, r3, #3
 8003226:	4413      	add	r3, r2
 8003228:	009b      	lsls	r3, r3, #2
 800322a:	440b      	add	r3, r1
 800322c:	3324      	adds	r3, #36	; 0x24
 800322e:	2200      	movs	r2, #0
 8003230:	601a      	str	r2, [r3, #0]
 8003232:	7bfb      	ldrb	r3, [r7, #15]
 8003234:	3301      	adds	r3, #1
 8003236:	73fb      	strb	r3, [r7, #15]
 8003238:	687b      	ldr	r3, [r7, #4]
 800323a:	791b      	ldrb	r3, [r3, #4]
 800323c:	7bfa      	ldrb	r2, [r7, #15]
 800323e:	429a      	cmp	r2, r3
 8003240:	d3af      	bcc.n	80031a2 <HAL_PCD_Init+0x9c>
 8003242:	2300      	movs	r3, #0
 8003244:	73fb      	strb	r3, [r7, #15]
 8003246:	e044      	b.n	80032d2 <HAL_PCD_Init+0x1cc>
 8003248:	7bfa      	ldrb	r2, [r7, #15]
 800324a:	6879      	ldr	r1, [r7, #4]
 800324c:	4613      	mov	r3, r2
 800324e:	00db      	lsls	r3, r3, #3
 8003250:	4413      	add	r3, r2
 8003252:	009b      	lsls	r3, r3, #2
 8003254:	440b      	add	r3, r1
 8003256:	f203 2355 	addw	r3, r3, #597	; 0x255
 800325a:	2200      	movs	r2, #0
 800325c:	701a      	strb	r2, [r3, #0]
 800325e:	7bfa      	ldrb	r2, [r7, #15]
 8003260:	6879      	ldr	r1, [r7, #4]
 8003262:	4613      	mov	r3, r2
 8003264:	00db      	lsls	r3, r3, #3
 8003266:	4413      	add	r3, r2
 8003268:	009b      	lsls	r3, r3, #2
 800326a:	440b      	add	r3, r1
 800326c:	f503 7315 	add.w	r3, r3, #596	; 0x254
 8003270:	7bfa      	ldrb	r2, [r7, #15]
 8003272:	701a      	strb	r2, [r3, #0]
 8003274:	7bfa      	ldrb	r2, [r7, #15]
 8003276:	6879      	ldr	r1, [r7, #4]
 8003278:	4613      	mov	r3, r2
 800327a:	00db      	lsls	r3, r3, #3
 800327c:	4413      	add	r3, r2
 800327e:	009b      	lsls	r3, r3, #2
 8003280:	440b      	add	r3, r1
 8003282:	f503 7316 	add.w	r3, r3, #600	; 0x258
 8003286:	2200      	movs	r2, #0
 8003288:	701a      	strb	r2, [r3, #0]
 800328a:	7bfa      	ldrb	r2, [r7, #15]
 800328c:	6879      	ldr	r1, [r7, #4]
 800328e:	4613      	mov	r3, r2
 8003290:	00db      	lsls	r3, r3, #3
 8003292:	4413      	add	r3, r2
 8003294:	009b      	lsls	r3, r3, #2
 8003296:	440b      	add	r3, r1
 8003298:	f503 7317 	add.w	r3, r3, #604	; 0x25c
 800329c:	2200      	movs	r2, #0
 800329e:	601a      	str	r2, [r3, #0]
 80032a0:	7bfa      	ldrb	r2, [r7, #15]
 80032a2:	6879      	ldr	r1, [r7, #4]
 80032a4:	4613      	mov	r3, r2
 80032a6:	00db      	lsls	r3, r3, #3
 80032a8:	4413      	add	r3, r2
 80032aa:	009b      	lsls	r3, r3, #2
 80032ac:	440b      	add	r3, r1
 80032ae:	f503 7318 	add.w	r3, r3, #608	; 0x260
 80032b2:	2200      	movs	r2, #0
 80032b4:	601a      	str	r2, [r3, #0]
 80032b6:	7bfa      	ldrb	r2, [r7, #15]
 80032b8:	6879      	ldr	r1, [r7, #4]
 80032ba:	4613      	mov	r3, r2
 80032bc:	00db      	lsls	r3, r3, #3
 80032be:	4413      	add	r3, r2
 80032c0:	009b      	lsls	r3, r3, #2
 80032c2:	440b      	add	r3, r1
 80032c4:	f503 7319 	add.w	r3, r3, #612	; 0x264
 80032c8:	2200      	movs	r2, #0
 80032ca:	601a      	str	r2, [r3, #0]
 80032cc:	7bfb      	ldrb	r3, [r7, #15]
 80032ce:	3301      	adds	r3, #1
 80032d0:	73fb      	strb	r3, [r7, #15]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	791b      	ldrb	r3, [r3, #4]
 80032d6:	7bfa      	ldrb	r2, [r7, #15]
 80032d8:	429a      	cmp	r2, r3
 80032da:	d3b5      	bcc.n	8003248 <HAL_PCD_Init+0x142>
 80032dc:	687b      	ldr	r3, [r7, #4]
 80032de:	6818      	ldr	r0, [r3, #0]
 80032e0:	687b      	ldr	r3, [r7, #4]
 80032e2:	7c1a      	ldrb	r2, [r3, #16]
 80032e4:	f88d 2000 	strb.w	r2, [sp]
 80032e8:	3304      	adds	r3, #4
 80032ea:	cb0e      	ldmia	r3, {r1, r2, r3}
 80032ec:	f002 f814 	bl	8005318 <USB_DevInit>
 80032f0:	4603      	mov	r3, r0
 80032f2:	2b00      	cmp	r3, #0
 80032f4:	d005      	beq.n	8003302 <HAL_PCD_Init+0x1fc>
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	2202      	movs	r2, #2
 80032fa:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 80032fe:	2301      	movs	r3, #1
 8003300:	e00c      	b.n	800331c <HAL_PCD_Init+0x216>
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	2200      	movs	r2, #0
 8003306:	745a      	strb	r2, [r3, #17]
 8003308:	687b      	ldr	r3, [r7, #4]
 800330a:	2201      	movs	r2, #1
 800330c:	f883 2495 	strb.w	r2, [r3, #1173]	; 0x495
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	4618      	mov	r0, r3
 8003316:	f002 f9dc 	bl	80056d2 <USB_DevDisconnect>
 800331a:	2300      	movs	r3, #0
 800331c:	4618      	mov	r0, r3
 800331e:	3710      	adds	r7, #16
 8003320:	46bd      	mov	sp, r7
 8003322:	bd80      	pop	{r7, pc}

08003324 <HAL_RCC_OscConfig>:
 8003324:	b580      	push	{r7, lr}
 8003326:	b086      	sub	sp, #24
 8003328:	af00      	add	r7, sp, #0
 800332a:	6078      	str	r0, [r7, #4]
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	2b00      	cmp	r3, #0
 8003330:	d101      	bne.n	8003336 <HAL_RCC_OscConfig+0x12>
 8003332:	2301      	movs	r3, #1
 8003334:	e267      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 8003336:	687b      	ldr	r3, [r7, #4]
 8003338:	681b      	ldr	r3, [r3, #0]
 800333a:	f003 0301 	and.w	r3, r3, #1
 800333e:	2b00      	cmp	r3, #0
 8003340:	d075      	beq.n	800342e <HAL_RCC_OscConfig+0x10a>
 8003342:	4b88      	ldr	r3, [pc, #544]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003344:	689b      	ldr	r3, [r3, #8]
 8003346:	f003 030c 	and.w	r3, r3, #12
 800334a:	2b04      	cmp	r3, #4
 800334c:	d00c      	beq.n	8003368 <HAL_RCC_OscConfig+0x44>
 800334e:	4b85      	ldr	r3, [pc, #532]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003350:	689b      	ldr	r3, [r3, #8]
 8003352:	f003 030c 	and.w	r3, r3, #12
 8003356:	2b08      	cmp	r3, #8
 8003358:	d112      	bne.n	8003380 <HAL_RCC_OscConfig+0x5c>
 800335a:	4b82      	ldr	r3, [pc, #520]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 800335c:	685b      	ldr	r3, [r3, #4]
 800335e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003362:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8003366:	d10b      	bne.n	8003380 <HAL_RCC_OscConfig+0x5c>
 8003368:	4b7e      	ldr	r3, [pc, #504]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003370:	2b00      	cmp	r3, #0
 8003372:	d05b      	beq.n	800342c <HAL_RCC_OscConfig+0x108>
 8003374:	687b      	ldr	r3, [r7, #4]
 8003376:	685b      	ldr	r3, [r3, #4]
 8003378:	2b00      	cmp	r3, #0
 800337a:	d157      	bne.n	800342c <HAL_RCC_OscConfig+0x108>
 800337c:	2301      	movs	r3, #1
 800337e:	e242      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 8003380:	687b      	ldr	r3, [r7, #4]
 8003382:	685b      	ldr	r3, [r3, #4]
 8003384:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8003388:	d106      	bne.n	8003398 <HAL_RCC_OscConfig+0x74>
 800338a:	4b76      	ldr	r3, [pc, #472]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 800338c:	681b      	ldr	r3, [r3, #0]
 800338e:	4a75      	ldr	r2, [pc, #468]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003390:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8003394:	6013      	str	r3, [r2, #0]
 8003396:	e01d      	b.n	80033d4 <HAL_RCC_OscConfig+0xb0>
 8003398:	687b      	ldr	r3, [r7, #4]
 800339a:	685b      	ldr	r3, [r3, #4]
 800339c:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80033a0:	d10c      	bne.n	80033bc <HAL_RCC_OscConfig+0x98>
 80033a2:	4b70      	ldr	r3, [pc, #448]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033a4:	681b      	ldr	r3, [r3, #0]
 80033a6:	4a6f      	ldr	r2, [pc, #444]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033a8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80033ac:	6013      	str	r3, [r2, #0]
 80033ae:	4b6d      	ldr	r3, [pc, #436]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	4a6c      	ldr	r2, [pc, #432]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80033b8:	6013      	str	r3, [r2, #0]
 80033ba:	e00b      	b.n	80033d4 <HAL_RCC_OscConfig+0xb0>
 80033bc:	4b69      	ldr	r3, [pc, #420]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033be:	681b      	ldr	r3, [r3, #0]
 80033c0:	4a68      	ldr	r2, [pc, #416]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033c2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80033c6:	6013      	str	r3, [r2, #0]
 80033c8:	4b66      	ldr	r3, [pc, #408]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033ca:	681b      	ldr	r3, [r3, #0]
 80033cc:	4a65      	ldr	r2, [pc, #404]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033ce:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80033d2:	6013      	str	r3, [r2, #0]
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	685b      	ldr	r3, [r3, #4]
 80033d8:	2b00      	cmp	r3, #0
 80033da:	d013      	beq.n	8003404 <HAL_RCC_OscConfig+0xe0>
 80033dc:	f7fe fc62 	bl	8001ca4 <HAL_GetTick>
 80033e0:	6138      	str	r0, [r7, #16]
 80033e2:	e008      	b.n	80033f6 <HAL_RCC_OscConfig+0xd2>
 80033e4:	f7fe fc5e 	bl	8001ca4 <HAL_GetTick>
 80033e8:	4602      	mov	r2, r0
 80033ea:	693b      	ldr	r3, [r7, #16]
 80033ec:	1ad3      	subs	r3, r2, r3
 80033ee:	2b64      	cmp	r3, #100	; 0x64
 80033f0:	d901      	bls.n	80033f6 <HAL_RCC_OscConfig+0xd2>
 80033f2:	2303      	movs	r3, #3
 80033f4:	e207      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 80033f6:	4b5b      	ldr	r3, [pc, #364]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80033f8:	681b      	ldr	r3, [r3, #0]
 80033fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80033fe:	2b00      	cmp	r3, #0
 8003400:	d0f0      	beq.n	80033e4 <HAL_RCC_OscConfig+0xc0>
 8003402:	e014      	b.n	800342e <HAL_RCC_OscConfig+0x10a>
 8003404:	f7fe fc4e 	bl	8001ca4 <HAL_GetTick>
 8003408:	6138      	str	r0, [r7, #16]
 800340a:	e008      	b.n	800341e <HAL_RCC_OscConfig+0xfa>
 800340c:	f7fe fc4a 	bl	8001ca4 <HAL_GetTick>
 8003410:	4602      	mov	r2, r0
 8003412:	693b      	ldr	r3, [r7, #16]
 8003414:	1ad3      	subs	r3, r2, r3
 8003416:	2b64      	cmp	r3, #100	; 0x64
 8003418:	d901      	bls.n	800341e <HAL_RCC_OscConfig+0xfa>
 800341a:	2303      	movs	r3, #3
 800341c:	e1f3      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 800341e:	4b51      	ldr	r3, [pc, #324]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003420:	681b      	ldr	r3, [r3, #0]
 8003422:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8003426:	2b00      	cmp	r3, #0
 8003428:	d1f0      	bne.n	800340c <HAL_RCC_OscConfig+0xe8>
 800342a:	e000      	b.n	800342e <HAL_RCC_OscConfig+0x10a>
 800342c:	bf00      	nop
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	681b      	ldr	r3, [r3, #0]
 8003432:	f003 0302 	and.w	r3, r3, #2
 8003436:	2b00      	cmp	r3, #0
 8003438:	d063      	beq.n	8003502 <HAL_RCC_OscConfig+0x1de>
 800343a:	4b4a      	ldr	r3, [pc, #296]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 800343c:	689b      	ldr	r3, [r3, #8]
 800343e:	f003 030c 	and.w	r3, r3, #12
 8003442:	2b00      	cmp	r3, #0
 8003444:	d00b      	beq.n	800345e <HAL_RCC_OscConfig+0x13a>
 8003446:	4b47      	ldr	r3, [pc, #284]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003448:	689b      	ldr	r3, [r3, #8]
 800344a:	f003 030c 	and.w	r3, r3, #12
 800344e:	2b08      	cmp	r3, #8
 8003450:	d11c      	bne.n	800348c <HAL_RCC_OscConfig+0x168>
 8003452:	4b44      	ldr	r3, [pc, #272]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003454:	685b      	ldr	r3, [r3, #4]
 8003456:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800345a:	2b00      	cmp	r3, #0
 800345c:	d116      	bne.n	800348c <HAL_RCC_OscConfig+0x168>
 800345e:	4b41      	ldr	r3, [pc, #260]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003460:	681b      	ldr	r3, [r3, #0]
 8003462:	f003 0302 	and.w	r3, r3, #2
 8003466:	2b00      	cmp	r3, #0
 8003468:	d005      	beq.n	8003476 <HAL_RCC_OscConfig+0x152>
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	68db      	ldr	r3, [r3, #12]
 800346e:	2b01      	cmp	r3, #1
 8003470:	d001      	beq.n	8003476 <HAL_RCC_OscConfig+0x152>
 8003472:	2301      	movs	r3, #1
 8003474:	e1c7      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 8003476:	4b3b      	ldr	r3, [pc, #236]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003478:	681b      	ldr	r3, [r3, #0]
 800347a:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	691b      	ldr	r3, [r3, #16]
 8003482:	00db      	lsls	r3, r3, #3
 8003484:	4937      	ldr	r1, [pc, #220]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003486:	4313      	orrs	r3, r2
 8003488:	600b      	str	r3, [r1, #0]
 800348a:	e03a      	b.n	8003502 <HAL_RCC_OscConfig+0x1de>
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	68db      	ldr	r3, [r3, #12]
 8003490:	2b00      	cmp	r3, #0
 8003492:	d020      	beq.n	80034d6 <HAL_RCC_OscConfig+0x1b2>
 8003494:	4b34      	ldr	r3, [pc, #208]	; (8003568 <HAL_RCC_OscConfig+0x244>)
 8003496:	2201      	movs	r2, #1
 8003498:	601a      	str	r2, [r3, #0]
 800349a:	f7fe fc03 	bl	8001ca4 <HAL_GetTick>
 800349e:	6138      	str	r0, [r7, #16]
 80034a0:	e008      	b.n	80034b4 <HAL_RCC_OscConfig+0x190>
 80034a2:	f7fe fbff 	bl	8001ca4 <HAL_GetTick>
 80034a6:	4602      	mov	r2, r0
 80034a8:	693b      	ldr	r3, [r7, #16]
 80034aa:	1ad3      	subs	r3, r2, r3
 80034ac:	2b02      	cmp	r3, #2
 80034ae:	d901      	bls.n	80034b4 <HAL_RCC_OscConfig+0x190>
 80034b0:	2303      	movs	r3, #3
 80034b2:	e1a8      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 80034b4:	4b2b      	ldr	r3, [pc, #172]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80034b6:	681b      	ldr	r3, [r3, #0]
 80034b8:	f003 0302 	and.w	r3, r3, #2
 80034bc:	2b00      	cmp	r3, #0
 80034be:	d0f0      	beq.n	80034a2 <HAL_RCC_OscConfig+0x17e>
 80034c0:	4b28      	ldr	r3, [pc, #160]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80034c2:	681b      	ldr	r3, [r3, #0]
 80034c4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	691b      	ldr	r3, [r3, #16]
 80034cc:	00db      	lsls	r3, r3, #3
 80034ce:	4925      	ldr	r1, [pc, #148]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80034d0:	4313      	orrs	r3, r2
 80034d2:	600b      	str	r3, [r1, #0]
 80034d4:	e015      	b.n	8003502 <HAL_RCC_OscConfig+0x1de>
 80034d6:	4b24      	ldr	r3, [pc, #144]	; (8003568 <HAL_RCC_OscConfig+0x244>)
 80034d8:	2200      	movs	r2, #0
 80034da:	601a      	str	r2, [r3, #0]
 80034dc:	f7fe fbe2 	bl	8001ca4 <HAL_GetTick>
 80034e0:	6138      	str	r0, [r7, #16]
 80034e2:	e008      	b.n	80034f6 <HAL_RCC_OscConfig+0x1d2>
 80034e4:	f7fe fbde 	bl	8001ca4 <HAL_GetTick>
 80034e8:	4602      	mov	r2, r0
 80034ea:	693b      	ldr	r3, [r7, #16]
 80034ec:	1ad3      	subs	r3, r2, r3
 80034ee:	2b02      	cmp	r3, #2
 80034f0:	d901      	bls.n	80034f6 <HAL_RCC_OscConfig+0x1d2>
 80034f2:	2303      	movs	r3, #3
 80034f4:	e187      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 80034f6:	4b1b      	ldr	r3, [pc, #108]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 80034f8:	681b      	ldr	r3, [r3, #0]
 80034fa:	f003 0302 	and.w	r3, r3, #2
 80034fe:	2b00      	cmp	r3, #0
 8003500:	d1f0      	bne.n	80034e4 <HAL_RCC_OscConfig+0x1c0>
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	681b      	ldr	r3, [r3, #0]
 8003506:	f003 0308 	and.w	r3, r3, #8
 800350a:	2b00      	cmp	r3, #0
 800350c:	d036      	beq.n	800357c <HAL_RCC_OscConfig+0x258>
 800350e:	687b      	ldr	r3, [r7, #4]
 8003510:	695b      	ldr	r3, [r3, #20]
 8003512:	2b00      	cmp	r3, #0
 8003514:	d016      	beq.n	8003544 <HAL_RCC_OscConfig+0x220>
 8003516:	4b15      	ldr	r3, [pc, #84]	; (800356c <HAL_RCC_OscConfig+0x248>)
 8003518:	2201      	movs	r2, #1
 800351a:	601a      	str	r2, [r3, #0]
 800351c:	f7fe fbc2 	bl	8001ca4 <HAL_GetTick>
 8003520:	6138      	str	r0, [r7, #16]
 8003522:	e008      	b.n	8003536 <HAL_RCC_OscConfig+0x212>
 8003524:	f7fe fbbe 	bl	8001ca4 <HAL_GetTick>
 8003528:	4602      	mov	r2, r0
 800352a:	693b      	ldr	r3, [r7, #16]
 800352c:	1ad3      	subs	r3, r2, r3
 800352e:	2b02      	cmp	r3, #2
 8003530:	d901      	bls.n	8003536 <HAL_RCC_OscConfig+0x212>
 8003532:	2303      	movs	r3, #3
 8003534:	e167      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 8003536:	4b0b      	ldr	r3, [pc, #44]	; (8003564 <HAL_RCC_OscConfig+0x240>)
 8003538:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800353a:	f003 0302 	and.w	r3, r3, #2
 800353e:	2b00      	cmp	r3, #0
 8003540:	d0f0      	beq.n	8003524 <HAL_RCC_OscConfig+0x200>
 8003542:	e01b      	b.n	800357c <HAL_RCC_OscConfig+0x258>
 8003544:	4b09      	ldr	r3, [pc, #36]	; (800356c <HAL_RCC_OscConfig+0x248>)
 8003546:	2200      	movs	r2, #0
 8003548:	601a      	str	r2, [r3, #0]
 800354a:	f7fe fbab 	bl	8001ca4 <HAL_GetTick>
 800354e:	6138      	str	r0, [r7, #16]
 8003550:	e00e      	b.n	8003570 <HAL_RCC_OscConfig+0x24c>
 8003552:	f7fe fba7 	bl	8001ca4 <HAL_GetTick>
 8003556:	4602      	mov	r2, r0
 8003558:	693b      	ldr	r3, [r7, #16]
 800355a:	1ad3      	subs	r3, r2, r3
 800355c:	2b02      	cmp	r3, #2
 800355e:	d907      	bls.n	8003570 <HAL_RCC_OscConfig+0x24c>
 8003560:	2303      	movs	r3, #3
 8003562:	e150      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 8003564:	40023800 	.word	0x40023800
 8003568:	42470000 	.word	0x42470000
 800356c:	42470e80 	.word	0x42470e80
 8003570:	4b88      	ldr	r3, [pc, #544]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003572:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8003574:	f003 0302 	and.w	r3, r3, #2
 8003578:	2b00      	cmp	r3, #0
 800357a:	d1ea      	bne.n	8003552 <HAL_RCC_OscConfig+0x22e>
 800357c:	687b      	ldr	r3, [r7, #4]
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	f003 0304 	and.w	r3, r3, #4
 8003584:	2b00      	cmp	r3, #0
 8003586:	f000 8097 	beq.w	80036b8 <HAL_RCC_OscConfig+0x394>
 800358a:	2300      	movs	r3, #0
 800358c:	75fb      	strb	r3, [r7, #23]
 800358e:	4b81      	ldr	r3, [pc, #516]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003590:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003592:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003596:	2b00      	cmp	r3, #0
 8003598:	d10f      	bne.n	80035ba <HAL_RCC_OscConfig+0x296>
 800359a:	2300      	movs	r3, #0
 800359c:	60bb      	str	r3, [r7, #8]
 800359e:	4b7d      	ldr	r3, [pc, #500]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 80035a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035a2:	4a7c      	ldr	r2, [pc, #496]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 80035a4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80035a8:	6413      	str	r3, [r2, #64]	; 0x40
 80035aa:	4b7a      	ldr	r3, [pc, #488]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 80035ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80035ae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80035b2:	60bb      	str	r3, [r7, #8]
 80035b4:	68bb      	ldr	r3, [r7, #8]
 80035b6:	2301      	movs	r3, #1
 80035b8:	75fb      	strb	r3, [r7, #23]
 80035ba:	4b77      	ldr	r3, [pc, #476]	; (8003798 <HAL_RCC_OscConfig+0x474>)
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80035c2:	2b00      	cmp	r3, #0
 80035c4:	d118      	bne.n	80035f8 <HAL_RCC_OscConfig+0x2d4>
 80035c6:	4b74      	ldr	r3, [pc, #464]	; (8003798 <HAL_RCC_OscConfig+0x474>)
 80035c8:	681b      	ldr	r3, [r3, #0]
 80035ca:	4a73      	ldr	r2, [pc, #460]	; (8003798 <HAL_RCC_OscConfig+0x474>)
 80035cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80035d0:	6013      	str	r3, [r2, #0]
 80035d2:	f7fe fb67 	bl	8001ca4 <HAL_GetTick>
 80035d6:	6138      	str	r0, [r7, #16]
 80035d8:	e008      	b.n	80035ec <HAL_RCC_OscConfig+0x2c8>
 80035da:	f7fe fb63 	bl	8001ca4 <HAL_GetTick>
 80035de:	4602      	mov	r2, r0
 80035e0:	693b      	ldr	r3, [r7, #16]
 80035e2:	1ad3      	subs	r3, r2, r3
 80035e4:	2b02      	cmp	r3, #2
 80035e6:	d901      	bls.n	80035ec <HAL_RCC_OscConfig+0x2c8>
 80035e8:	2303      	movs	r3, #3
 80035ea:	e10c      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 80035ec:	4b6a      	ldr	r3, [pc, #424]	; (8003798 <HAL_RCC_OscConfig+0x474>)
 80035ee:	681b      	ldr	r3, [r3, #0]
 80035f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80035f4:	2b00      	cmp	r3, #0
 80035f6:	d0f0      	beq.n	80035da <HAL_RCC_OscConfig+0x2b6>
 80035f8:	687b      	ldr	r3, [r7, #4]
 80035fa:	689b      	ldr	r3, [r3, #8]
 80035fc:	2b01      	cmp	r3, #1
 80035fe:	d106      	bne.n	800360e <HAL_RCC_OscConfig+0x2ea>
 8003600:	4b64      	ldr	r3, [pc, #400]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003602:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003604:	4a63      	ldr	r2, [pc, #396]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003606:	f043 0301 	orr.w	r3, r3, #1
 800360a:	6713      	str	r3, [r2, #112]	; 0x70
 800360c:	e01c      	b.n	8003648 <HAL_RCC_OscConfig+0x324>
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	689b      	ldr	r3, [r3, #8]
 8003612:	2b05      	cmp	r3, #5
 8003614:	d10c      	bne.n	8003630 <HAL_RCC_OscConfig+0x30c>
 8003616:	4b5f      	ldr	r3, [pc, #380]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003618:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800361a:	4a5e      	ldr	r2, [pc, #376]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 800361c:	f043 0304 	orr.w	r3, r3, #4
 8003620:	6713      	str	r3, [r2, #112]	; 0x70
 8003622:	4b5c      	ldr	r3, [pc, #368]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003624:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003626:	4a5b      	ldr	r2, [pc, #364]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003628:	f043 0301 	orr.w	r3, r3, #1
 800362c:	6713      	str	r3, [r2, #112]	; 0x70
 800362e:	e00b      	b.n	8003648 <HAL_RCC_OscConfig+0x324>
 8003630:	4b58      	ldr	r3, [pc, #352]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003632:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003634:	4a57      	ldr	r2, [pc, #348]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003636:	f023 0301 	bic.w	r3, r3, #1
 800363a:	6713      	str	r3, [r2, #112]	; 0x70
 800363c:	4b55      	ldr	r3, [pc, #340]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 800363e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003640:	4a54      	ldr	r2, [pc, #336]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003642:	f023 0304 	bic.w	r3, r3, #4
 8003646:	6713      	str	r3, [r2, #112]	; 0x70
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	689b      	ldr	r3, [r3, #8]
 800364c:	2b00      	cmp	r3, #0
 800364e:	d015      	beq.n	800367c <HAL_RCC_OscConfig+0x358>
 8003650:	f7fe fb28 	bl	8001ca4 <HAL_GetTick>
 8003654:	6138      	str	r0, [r7, #16]
 8003656:	e00a      	b.n	800366e <HAL_RCC_OscConfig+0x34a>
 8003658:	f7fe fb24 	bl	8001ca4 <HAL_GetTick>
 800365c:	4602      	mov	r2, r0
 800365e:	693b      	ldr	r3, [r7, #16]
 8003660:	1ad3      	subs	r3, r2, r3
 8003662:	f241 3288 	movw	r2, #5000	; 0x1388
 8003666:	4293      	cmp	r3, r2
 8003668:	d901      	bls.n	800366e <HAL_RCC_OscConfig+0x34a>
 800366a:	2303      	movs	r3, #3
 800366c:	e0cb      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 800366e:	4b49      	ldr	r3, [pc, #292]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003670:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003672:	f003 0302 	and.w	r3, r3, #2
 8003676:	2b00      	cmp	r3, #0
 8003678:	d0ee      	beq.n	8003658 <HAL_RCC_OscConfig+0x334>
 800367a:	e014      	b.n	80036a6 <HAL_RCC_OscConfig+0x382>
 800367c:	f7fe fb12 	bl	8001ca4 <HAL_GetTick>
 8003680:	6138      	str	r0, [r7, #16]
 8003682:	e00a      	b.n	800369a <HAL_RCC_OscConfig+0x376>
 8003684:	f7fe fb0e 	bl	8001ca4 <HAL_GetTick>
 8003688:	4602      	mov	r2, r0
 800368a:	693b      	ldr	r3, [r7, #16]
 800368c:	1ad3      	subs	r3, r2, r3
 800368e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003692:	4293      	cmp	r3, r2
 8003694:	d901      	bls.n	800369a <HAL_RCC_OscConfig+0x376>
 8003696:	2303      	movs	r3, #3
 8003698:	e0b5      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 800369a:	4b3e      	ldr	r3, [pc, #248]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 800369c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800369e:	f003 0302 	and.w	r3, r3, #2
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	d1ee      	bne.n	8003684 <HAL_RCC_OscConfig+0x360>
 80036a6:	7dfb      	ldrb	r3, [r7, #23]
 80036a8:	2b01      	cmp	r3, #1
 80036aa:	d105      	bne.n	80036b8 <HAL_RCC_OscConfig+0x394>
 80036ac:	4b39      	ldr	r3, [pc, #228]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 80036ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80036b0:	4a38      	ldr	r2, [pc, #224]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 80036b2:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80036b6:	6413      	str	r3, [r2, #64]	; 0x40
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	699b      	ldr	r3, [r3, #24]
 80036bc:	2b00      	cmp	r3, #0
 80036be:	f000 80a1 	beq.w	8003804 <HAL_RCC_OscConfig+0x4e0>
 80036c2:	4b34      	ldr	r3, [pc, #208]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 80036c4:	689b      	ldr	r3, [r3, #8]
 80036c6:	f003 030c 	and.w	r3, r3, #12
 80036ca:	2b08      	cmp	r3, #8
 80036cc:	d05c      	beq.n	8003788 <HAL_RCC_OscConfig+0x464>
 80036ce:	687b      	ldr	r3, [r7, #4]
 80036d0:	699b      	ldr	r3, [r3, #24]
 80036d2:	2b02      	cmp	r3, #2
 80036d4:	d141      	bne.n	800375a <HAL_RCC_OscConfig+0x436>
 80036d6:	4b31      	ldr	r3, [pc, #196]	; (800379c <HAL_RCC_OscConfig+0x478>)
 80036d8:	2200      	movs	r2, #0
 80036da:	601a      	str	r2, [r3, #0]
 80036dc:	f7fe fae2 	bl	8001ca4 <HAL_GetTick>
 80036e0:	6138      	str	r0, [r7, #16]
 80036e2:	e008      	b.n	80036f6 <HAL_RCC_OscConfig+0x3d2>
 80036e4:	f7fe fade 	bl	8001ca4 <HAL_GetTick>
 80036e8:	4602      	mov	r2, r0
 80036ea:	693b      	ldr	r3, [r7, #16]
 80036ec:	1ad3      	subs	r3, r2, r3
 80036ee:	2b02      	cmp	r3, #2
 80036f0:	d901      	bls.n	80036f6 <HAL_RCC_OscConfig+0x3d2>
 80036f2:	2303      	movs	r3, #3
 80036f4:	e087      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 80036f6:	4b27      	ldr	r3, [pc, #156]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 80036f8:	681b      	ldr	r3, [r3, #0]
 80036fa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80036fe:	2b00      	cmp	r3, #0
 8003700:	d1f0      	bne.n	80036e4 <HAL_RCC_OscConfig+0x3c0>
 8003702:	687b      	ldr	r3, [r7, #4]
 8003704:	69da      	ldr	r2, [r3, #28]
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	6a1b      	ldr	r3, [r3, #32]
 800370a:	431a      	orrs	r2, r3
 800370c:	687b      	ldr	r3, [r7, #4]
 800370e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003710:	019b      	lsls	r3, r3, #6
 8003712:	431a      	orrs	r2, r3
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003718:	085b      	lsrs	r3, r3, #1
 800371a:	3b01      	subs	r3, #1
 800371c:	041b      	lsls	r3, r3, #16
 800371e:	431a      	orrs	r2, r3
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003724:	061b      	lsls	r3, r3, #24
 8003726:	491b      	ldr	r1, [pc, #108]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 8003728:	4313      	orrs	r3, r2
 800372a:	604b      	str	r3, [r1, #4]
 800372c:	4b1b      	ldr	r3, [pc, #108]	; (800379c <HAL_RCC_OscConfig+0x478>)
 800372e:	2201      	movs	r2, #1
 8003730:	601a      	str	r2, [r3, #0]
 8003732:	f7fe fab7 	bl	8001ca4 <HAL_GetTick>
 8003736:	6138      	str	r0, [r7, #16]
 8003738:	e008      	b.n	800374c <HAL_RCC_OscConfig+0x428>
 800373a:	f7fe fab3 	bl	8001ca4 <HAL_GetTick>
 800373e:	4602      	mov	r2, r0
 8003740:	693b      	ldr	r3, [r7, #16]
 8003742:	1ad3      	subs	r3, r2, r3
 8003744:	2b02      	cmp	r3, #2
 8003746:	d901      	bls.n	800374c <HAL_RCC_OscConfig+0x428>
 8003748:	2303      	movs	r3, #3
 800374a:	e05c      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 800374c:	4b11      	ldr	r3, [pc, #68]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 800374e:	681b      	ldr	r3, [r3, #0]
 8003750:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003754:	2b00      	cmp	r3, #0
 8003756:	d0f0      	beq.n	800373a <HAL_RCC_OscConfig+0x416>
 8003758:	e054      	b.n	8003804 <HAL_RCC_OscConfig+0x4e0>
 800375a:	4b10      	ldr	r3, [pc, #64]	; (800379c <HAL_RCC_OscConfig+0x478>)
 800375c:	2200      	movs	r2, #0
 800375e:	601a      	str	r2, [r3, #0]
 8003760:	f7fe faa0 	bl	8001ca4 <HAL_GetTick>
 8003764:	6138      	str	r0, [r7, #16]
 8003766:	e008      	b.n	800377a <HAL_RCC_OscConfig+0x456>
 8003768:	f7fe fa9c 	bl	8001ca4 <HAL_GetTick>
 800376c:	4602      	mov	r2, r0
 800376e:	693b      	ldr	r3, [r7, #16]
 8003770:	1ad3      	subs	r3, r2, r3
 8003772:	2b02      	cmp	r3, #2
 8003774:	d901      	bls.n	800377a <HAL_RCC_OscConfig+0x456>
 8003776:	2303      	movs	r3, #3
 8003778:	e045      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 800377a:	4b06      	ldr	r3, [pc, #24]	; (8003794 <HAL_RCC_OscConfig+0x470>)
 800377c:	681b      	ldr	r3, [r3, #0]
 800377e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003782:	2b00      	cmp	r3, #0
 8003784:	d1f0      	bne.n	8003768 <HAL_RCC_OscConfig+0x444>
 8003786:	e03d      	b.n	8003804 <HAL_RCC_OscConfig+0x4e0>
 8003788:	687b      	ldr	r3, [r7, #4]
 800378a:	699b      	ldr	r3, [r3, #24]
 800378c:	2b01      	cmp	r3, #1
 800378e:	d107      	bne.n	80037a0 <HAL_RCC_OscConfig+0x47c>
 8003790:	2301      	movs	r3, #1
 8003792:	e038      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 8003794:	40023800 	.word	0x40023800
 8003798:	40007000 	.word	0x40007000
 800379c:	42470060 	.word	0x42470060
 80037a0:	4b1b      	ldr	r3, [pc, #108]	; (8003810 <HAL_RCC_OscConfig+0x4ec>)
 80037a2:	685b      	ldr	r3, [r3, #4]
 80037a4:	60fb      	str	r3, [r7, #12]
 80037a6:	687b      	ldr	r3, [r7, #4]
 80037a8:	699b      	ldr	r3, [r3, #24]
 80037aa:	2b01      	cmp	r3, #1
 80037ac:	d028      	beq.n	8003800 <HAL_RCC_OscConfig+0x4dc>
 80037ae:	68fb      	ldr	r3, [r7, #12]
 80037b0:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	69db      	ldr	r3, [r3, #28]
 80037b8:	429a      	cmp	r2, r3
 80037ba:	d121      	bne.n	8003800 <HAL_RCC_OscConfig+0x4dc>
 80037bc:	68fb      	ldr	r3, [r7, #12]
 80037be:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	6a1b      	ldr	r3, [r3, #32]
 80037c6:	429a      	cmp	r2, r3
 80037c8:	d11a      	bne.n	8003800 <HAL_RCC_OscConfig+0x4dc>
 80037ca:	68fa      	ldr	r2, [r7, #12]
 80037cc:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80037d0:	4013      	ands	r3, r2
 80037d2:	687a      	ldr	r2, [r7, #4]
 80037d4:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80037d6:	0192      	lsls	r2, r2, #6
 80037d8:	4293      	cmp	r3, r2
 80037da:	d111      	bne.n	8003800 <HAL_RCC_OscConfig+0x4dc>
 80037dc:	68fb      	ldr	r3, [r7, #12]
 80037de:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80037e2:	687b      	ldr	r3, [r7, #4]
 80037e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80037e6:	085b      	lsrs	r3, r3, #1
 80037e8:	3b01      	subs	r3, #1
 80037ea:	041b      	lsls	r3, r3, #16
 80037ec:	429a      	cmp	r2, r3
 80037ee:	d107      	bne.n	8003800 <HAL_RCC_OscConfig+0x4dc>
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80037fa:	061b      	lsls	r3, r3, #24
 80037fc:	429a      	cmp	r2, r3
 80037fe:	d001      	beq.n	8003804 <HAL_RCC_OscConfig+0x4e0>
 8003800:	2301      	movs	r3, #1
 8003802:	e000      	b.n	8003806 <HAL_RCC_OscConfig+0x4e2>
 8003804:	2300      	movs	r3, #0
 8003806:	4618      	mov	r0, r3
 8003808:	3718      	adds	r7, #24
 800380a:	46bd      	mov	sp, r7
 800380c:	bd80      	pop	{r7, pc}
 800380e:	bf00      	nop
 8003810:	40023800 	.word	0x40023800

08003814 <HAL_RCC_ClockConfig>:
 8003814:	b580      	push	{r7, lr}
 8003816:	b084      	sub	sp, #16
 8003818:	af00      	add	r7, sp, #0
 800381a:	6078      	str	r0, [r7, #4]
 800381c:	6039      	str	r1, [r7, #0]
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	2b00      	cmp	r3, #0
 8003822:	d101      	bne.n	8003828 <HAL_RCC_ClockConfig+0x14>
 8003824:	2301      	movs	r3, #1
 8003826:	e0cc      	b.n	80039c2 <HAL_RCC_ClockConfig+0x1ae>
 8003828:	4b68      	ldr	r3, [pc, #416]	; (80039cc <HAL_RCC_ClockConfig+0x1b8>)
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	f003 030f 	and.w	r3, r3, #15
 8003830:	683a      	ldr	r2, [r7, #0]
 8003832:	429a      	cmp	r2, r3
 8003834:	d90c      	bls.n	8003850 <HAL_RCC_ClockConfig+0x3c>
 8003836:	4b65      	ldr	r3, [pc, #404]	; (80039cc <HAL_RCC_ClockConfig+0x1b8>)
 8003838:	683a      	ldr	r2, [r7, #0]
 800383a:	b2d2      	uxtb	r2, r2
 800383c:	701a      	strb	r2, [r3, #0]
 800383e:	4b63      	ldr	r3, [pc, #396]	; (80039cc <HAL_RCC_ClockConfig+0x1b8>)
 8003840:	681b      	ldr	r3, [r3, #0]
 8003842:	f003 030f 	and.w	r3, r3, #15
 8003846:	683a      	ldr	r2, [r7, #0]
 8003848:	429a      	cmp	r2, r3
 800384a:	d001      	beq.n	8003850 <HAL_RCC_ClockConfig+0x3c>
 800384c:	2301      	movs	r3, #1
 800384e:	e0b8      	b.n	80039c2 <HAL_RCC_ClockConfig+0x1ae>
 8003850:	687b      	ldr	r3, [r7, #4]
 8003852:	681b      	ldr	r3, [r3, #0]
 8003854:	f003 0302 	and.w	r3, r3, #2
 8003858:	2b00      	cmp	r3, #0
 800385a:	d020      	beq.n	800389e <HAL_RCC_ClockConfig+0x8a>
 800385c:	687b      	ldr	r3, [r7, #4]
 800385e:	681b      	ldr	r3, [r3, #0]
 8003860:	f003 0304 	and.w	r3, r3, #4
 8003864:	2b00      	cmp	r3, #0
 8003866:	d005      	beq.n	8003874 <HAL_RCC_ClockConfig+0x60>
 8003868:	4b59      	ldr	r3, [pc, #356]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 800386a:	689b      	ldr	r3, [r3, #8]
 800386c:	4a58      	ldr	r2, [pc, #352]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 800386e:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8003872:	6093      	str	r3, [r2, #8]
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	681b      	ldr	r3, [r3, #0]
 8003878:	f003 0308 	and.w	r3, r3, #8
 800387c:	2b00      	cmp	r3, #0
 800387e:	d005      	beq.n	800388c <HAL_RCC_ClockConfig+0x78>
 8003880:	4b53      	ldr	r3, [pc, #332]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 8003882:	689b      	ldr	r3, [r3, #8]
 8003884:	4a52      	ldr	r2, [pc, #328]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 8003886:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 800388a:	6093      	str	r3, [r2, #8]
 800388c:	4b50      	ldr	r3, [pc, #320]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 800388e:	689b      	ldr	r3, [r3, #8]
 8003890:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	689b      	ldr	r3, [r3, #8]
 8003898:	494d      	ldr	r1, [pc, #308]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 800389a:	4313      	orrs	r3, r2
 800389c:	608b      	str	r3, [r1, #8]
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	681b      	ldr	r3, [r3, #0]
 80038a2:	f003 0301 	and.w	r3, r3, #1
 80038a6:	2b00      	cmp	r3, #0
 80038a8:	d044      	beq.n	8003934 <HAL_RCC_ClockConfig+0x120>
 80038aa:	687b      	ldr	r3, [r7, #4]
 80038ac:	685b      	ldr	r3, [r3, #4]
 80038ae:	2b01      	cmp	r3, #1
 80038b0:	d107      	bne.n	80038c2 <HAL_RCC_ClockConfig+0xae>
 80038b2:	4b47      	ldr	r3, [pc, #284]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 80038b4:	681b      	ldr	r3, [r3, #0]
 80038b6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80038ba:	2b00      	cmp	r3, #0
 80038bc:	d119      	bne.n	80038f2 <HAL_RCC_ClockConfig+0xde>
 80038be:	2301      	movs	r3, #1
 80038c0:	e07f      	b.n	80039c2 <HAL_RCC_ClockConfig+0x1ae>
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	685b      	ldr	r3, [r3, #4]
 80038c6:	2b02      	cmp	r3, #2
 80038c8:	d003      	beq.n	80038d2 <HAL_RCC_ClockConfig+0xbe>
 80038ca:	687b      	ldr	r3, [r7, #4]
 80038cc:	685b      	ldr	r3, [r3, #4]
 80038ce:	2b03      	cmp	r3, #3
 80038d0:	d107      	bne.n	80038e2 <HAL_RCC_ClockConfig+0xce>
 80038d2:	4b3f      	ldr	r3, [pc, #252]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80038da:	2b00      	cmp	r3, #0
 80038dc:	d109      	bne.n	80038f2 <HAL_RCC_ClockConfig+0xde>
 80038de:	2301      	movs	r3, #1
 80038e0:	e06f      	b.n	80039c2 <HAL_RCC_ClockConfig+0x1ae>
 80038e2:	4b3b      	ldr	r3, [pc, #236]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 80038e4:	681b      	ldr	r3, [r3, #0]
 80038e6:	f003 0302 	and.w	r3, r3, #2
 80038ea:	2b00      	cmp	r3, #0
 80038ec:	d101      	bne.n	80038f2 <HAL_RCC_ClockConfig+0xde>
 80038ee:	2301      	movs	r3, #1
 80038f0:	e067      	b.n	80039c2 <HAL_RCC_ClockConfig+0x1ae>
 80038f2:	4b37      	ldr	r3, [pc, #220]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 80038f4:	689b      	ldr	r3, [r3, #8]
 80038f6:	f023 0203 	bic.w	r2, r3, #3
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	685b      	ldr	r3, [r3, #4]
 80038fe:	4934      	ldr	r1, [pc, #208]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 8003900:	4313      	orrs	r3, r2
 8003902:	608b      	str	r3, [r1, #8]
 8003904:	f7fe f9ce 	bl	8001ca4 <HAL_GetTick>
 8003908:	60f8      	str	r0, [r7, #12]
 800390a:	e00a      	b.n	8003922 <HAL_RCC_ClockConfig+0x10e>
 800390c:	f7fe f9ca 	bl	8001ca4 <HAL_GetTick>
 8003910:	4602      	mov	r2, r0
 8003912:	68fb      	ldr	r3, [r7, #12]
 8003914:	1ad3      	subs	r3, r2, r3
 8003916:	f241 3288 	movw	r2, #5000	; 0x1388
 800391a:	4293      	cmp	r3, r2
 800391c:	d901      	bls.n	8003922 <HAL_RCC_ClockConfig+0x10e>
 800391e:	2303      	movs	r3, #3
 8003920:	e04f      	b.n	80039c2 <HAL_RCC_ClockConfig+0x1ae>
 8003922:	4b2b      	ldr	r3, [pc, #172]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 8003924:	689b      	ldr	r3, [r3, #8]
 8003926:	f003 020c 	and.w	r2, r3, #12
 800392a:	687b      	ldr	r3, [r7, #4]
 800392c:	685b      	ldr	r3, [r3, #4]
 800392e:	009b      	lsls	r3, r3, #2
 8003930:	429a      	cmp	r2, r3
 8003932:	d1eb      	bne.n	800390c <HAL_RCC_ClockConfig+0xf8>
 8003934:	4b25      	ldr	r3, [pc, #148]	; (80039cc <HAL_RCC_ClockConfig+0x1b8>)
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	f003 030f 	and.w	r3, r3, #15
 800393c:	683a      	ldr	r2, [r7, #0]
 800393e:	429a      	cmp	r2, r3
 8003940:	d20c      	bcs.n	800395c <HAL_RCC_ClockConfig+0x148>
 8003942:	4b22      	ldr	r3, [pc, #136]	; (80039cc <HAL_RCC_ClockConfig+0x1b8>)
 8003944:	683a      	ldr	r2, [r7, #0]
 8003946:	b2d2      	uxtb	r2, r2
 8003948:	701a      	strb	r2, [r3, #0]
 800394a:	4b20      	ldr	r3, [pc, #128]	; (80039cc <HAL_RCC_ClockConfig+0x1b8>)
 800394c:	681b      	ldr	r3, [r3, #0]
 800394e:	f003 030f 	and.w	r3, r3, #15
 8003952:	683a      	ldr	r2, [r7, #0]
 8003954:	429a      	cmp	r2, r3
 8003956:	d001      	beq.n	800395c <HAL_RCC_ClockConfig+0x148>
 8003958:	2301      	movs	r3, #1
 800395a:	e032      	b.n	80039c2 <HAL_RCC_ClockConfig+0x1ae>
 800395c:	687b      	ldr	r3, [r7, #4]
 800395e:	681b      	ldr	r3, [r3, #0]
 8003960:	f003 0304 	and.w	r3, r3, #4
 8003964:	2b00      	cmp	r3, #0
 8003966:	d008      	beq.n	800397a <HAL_RCC_ClockConfig+0x166>
 8003968:	4b19      	ldr	r3, [pc, #100]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 800396a:	689b      	ldr	r3, [r3, #8]
 800396c:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003970:	687b      	ldr	r3, [r7, #4]
 8003972:	68db      	ldr	r3, [r3, #12]
 8003974:	4916      	ldr	r1, [pc, #88]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 8003976:	4313      	orrs	r3, r2
 8003978:	608b      	str	r3, [r1, #8]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	681b      	ldr	r3, [r3, #0]
 800397e:	f003 0308 	and.w	r3, r3, #8
 8003982:	2b00      	cmp	r3, #0
 8003984:	d009      	beq.n	800399a <HAL_RCC_ClockConfig+0x186>
 8003986:	4b12      	ldr	r3, [pc, #72]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 8003988:	689b      	ldr	r3, [r3, #8]
 800398a:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 800398e:	687b      	ldr	r3, [r7, #4]
 8003990:	691b      	ldr	r3, [r3, #16]
 8003992:	00db      	lsls	r3, r3, #3
 8003994:	490e      	ldr	r1, [pc, #56]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 8003996:	4313      	orrs	r3, r2
 8003998:	608b      	str	r3, [r1, #8]
 800399a:	f000 f821 	bl	80039e0 <HAL_RCC_GetSysClockFreq>
 800399e:	4602      	mov	r2, r0
 80039a0:	4b0b      	ldr	r3, [pc, #44]	; (80039d0 <HAL_RCC_ClockConfig+0x1bc>)
 80039a2:	689b      	ldr	r3, [r3, #8]
 80039a4:	091b      	lsrs	r3, r3, #4
 80039a6:	f003 030f 	and.w	r3, r3, #15
 80039aa:	490a      	ldr	r1, [pc, #40]	; (80039d4 <HAL_RCC_ClockConfig+0x1c0>)
 80039ac:	5ccb      	ldrb	r3, [r1, r3]
 80039ae:	fa22 f303 	lsr.w	r3, r2, r3
 80039b2:	4a09      	ldr	r2, [pc, #36]	; (80039d8 <HAL_RCC_ClockConfig+0x1c4>)
 80039b4:	6013      	str	r3, [r2, #0]
 80039b6:	4b09      	ldr	r3, [pc, #36]	; (80039dc <HAL_RCC_ClockConfig+0x1c8>)
 80039b8:	681b      	ldr	r3, [r3, #0]
 80039ba:	4618      	mov	r0, r3
 80039bc:	f7fe f92e 	bl	8001c1c <HAL_InitTick>
 80039c0:	2300      	movs	r3, #0
 80039c2:	4618      	mov	r0, r3
 80039c4:	3710      	adds	r7, #16
 80039c6:	46bd      	mov	sp, r7
 80039c8:	bd80      	pop	{r7, pc}
 80039ca:	bf00      	nop
 80039cc:	40023c00 	.word	0x40023c00
 80039d0:	40023800 	.word	0x40023800
 80039d4:	08006de0 	.word	0x08006de0
 80039d8:	20000034 	.word	0x20000034
 80039dc:	20000038 	.word	0x20000038

080039e0 <HAL_RCC_GetSysClockFreq>:
 80039e0:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80039e4:	b094      	sub	sp, #80	; 0x50
 80039e6:	af00      	add	r7, sp, #0
 80039e8:	2300      	movs	r3, #0
 80039ea:	647b      	str	r3, [r7, #68]	; 0x44
 80039ec:	2300      	movs	r3, #0
 80039ee:	64fb      	str	r3, [r7, #76]	; 0x4c
 80039f0:	2300      	movs	r3, #0
 80039f2:	643b      	str	r3, [r7, #64]	; 0x40
 80039f4:	2300      	movs	r3, #0
 80039f6:	64bb      	str	r3, [r7, #72]	; 0x48
 80039f8:	4b79      	ldr	r3, [pc, #484]	; (8003be0 <HAL_RCC_GetSysClockFreq+0x200>)
 80039fa:	689b      	ldr	r3, [r3, #8]
 80039fc:	f003 030c 	and.w	r3, r3, #12
 8003a00:	2b08      	cmp	r3, #8
 8003a02:	d00d      	beq.n	8003a20 <HAL_RCC_GetSysClockFreq+0x40>
 8003a04:	2b08      	cmp	r3, #8
 8003a06:	f200 80e1 	bhi.w	8003bcc <HAL_RCC_GetSysClockFreq+0x1ec>
 8003a0a:	2b00      	cmp	r3, #0
 8003a0c:	d002      	beq.n	8003a14 <HAL_RCC_GetSysClockFreq+0x34>
 8003a0e:	2b04      	cmp	r3, #4
 8003a10:	d003      	beq.n	8003a1a <HAL_RCC_GetSysClockFreq+0x3a>
 8003a12:	e0db      	b.n	8003bcc <HAL_RCC_GetSysClockFreq+0x1ec>
 8003a14:	4b73      	ldr	r3, [pc, #460]	; (8003be4 <HAL_RCC_GetSysClockFreq+0x204>)
 8003a16:	64bb      	str	r3, [r7, #72]	; 0x48
 8003a18:	e0db      	b.n	8003bd2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003a1a:	4b73      	ldr	r3, [pc, #460]	; (8003be8 <HAL_RCC_GetSysClockFreq+0x208>)
 8003a1c:	64bb      	str	r3, [r7, #72]	; 0x48
 8003a1e:	e0d8      	b.n	8003bd2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003a20:	4b6f      	ldr	r3, [pc, #444]	; (8003be0 <HAL_RCC_GetSysClockFreq+0x200>)
 8003a22:	685b      	ldr	r3, [r3, #4]
 8003a24:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003a28:	647b      	str	r3, [r7, #68]	; 0x44
 8003a2a:	4b6d      	ldr	r3, [pc, #436]	; (8003be0 <HAL_RCC_GetSysClockFreq+0x200>)
 8003a2c:	685b      	ldr	r3, [r3, #4]
 8003a2e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003a32:	2b00      	cmp	r3, #0
 8003a34:	d063      	beq.n	8003afe <HAL_RCC_GetSysClockFreq+0x11e>
 8003a36:	4b6a      	ldr	r3, [pc, #424]	; (8003be0 <HAL_RCC_GetSysClockFreq+0x200>)
 8003a38:	685b      	ldr	r3, [r3, #4]
 8003a3a:	099b      	lsrs	r3, r3, #6
 8003a3c:	2200      	movs	r2, #0
 8003a3e:	63bb      	str	r3, [r7, #56]	; 0x38
 8003a40:	63fa      	str	r2, [r7, #60]	; 0x3c
 8003a42:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003a44:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003a48:	633b      	str	r3, [r7, #48]	; 0x30
 8003a4a:	2300      	movs	r3, #0
 8003a4c:	637b      	str	r3, [r7, #52]	; 0x34
 8003a4e:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 8003a52:	4622      	mov	r2, r4
 8003a54:	462b      	mov	r3, r5
 8003a56:	f04f 0000 	mov.w	r0, #0
 8003a5a:	f04f 0100 	mov.w	r1, #0
 8003a5e:	0159      	lsls	r1, r3, #5
 8003a60:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003a64:	0150      	lsls	r0, r2, #5
 8003a66:	4602      	mov	r2, r0
 8003a68:	460b      	mov	r3, r1
 8003a6a:	4621      	mov	r1, r4
 8003a6c:	1a51      	subs	r1, r2, r1
 8003a6e:	6139      	str	r1, [r7, #16]
 8003a70:	4629      	mov	r1, r5
 8003a72:	eb63 0301 	sbc.w	r3, r3, r1
 8003a76:	617b      	str	r3, [r7, #20]
 8003a78:	f04f 0200 	mov.w	r2, #0
 8003a7c:	f04f 0300 	mov.w	r3, #0
 8003a80:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003a84:	4659      	mov	r1, fp
 8003a86:	018b      	lsls	r3, r1, #6
 8003a88:	4651      	mov	r1, sl
 8003a8a:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003a8e:	4651      	mov	r1, sl
 8003a90:	018a      	lsls	r2, r1, #6
 8003a92:	4651      	mov	r1, sl
 8003a94:	ebb2 0801 	subs.w	r8, r2, r1
 8003a98:	4659      	mov	r1, fp
 8003a9a:	eb63 0901 	sbc.w	r9, r3, r1
 8003a9e:	f04f 0200 	mov.w	r2, #0
 8003aa2:	f04f 0300 	mov.w	r3, #0
 8003aa6:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003aaa:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003aae:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003ab2:	4690      	mov	r8, r2
 8003ab4:	4699      	mov	r9, r3
 8003ab6:	4623      	mov	r3, r4
 8003ab8:	eb18 0303 	adds.w	r3, r8, r3
 8003abc:	60bb      	str	r3, [r7, #8]
 8003abe:	462b      	mov	r3, r5
 8003ac0:	eb49 0303 	adc.w	r3, r9, r3
 8003ac4:	60fb      	str	r3, [r7, #12]
 8003ac6:	f04f 0200 	mov.w	r2, #0
 8003aca:	f04f 0300 	mov.w	r3, #0
 8003ace:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003ad2:	4629      	mov	r1, r5
 8003ad4:	024b      	lsls	r3, r1, #9
 8003ad6:	4621      	mov	r1, r4
 8003ad8:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8003adc:	4621      	mov	r1, r4
 8003ade:	024a      	lsls	r2, r1, #9
 8003ae0:	4610      	mov	r0, r2
 8003ae2:	4619      	mov	r1, r3
 8003ae4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003ae6:	2200      	movs	r2, #0
 8003ae8:	62bb      	str	r3, [r7, #40]	; 0x28
 8003aea:	62fa      	str	r2, [r7, #44]	; 0x2c
 8003aec:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8003af0:	f7fc fbe6 	bl	80002c0 <__aeabi_uldivmod>
 8003af4:	4602      	mov	r2, r0
 8003af6:	460b      	mov	r3, r1
 8003af8:	4613      	mov	r3, r2
 8003afa:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003afc:	e058      	b.n	8003bb0 <HAL_RCC_GetSysClockFreq+0x1d0>
 8003afe:	4b38      	ldr	r3, [pc, #224]	; (8003be0 <HAL_RCC_GetSysClockFreq+0x200>)
 8003b00:	685b      	ldr	r3, [r3, #4]
 8003b02:	099b      	lsrs	r3, r3, #6
 8003b04:	2200      	movs	r2, #0
 8003b06:	4618      	mov	r0, r3
 8003b08:	4611      	mov	r1, r2
 8003b0a:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8003b0e:	623b      	str	r3, [r7, #32]
 8003b10:	2300      	movs	r3, #0
 8003b12:	627b      	str	r3, [r7, #36]	; 0x24
 8003b14:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003b18:	4642      	mov	r2, r8
 8003b1a:	464b      	mov	r3, r9
 8003b1c:	f04f 0000 	mov.w	r0, #0
 8003b20:	f04f 0100 	mov.w	r1, #0
 8003b24:	0159      	lsls	r1, r3, #5
 8003b26:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003b2a:	0150      	lsls	r0, r2, #5
 8003b2c:	4602      	mov	r2, r0
 8003b2e:	460b      	mov	r3, r1
 8003b30:	4641      	mov	r1, r8
 8003b32:	ebb2 0a01 	subs.w	sl, r2, r1
 8003b36:	4649      	mov	r1, r9
 8003b38:	eb63 0b01 	sbc.w	fp, r3, r1
 8003b3c:	f04f 0200 	mov.w	r2, #0
 8003b40:	f04f 0300 	mov.w	r3, #0
 8003b44:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003b48:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003b4c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003b50:	ebb2 040a 	subs.w	r4, r2, sl
 8003b54:	eb63 050b 	sbc.w	r5, r3, fp
 8003b58:	f04f 0200 	mov.w	r2, #0
 8003b5c:	f04f 0300 	mov.w	r3, #0
 8003b60:	00eb      	lsls	r3, r5, #3
 8003b62:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003b66:	00e2      	lsls	r2, r4, #3
 8003b68:	4614      	mov	r4, r2
 8003b6a:	461d      	mov	r5, r3
 8003b6c:	4643      	mov	r3, r8
 8003b6e:	18e3      	adds	r3, r4, r3
 8003b70:	603b      	str	r3, [r7, #0]
 8003b72:	464b      	mov	r3, r9
 8003b74:	eb45 0303 	adc.w	r3, r5, r3
 8003b78:	607b      	str	r3, [r7, #4]
 8003b7a:	f04f 0200 	mov.w	r2, #0
 8003b7e:	f04f 0300 	mov.w	r3, #0
 8003b82:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003b86:	4629      	mov	r1, r5
 8003b88:	028b      	lsls	r3, r1, #10
 8003b8a:	4621      	mov	r1, r4
 8003b8c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003b90:	4621      	mov	r1, r4
 8003b92:	028a      	lsls	r2, r1, #10
 8003b94:	4610      	mov	r0, r2
 8003b96:	4619      	mov	r1, r3
 8003b98:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003b9a:	2200      	movs	r2, #0
 8003b9c:	61bb      	str	r3, [r7, #24]
 8003b9e:	61fa      	str	r2, [r7, #28]
 8003ba0:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003ba4:	f7fc fb8c 	bl	80002c0 <__aeabi_uldivmod>
 8003ba8:	4602      	mov	r2, r0
 8003baa:	460b      	mov	r3, r1
 8003bac:	4613      	mov	r3, r2
 8003bae:	64fb      	str	r3, [r7, #76]	; 0x4c
 8003bb0:	4b0b      	ldr	r3, [pc, #44]	; (8003be0 <HAL_RCC_GetSysClockFreq+0x200>)
 8003bb2:	685b      	ldr	r3, [r3, #4]
 8003bb4:	0c1b      	lsrs	r3, r3, #16
 8003bb6:	f003 0303 	and.w	r3, r3, #3
 8003bba:	3301      	adds	r3, #1
 8003bbc:	005b      	lsls	r3, r3, #1
 8003bbe:	643b      	str	r3, [r7, #64]	; 0x40
 8003bc0:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8003bc2:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003bc4:	fbb2 f3f3 	udiv	r3, r2, r3
 8003bc8:	64bb      	str	r3, [r7, #72]	; 0x48
 8003bca:	e002      	b.n	8003bd2 <HAL_RCC_GetSysClockFreq+0x1f2>
 8003bcc:	4b05      	ldr	r3, [pc, #20]	; (8003be4 <HAL_RCC_GetSysClockFreq+0x204>)
 8003bce:	64bb      	str	r3, [r7, #72]	; 0x48
 8003bd0:	bf00      	nop
 8003bd2:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8003bd4:	4618      	mov	r0, r3
 8003bd6:	3750      	adds	r7, #80	; 0x50
 8003bd8:	46bd      	mov	sp, r7
 8003bda:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003bde:	bf00      	nop
 8003be0:	40023800 	.word	0x40023800
 8003be4:	00f42400 	.word	0x00f42400
 8003be8:	007a1200 	.word	0x007a1200

08003bec <HAL_RCC_GetHCLKFreq>:
 8003bec:	b480      	push	{r7}
 8003bee:	af00      	add	r7, sp, #0
 8003bf0:	4b03      	ldr	r3, [pc, #12]	; (8003c00 <HAL_RCC_GetHCLKFreq+0x14>)
 8003bf2:	681b      	ldr	r3, [r3, #0]
 8003bf4:	4618      	mov	r0, r3
 8003bf6:	46bd      	mov	sp, r7
 8003bf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003bfc:	4770      	bx	lr
 8003bfe:	bf00      	nop
 8003c00:	20000034 	.word	0x20000034

08003c04 <HAL_RCC_GetPCLK1Freq>:
 8003c04:	b580      	push	{r7, lr}
 8003c06:	af00      	add	r7, sp, #0
 8003c08:	f7ff fff0 	bl	8003bec <HAL_RCC_GetHCLKFreq>
 8003c0c:	4602      	mov	r2, r0
 8003c0e:	4b05      	ldr	r3, [pc, #20]	; (8003c24 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003c10:	689b      	ldr	r3, [r3, #8]
 8003c12:	0a9b      	lsrs	r3, r3, #10
 8003c14:	f003 0307 	and.w	r3, r3, #7
 8003c18:	4903      	ldr	r1, [pc, #12]	; (8003c28 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003c1a:	5ccb      	ldrb	r3, [r1, r3]
 8003c1c:	fa22 f303 	lsr.w	r3, r2, r3
 8003c20:	4618      	mov	r0, r3
 8003c22:	bd80      	pop	{r7, pc}
 8003c24:	40023800 	.word	0x40023800
 8003c28:	08006df0 	.word	0x08006df0

08003c2c <HAL_RCC_GetPCLK2Freq>:
 8003c2c:	b580      	push	{r7, lr}
 8003c2e:	af00      	add	r7, sp, #0
 8003c30:	f7ff ffdc 	bl	8003bec <HAL_RCC_GetHCLKFreq>
 8003c34:	4602      	mov	r2, r0
 8003c36:	4b05      	ldr	r3, [pc, #20]	; (8003c4c <HAL_RCC_GetPCLK2Freq+0x20>)
 8003c38:	689b      	ldr	r3, [r3, #8]
 8003c3a:	0b5b      	lsrs	r3, r3, #13
 8003c3c:	f003 0307 	and.w	r3, r3, #7
 8003c40:	4903      	ldr	r1, [pc, #12]	; (8003c50 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003c42:	5ccb      	ldrb	r3, [r1, r3]
 8003c44:	fa22 f303 	lsr.w	r3, r2, r3
 8003c48:	4618      	mov	r0, r3
 8003c4a:	bd80      	pop	{r7, pc}
 8003c4c:	40023800 	.word	0x40023800
 8003c50:	08006df0 	.word	0x08006df0

08003c54 <HAL_UART_Init>:
 8003c54:	b580      	push	{r7, lr}
 8003c56:	b082      	sub	sp, #8
 8003c58:	af00      	add	r7, sp, #0
 8003c5a:	6078      	str	r0, [r7, #4]
 8003c5c:	687b      	ldr	r3, [r7, #4]
 8003c5e:	2b00      	cmp	r3, #0
 8003c60:	d101      	bne.n	8003c66 <HAL_UART_Init+0x12>
 8003c62:	2301      	movs	r3, #1
 8003c64:	e042      	b.n	8003cec <HAL_UART_Init+0x98>
 8003c66:	687b      	ldr	r3, [r7, #4]
 8003c68:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003c6c:	b2db      	uxtb	r3, r3
 8003c6e:	2b00      	cmp	r3, #0
 8003c70:	d106      	bne.n	8003c80 <HAL_UART_Init+0x2c>
 8003c72:	687b      	ldr	r3, [r7, #4]
 8003c74:	2200      	movs	r2, #0
 8003c76:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003c7a:	6878      	ldr	r0, [r7, #4]
 8003c7c:	f7fd fc58 	bl	8001530 <HAL_UART_MspInit>
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	2224      	movs	r2, #36	; 0x24
 8003c84:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003c88:	687b      	ldr	r3, [r7, #4]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	68da      	ldr	r2, [r3, #12]
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003c96:	60da      	str	r2, [r3, #12]
 8003c98:	6878      	ldr	r0, [r7, #4]
 8003c9a:	f001 f807 	bl	8004cac <UART_SetConfig>
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	681b      	ldr	r3, [r3, #0]
 8003ca2:	691a      	ldr	r2, [r3, #16]
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	681b      	ldr	r3, [r3, #0]
 8003ca8:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8003cac:	611a      	str	r2, [r3, #16]
 8003cae:	687b      	ldr	r3, [r7, #4]
 8003cb0:	681b      	ldr	r3, [r3, #0]
 8003cb2:	695a      	ldr	r2, [r3, #20]
 8003cb4:	687b      	ldr	r3, [r7, #4]
 8003cb6:	681b      	ldr	r3, [r3, #0]
 8003cb8:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8003cbc:	615a      	str	r2, [r3, #20]
 8003cbe:	687b      	ldr	r3, [r7, #4]
 8003cc0:	681b      	ldr	r3, [r3, #0]
 8003cc2:	68da      	ldr	r2, [r3, #12]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	681b      	ldr	r3, [r3, #0]
 8003cc8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8003ccc:	60da      	str	r2, [r3, #12]
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	2200      	movs	r2, #0
 8003cd2:	645a      	str	r2, [r3, #68]	; 0x44
 8003cd4:	687b      	ldr	r3, [r7, #4]
 8003cd6:	2220      	movs	r2, #32
 8003cd8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003cdc:	687b      	ldr	r3, [r7, #4]
 8003cde:	2220      	movs	r2, #32
 8003ce0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	2200      	movs	r2, #0
 8003ce8:	635a      	str	r2, [r3, #52]	; 0x34
 8003cea:	2300      	movs	r3, #0
 8003cec:	4618      	mov	r0, r3
 8003cee:	3708      	adds	r7, #8
 8003cf0:	46bd      	mov	sp, r7
 8003cf2:	bd80      	pop	{r7, pc}

08003cf4 <HAL_UART_Transmit>:
 8003cf4:	b580      	push	{r7, lr}
 8003cf6:	b08a      	sub	sp, #40	; 0x28
 8003cf8:	af02      	add	r7, sp, #8
 8003cfa:	60f8      	str	r0, [r7, #12]
 8003cfc:	60b9      	str	r1, [r7, #8]
 8003cfe:	603b      	str	r3, [r7, #0]
 8003d00:	4613      	mov	r3, r2
 8003d02:	80fb      	strh	r3, [r7, #6]
 8003d04:	2300      	movs	r3, #0
 8003d06:	617b      	str	r3, [r7, #20]
 8003d08:	68fb      	ldr	r3, [r7, #12]
 8003d0a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003d0e:	b2db      	uxtb	r3, r3
 8003d10:	2b20      	cmp	r3, #32
 8003d12:	d175      	bne.n	8003e00 <HAL_UART_Transmit+0x10c>
 8003d14:	68bb      	ldr	r3, [r7, #8]
 8003d16:	2b00      	cmp	r3, #0
 8003d18:	d002      	beq.n	8003d20 <HAL_UART_Transmit+0x2c>
 8003d1a:	88fb      	ldrh	r3, [r7, #6]
 8003d1c:	2b00      	cmp	r3, #0
 8003d1e:	d101      	bne.n	8003d24 <HAL_UART_Transmit+0x30>
 8003d20:	2301      	movs	r3, #1
 8003d22:	e06e      	b.n	8003e02 <HAL_UART_Transmit+0x10e>
 8003d24:	68fb      	ldr	r3, [r7, #12]
 8003d26:	2200      	movs	r2, #0
 8003d28:	645a      	str	r2, [r3, #68]	; 0x44
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	2221      	movs	r2, #33	; 0x21
 8003d2e:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d32:	f7fd ffb7 	bl	8001ca4 <HAL_GetTick>
 8003d36:	6178      	str	r0, [r7, #20]
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	88fa      	ldrh	r2, [r7, #6]
 8003d3c:	849a      	strh	r2, [r3, #36]	; 0x24
 8003d3e:	68fb      	ldr	r3, [r7, #12]
 8003d40:	88fa      	ldrh	r2, [r7, #6]
 8003d42:	84da      	strh	r2, [r3, #38]	; 0x26
 8003d44:	68fb      	ldr	r3, [r7, #12]
 8003d46:	689b      	ldr	r3, [r3, #8]
 8003d48:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8003d4c:	d108      	bne.n	8003d60 <HAL_UART_Transmit+0x6c>
 8003d4e:	68fb      	ldr	r3, [r7, #12]
 8003d50:	691b      	ldr	r3, [r3, #16]
 8003d52:	2b00      	cmp	r3, #0
 8003d54:	d104      	bne.n	8003d60 <HAL_UART_Transmit+0x6c>
 8003d56:	2300      	movs	r3, #0
 8003d58:	61fb      	str	r3, [r7, #28]
 8003d5a:	68bb      	ldr	r3, [r7, #8]
 8003d5c:	61bb      	str	r3, [r7, #24]
 8003d5e:	e003      	b.n	8003d68 <HAL_UART_Transmit+0x74>
 8003d60:	68bb      	ldr	r3, [r7, #8]
 8003d62:	61fb      	str	r3, [r7, #28]
 8003d64:	2300      	movs	r3, #0
 8003d66:	61bb      	str	r3, [r7, #24]
 8003d68:	e02e      	b.n	8003dc8 <HAL_UART_Transmit+0xd4>
 8003d6a:	683b      	ldr	r3, [r7, #0]
 8003d6c:	9300      	str	r3, [sp, #0]
 8003d6e:	697b      	ldr	r3, [r7, #20]
 8003d70:	2200      	movs	r2, #0
 8003d72:	2180      	movs	r1, #128	; 0x80
 8003d74:	68f8      	ldr	r0, [r7, #12]
 8003d76:	f000 fca5 	bl	80046c4 <UART_WaitOnFlagUntilTimeout>
 8003d7a:	4603      	mov	r3, r0
 8003d7c:	2b00      	cmp	r3, #0
 8003d7e:	d005      	beq.n	8003d8c <HAL_UART_Transmit+0x98>
 8003d80:	68fb      	ldr	r3, [r7, #12]
 8003d82:	2220      	movs	r2, #32
 8003d84:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003d88:	2303      	movs	r3, #3
 8003d8a:	e03a      	b.n	8003e02 <HAL_UART_Transmit+0x10e>
 8003d8c:	69fb      	ldr	r3, [r7, #28]
 8003d8e:	2b00      	cmp	r3, #0
 8003d90:	d10b      	bne.n	8003daa <HAL_UART_Transmit+0xb6>
 8003d92:	69bb      	ldr	r3, [r7, #24]
 8003d94:	881b      	ldrh	r3, [r3, #0]
 8003d96:	461a      	mov	r2, r3
 8003d98:	68fb      	ldr	r3, [r7, #12]
 8003d9a:	681b      	ldr	r3, [r3, #0]
 8003d9c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8003da0:	605a      	str	r2, [r3, #4]
 8003da2:	69bb      	ldr	r3, [r7, #24]
 8003da4:	3302      	adds	r3, #2
 8003da6:	61bb      	str	r3, [r7, #24]
 8003da8:	e007      	b.n	8003dba <HAL_UART_Transmit+0xc6>
 8003daa:	69fb      	ldr	r3, [r7, #28]
 8003dac:	781a      	ldrb	r2, [r3, #0]
 8003dae:	68fb      	ldr	r3, [r7, #12]
 8003db0:	681b      	ldr	r3, [r3, #0]
 8003db2:	605a      	str	r2, [r3, #4]
 8003db4:	69fb      	ldr	r3, [r7, #28]
 8003db6:	3301      	adds	r3, #1
 8003db8:	61fb      	str	r3, [r7, #28]
 8003dba:	68fb      	ldr	r3, [r7, #12]
 8003dbc:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003dbe:	b29b      	uxth	r3, r3
 8003dc0:	3b01      	subs	r3, #1
 8003dc2:	b29a      	uxth	r2, r3
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	84da      	strh	r2, [r3, #38]	; 0x26
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8003dcc:	b29b      	uxth	r3, r3
 8003dce:	2b00      	cmp	r3, #0
 8003dd0:	d1cb      	bne.n	8003d6a <HAL_UART_Transmit+0x76>
 8003dd2:	683b      	ldr	r3, [r7, #0]
 8003dd4:	9300      	str	r3, [sp, #0]
 8003dd6:	697b      	ldr	r3, [r7, #20]
 8003dd8:	2200      	movs	r2, #0
 8003dda:	2140      	movs	r1, #64	; 0x40
 8003ddc:	68f8      	ldr	r0, [r7, #12]
 8003dde:	f000 fc71 	bl	80046c4 <UART_WaitOnFlagUntilTimeout>
 8003de2:	4603      	mov	r3, r0
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	d005      	beq.n	8003df4 <HAL_UART_Transmit+0x100>
 8003de8:	68fb      	ldr	r3, [r7, #12]
 8003dea:	2220      	movs	r2, #32
 8003dec:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003df0:	2303      	movs	r3, #3
 8003df2:	e006      	b.n	8003e02 <HAL_UART_Transmit+0x10e>
 8003df4:	68fb      	ldr	r3, [r7, #12]
 8003df6:	2220      	movs	r2, #32
 8003df8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003dfc:	2300      	movs	r3, #0
 8003dfe:	e000      	b.n	8003e02 <HAL_UART_Transmit+0x10e>
 8003e00:	2302      	movs	r3, #2
 8003e02:	4618      	mov	r0, r3
 8003e04:	3720      	adds	r7, #32
 8003e06:	46bd      	mov	sp, r7
 8003e08:	bd80      	pop	{r7, pc}

08003e0a <HAL_UART_Transmit_IT>:
 8003e0a:	b480      	push	{r7}
 8003e0c:	b085      	sub	sp, #20
 8003e0e:	af00      	add	r7, sp, #0
 8003e10:	60f8      	str	r0, [r7, #12]
 8003e12:	60b9      	str	r1, [r7, #8]
 8003e14:	4613      	mov	r3, r2
 8003e16:	80fb      	strh	r3, [r7, #6]
 8003e18:	68fb      	ldr	r3, [r7, #12]
 8003e1a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003e1e:	b2db      	uxtb	r3, r3
 8003e20:	2b20      	cmp	r3, #32
 8003e22:	d121      	bne.n	8003e68 <HAL_UART_Transmit_IT+0x5e>
 8003e24:	68bb      	ldr	r3, [r7, #8]
 8003e26:	2b00      	cmp	r3, #0
 8003e28:	d002      	beq.n	8003e30 <HAL_UART_Transmit_IT+0x26>
 8003e2a:	88fb      	ldrh	r3, [r7, #6]
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	d101      	bne.n	8003e34 <HAL_UART_Transmit_IT+0x2a>
 8003e30:	2301      	movs	r3, #1
 8003e32:	e01a      	b.n	8003e6a <HAL_UART_Transmit_IT+0x60>
 8003e34:	68fb      	ldr	r3, [r7, #12]
 8003e36:	68ba      	ldr	r2, [r7, #8]
 8003e38:	621a      	str	r2, [r3, #32]
 8003e3a:	68fb      	ldr	r3, [r7, #12]
 8003e3c:	88fa      	ldrh	r2, [r7, #6]
 8003e3e:	849a      	strh	r2, [r3, #36]	; 0x24
 8003e40:	68fb      	ldr	r3, [r7, #12]
 8003e42:	88fa      	ldrh	r2, [r7, #6]
 8003e44:	84da      	strh	r2, [r3, #38]	; 0x26
 8003e46:	68fb      	ldr	r3, [r7, #12]
 8003e48:	2200      	movs	r2, #0
 8003e4a:	645a      	str	r2, [r3, #68]	; 0x44
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	2221      	movs	r2, #33	; 0x21
 8003e50:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	681b      	ldr	r3, [r3, #0]
 8003e58:	68da      	ldr	r2, [r3, #12]
 8003e5a:	68fb      	ldr	r3, [r7, #12]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8003e62:	60da      	str	r2, [r3, #12]
 8003e64:	2300      	movs	r3, #0
 8003e66:	e000      	b.n	8003e6a <HAL_UART_Transmit_IT+0x60>
 8003e68:	2302      	movs	r3, #2
 8003e6a:	4618      	mov	r0, r3
 8003e6c:	3714      	adds	r7, #20
 8003e6e:	46bd      	mov	sp, r7
 8003e70:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e74:	4770      	bx	lr

08003e76 <HAL_UART_Receive_IT>:
 8003e76:	b580      	push	{r7, lr}
 8003e78:	b084      	sub	sp, #16
 8003e7a:	af00      	add	r7, sp, #0
 8003e7c:	60f8      	str	r0, [r7, #12]
 8003e7e:	60b9      	str	r1, [r7, #8]
 8003e80:	4613      	mov	r3, r2
 8003e82:	80fb      	strh	r3, [r7, #6]
 8003e84:	68fb      	ldr	r3, [r7, #12]
 8003e86:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8003e8a:	b2db      	uxtb	r3, r3
 8003e8c:	2b20      	cmp	r3, #32
 8003e8e:	d112      	bne.n	8003eb6 <HAL_UART_Receive_IT+0x40>
 8003e90:	68bb      	ldr	r3, [r7, #8]
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d002      	beq.n	8003e9c <HAL_UART_Receive_IT+0x26>
 8003e96:	88fb      	ldrh	r3, [r7, #6]
 8003e98:	2b00      	cmp	r3, #0
 8003e9a:	d101      	bne.n	8003ea0 <HAL_UART_Receive_IT+0x2a>
 8003e9c:	2301      	movs	r3, #1
 8003e9e:	e00b      	b.n	8003eb8 <HAL_UART_Receive_IT+0x42>
 8003ea0:	68fb      	ldr	r3, [r7, #12]
 8003ea2:	2200      	movs	r2, #0
 8003ea4:	631a      	str	r2, [r3, #48]	; 0x30
 8003ea6:	88fb      	ldrh	r3, [r7, #6]
 8003ea8:	461a      	mov	r2, r3
 8003eaa:	68b9      	ldr	r1, [r7, #8]
 8003eac:	68f8      	ldr	r0, [r7, #12]
 8003eae:	f000 fc62 	bl	8004776 <UART_Start_Receive_IT>
 8003eb2:	4603      	mov	r3, r0
 8003eb4:	e000      	b.n	8003eb8 <HAL_UART_Receive_IT+0x42>
 8003eb6:	2302      	movs	r3, #2
 8003eb8:	4618      	mov	r0, r3
 8003eba:	3710      	adds	r7, #16
 8003ebc:	46bd      	mov	sp, r7
 8003ebe:	bd80      	pop	{r7, pc}

08003ec0 <HAL_UARTEx_ReceiveToIdle_DMA>:
 8003ec0:	b580      	push	{r7, lr}
 8003ec2:	b08c      	sub	sp, #48	; 0x30
 8003ec4:	af00      	add	r7, sp, #0
 8003ec6:	60f8      	str	r0, [r7, #12]
 8003ec8:	60b9      	str	r1, [r7, #8]
 8003eca:	4613      	mov	r3, r2
 8003ecc:	80fb      	strh	r3, [r7, #6]
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8003ed4:	b2db      	uxtb	r3, r3
 8003ed6:	2b20      	cmp	r3, #32
 8003ed8:	d14a      	bne.n	8003f70 <HAL_UARTEx_ReceiveToIdle_DMA+0xb0>
 8003eda:	68bb      	ldr	r3, [r7, #8]
 8003edc:	2b00      	cmp	r3, #0
 8003ede:	d002      	beq.n	8003ee6 <HAL_UARTEx_ReceiveToIdle_DMA+0x26>
 8003ee0:	88fb      	ldrh	r3, [r7, #6]
 8003ee2:	2b00      	cmp	r3, #0
 8003ee4:	d101      	bne.n	8003eea <HAL_UARTEx_ReceiveToIdle_DMA+0x2a>
 8003ee6:	2301      	movs	r3, #1
 8003ee8:	e043      	b.n	8003f72 <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
 8003eea:	68fb      	ldr	r3, [r7, #12]
 8003eec:	2201      	movs	r2, #1
 8003eee:	631a      	str	r2, [r3, #48]	; 0x30
 8003ef0:	68fb      	ldr	r3, [r7, #12]
 8003ef2:	2200      	movs	r2, #0
 8003ef4:	635a      	str	r2, [r3, #52]	; 0x34
 8003ef6:	88fb      	ldrh	r3, [r7, #6]
 8003ef8:	461a      	mov	r2, r3
 8003efa:	68b9      	ldr	r1, [r7, #8]
 8003efc:	68f8      	ldr	r0, [r7, #12]
 8003efe:	f000 fc75 	bl	80047ec <UART_Start_Receive_DMA>
 8003f02:	4603      	mov	r3, r0
 8003f04:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8003f08:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8003f0c:	2b00      	cmp	r3, #0
 8003f0e:	d12c      	bne.n	8003f6a <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
 8003f10:	68fb      	ldr	r3, [r7, #12]
 8003f12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003f14:	2b01      	cmp	r3, #1
 8003f16:	d125      	bne.n	8003f64 <HAL_UARTEx_ReceiveToIdle_DMA+0xa4>
 8003f18:	2300      	movs	r3, #0
 8003f1a:	613b      	str	r3, [r7, #16]
 8003f1c:	68fb      	ldr	r3, [r7, #12]
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	681b      	ldr	r3, [r3, #0]
 8003f22:	613b      	str	r3, [r7, #16]
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	681b      	ldr	r3, [r3, #0]
 8003f28:	685b      	ldr	r3, [r3, #4]
 8003f2a:	613b      	str	r3, [r7, #16]
 8003f2c:	693b      	ldr	r3, [r7, #16]
 8003f2e:	68fb      	ldr	r3, [r7, #12]
 8003f30:	681b      	ldr	r3, [r3, #0]
 8003f32:	330c      	adds	r3, #12
 8003f34:	61bb      	str	r3, [r7, #24]
 8003f36:	69bb      	ldr	r3, [r7, #24]
 8003f38:	e853 3f00 	ldrex	r3, [r3]
 8003f3c:	617b      	str	r3, [r7, #20]
 8003f3e:	697b      	ldr	r3, [r7, #20]
 8003f40:	f043 0310 	orr.w	r3, r3, #16
 8003f44:	62bb      	str	r3, [r7, #40]	; 0x28
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	681b      	ldr	r3, [r3, #0]
 8003f4a:	330c      	adds	r3, #12
 8003f4c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003f4e:	627a      	str	r2, [r7, #36]	; 0x24
 8003f50:	623b      	str	r3, [r7, #32]
 8003f52:	6a39      	ldr	r1, [r7, #32]
 8003f54:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003f56:	e841 2300 	strex	r3, r2, [r1]
 8003f5a:	61fb      	str	r3, [r7, #28]
 8003f5c:	69fb      	ldr	r3, [r7, #28]
 8003f5e:	2b00      	cmp	r3, #0
 8003f60:	d1e5      	bne.n	8003f2e <HAL_UARTEx_ReceiveToIdle_DMA+0x6e>
 8003f62:	e002      	b.n	8003f6a <HAL_UARTEx_ReceiveToIdle_DMA+0xaa>
 8003f64:	2301      	movs	r3, #1
 8003f66:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
 8003f6a:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
 8003f6e:	e000      	b.n	8003f72 <HAL_UARTEx_ReceiveToIdle_DMA+0xb2>
 8003f70:	2302      	movs	r3, #2
 8003f72:	4618      	mov	r0, r3
 8003f74:	3730      	adds	r7, #48	; 0x30
 8003f76:	46bd      	mov	sp, r7
 8003f78:	bd80      	pop	{r7, pc}
	...

08003f7c <HAL_UART_IRQHandler>:
 8003f7c:	b580      	push	{r7, lr}
 8003f7e:	b0ba      	sub	sp, #232	; 0xe8
 8003f80:	af00      	add	r7, sp, #0
 8003f82:	6078      	str	r0, [r7, #4]
 8003f84:	687b      	ldr	r3, [r7, #4]
 8003f86:	681b      	ldr	r3, [r3, #0]
 8003f88:	681b      	ldr	r3, [r3, #0]
 8003f8a:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8003f8e:	687b      	ldr	r3, [r7, #4]
 8003f90:	681b      	ldr	r3, [r3, #0]
 8003f92:	68db      	ldr	r3, [r3, #12]
 8003f94:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	695b      	ldr	r3, [r3, #20]
 8003f9e:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 8003fa2:	2300      	movs	r3, #0
 8003fa4:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003fa8:	2300      	movs	r3, #0
 8003faa:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8003fae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003fb2:	f003 030f 	and.w	r3, r3, #15
 8003fb6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8003fba:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8003fbe:	2b00      	cmp	r3, #0
 8003fc0:	d10f      	bne.n	8003fe2 <HAL_UART_IRQHandler+0x66>
 8003fc2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8003fc6:	f003 0320 	and.w	r3, r3, #32
 8003fca:	2b00      	cmp	r3, #0
 8003fcc:	d009      	beq.n	8003fe2 <HAL_UART_IRQHandler+0x66>
 8003fce:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003fd2:	f003 0320 	and.w	r3, r3, #32
 8003fd6:	2b00      	cmp	r3, #0
 8003fd8:	d003      	beq.n	8003fe2 <HAL_UART_IRQHandler+0x66>
 8003fda:	6878      	ldr	r0, [r7, #4]
 8003fdc:	f000 fda7 	bl	8004b2e <UART_Receive_IT>
 8003fe0:	e25b      	b.n	800449a <HAL_UART_IRQHandler+0x51e>
 8003fe2:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8003fe6:	2b00      	cmp	r3, #0
 8003fe8:	f000 80de 	beq.w	80041a8 <HAL_UART_IRQHandler+0x22c>
 8003fec:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8003ff0:	f003 0301 	and.w	r3, r3, #1
 8003ff4:	2b00      	cmp	r3, #0
 8003ff6:	d106      	bne.n	8004006 <HAL_UART_IRQHandler+0x8a>
 8003ff8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8003ffc:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8004000:	2b00      	cmp	r3, #0
 8004002:	f000 80d1 	beq.w	80041a8 <HAL_UART_IRQHandler+0x22c>
 8004006:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800400a:	f003 0301 	and.w	r3, r3, #1
 800400e:	2b00      	cmp	r3, #0
 8004010:	d00b      	beq.n	800402a <HAL_UART_IRQHandler+0xae>
 8004012:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004016:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800401a:	2b00      	cmp	r3, #0
 800401c:	d005      	beq.n	800402a <HAL_UART_IRQHandler+0xae>
 800401e:	687b      	ldr	r3, [r7, #4]
 8004020:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004022:	f043 0201 	orr.w	r2, r3, #1
 8004026:	687b      	ldr	r3, [r7, #4]
 8004028:	645a      	str	r2, [r3, #68]	; 0x44
 800402a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800402e:	f003 0304 	and.w	r3, r3, #4
 8004032:	2b00      	cmp	r3, #0
 8004034:	d00b      	beq.n	800404e <HAL_UART_IRQHandler+0xd2>
 8004036:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800403a:	f003 0301 	and.w	r3, r3, #1
 800403e:	2b00      	cmp	r3, #0
 8004040:	d005      	beq.n	800404e <HAL_UART_IRQHandler+0xd2>
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004046:	f043 0202 	orr.w	r2, r3, #2
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	645a      	str	r2, [r3, #68]	; 0x44
 800404e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004052:	f003 0302 	and.w	r3, r3, #2
 8004056:	2b00      	cmp	r3, #0
 8004058:	d00b      	beq.n	8004072 <HAL_UART_IRQHandler+0xf6>
 800405a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800405e:	f003 0301 	and.w	r3, r3, #1
 8004062:	2b00      	cmp	r3, #0
 8004064:	d005      	beq.n	8004072 <HAL_UART_IRQHandler+0xf6>
 8004066:	687b      	ldr	r3, [r7, #4]
 8004068:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800406a:	f043 0204 	orr.w	r2, r3, #4
 800406e:	687b      	ldr	r3, [r7, #4]
 8004070:	645a      	str	r2, [r3, #68]	; 0x44
 8004072:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004076:	f003 0308 	and.w	r3, r3, #8
 800407a:	2b00      	cmp	r3, #0
 800407c:	d011      	beq.n	80040a2 <HAL_UART_IRQHandler+0x126>
 800407e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004082:	f003 0320 	and.w	r3, r3, #32
 8004086:	2b00      	cmp	r3, #0
 8004088:	d105      	bne.n	8004096 <HAL_UART_IRQHandler+0x11a>
 800408a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800408e:	f003 0301 	and.w	r3, r3, #1
 8004092:	2b00      	cmp	r3, #0
 8004094:	d005      	beq.n	80040a2 <HAL_UART_IRQHandler+0x126>
 8004096:	687b      	ldr	r3, [r7, #4]
 8004098:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800409a:	f043 0208 	orr.w	r2, r3, #8
 800409e:	687b      	ldr	r3, [r7, #4]
 80040a0:	645a      	str	r2, [r3, #68]	; 0x44
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040a6:	2b00      	cmp	r3, #0
 80040a8:	f000 81f2 	beq.w	8004490 <HAL_UART_IRQHandler+0x514>
 80040ac:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80040b0:	f003 0320 	and.w	r3, r3, #32
 80040b4:	2b00      	cmp	r3, #0
 80040b6:	d008      	beq.n	80040ca <HAL_UART_IRQHandler+0x14e>
 80040b8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80040bc:	f003 0320 	and.w	r3, r3, #32
 80040c0:	2b00      	cmp	r3, #0
 80040c2:	d002      	beq.n	80040ca <HAL_UART_IRQHandler+0x14e>
 80040c4:	6878      	ldr	r0, [r7, #4]
 80040c6:	f000 fd32 	bl	8004b2e <UART_Receive_IT>
 80040ca:	687b      	ldr	r3, [r7, #4]
 80040cc:	681b      	ldr	r3, [r3, #0]
 80040ce:	695b      	ldr	r3, [r3, #20]
 80040d0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80040d4:	2b40      	cmp	r3, #64	; 0x40
 80040d6:	bf0c      	ite	eq
 80040d8:	2301      	moveq	r3, #1
 80040da:	2300      	movne	r3, #0
 80040dc:	b2db      	uxtb	r3, r3
 80040de:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80040e6:	f003 0308 	and.w	r3, r3, #8
 80040ea:	2b00      	cmp	r3, #0
 80040ec:	d103      	bne.n	80040f6 <HAL_UART_IRQHandler+0x17a>
 80040ee:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	d04f      	beq.n	8004196 <HAL_UART_IRQHandler+0x21a>
 80040f6:	6878      	ldr	r0, [r7, #4]
 80040f8:	f000 fc3a 	bl	8004970 <UART_EndRxTransfer>
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	695b      	ldr	r3, [r3, #20]
 8004102:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004106:	2b40      	cmp	r3, #64	; 0x40
 8004108:	d141      	bne.n	800418e <HAL_UART_IRQHandler+0x212>
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	681b      	ldr	r3, [r3, #0]
 800410e:	3314      	adds	r3, #20
 8004110:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8004114:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8004118:	e853 3f00 	ldrex	r3, [r3]
 800411c:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004120:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8004124:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004128:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	681b      	ldr	r3, [r3, #0]
 8004130:	3314      	adds	r3, #20
 8004132:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8004136:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800413a:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800413e:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8004142:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8004146:	e841 2300 	strex	r3, r2, [r1]
 800414a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800414e:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8004152:	2b00      	cmp	r3, #0
 8004154:	d1d9      	bne.n	800410a <HAL_UART_IRQHandler+0x18e>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800415a:	2b00      	cmp	r3, #0
 800415c:	d013      	beq.n	8004186 <HAL_UART_IRQHandler+0x20a>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004162:	4a7e      	ldr	r2, [pc, #504]	; (800435c <HAL_UART_IRQHandler+0x3e0>)
 8004164:	651a      	str	r2, [r3, #80]	; 0x50
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800416a:	4618      	mov	r0, r3
 800416c:	f7fe f852 	bl	8002214 <HAL_DMA_Abort_IT>
 8004170:	4603      	mov	r3, r0
 8004172:	2b00      	cmp	r3, #0
 8004174:	d016      	beq.n	80041a4 <HAL_UART_IRQHandler+0x228>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800417a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800417c:	687a      	ldr	r2, [r7, #4]
 800417e:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 8004180:	4610      	mov	r0, r2
 8004182:	4798      	blx	r3
 8004184:	e00e      	b.n	80041a4 <HAL_UART_IRQHandler+0x228>
 8004186:	6878      	ldr	r0, [r7, #4]
 8004188:	f000 f994 	bl	80044b4 <HAL_UART_ErrorCallback>
 800418c:	e00a      	b.n	80041a4 <HAL_UART_IRQHandler+0x228>
 800418e:	6878      	ldr	r0, [r7, #4]
 8004190:	f000 f990 	bl	80044b4 <HAL_UART_ErrorCallback>
 8004194:	e006      	b.n	80041a4 <HAL_UART_IRQHandler+0x228>
 8004196:	6878      	ldr	r0, [r7, #4]
 8004198:	f000 f98c 	bl	80044b4 <HAL_UART_ErrorCallback>
 800419c:	687b      	ldr	r3, [r7, #4]
 800419e:	2200      	movs	r2, #0
 80041a0:	645a      	str	r2, [r3, #68]	; 0x44
 80041a2:	e175      	b.n	8004490 <HAL_UART_IRQHandler+0x514>
 80041a4:	bf00      	nop
 80041a6:	e173      	b.n	8004490 <HAL_UART_IRQHandler+0x514>
 80041a8:	687b      	ldr	r3, [r7, #4]
 80041aa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80041ac:	2b01      	cmp	r3, #1
 80041ae:	f040 814f 	bne.w	8004450 <HAL_UART_IRQHandler+0x4d4>
 80041b2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80041b6:	f003 0310 	and.w	r3, r3, #16
 80041ba:	2b00      	cmp	r3, #0
 80041bc:	f000 8148 	beq.w	8004450 <HAL_UART_IRQHandler+0x4d4>
 80041c0:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80041c4:	f003 0310 	and.w	r3, r3, #16
 80041c8:	2b00      	cmp	r3, #0
 80041ca:	f000 8141 	beq.w	8004450 <HAL_UART_IRQHandler+0x4d4>
 80041ce:	2300      	movs	r3, #0
 80041d0:	60bb      	str	r3, [r7, #8]
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	681b      	ldr	r3, [r3, #0]
 80041d8:	60bb      	str	r3, [r7, #8]
 80041da:	687b      	ldr	r3, [r7, #4]
 80041dc:	681b      	ldr	r3, [r3, #0]
 80041de:	685b      	ldr	r3, [r3, #4]
 80041e0:	60bb      	str	r3, [r7, #8]
 80041e2:	68bb      	ldr	r3, [r7, #8]
 80041e4:	687b      	ldr	r3, [r7, #4]
 80041e6:	681b      	ldr	r3, [r3, #0]
 80041e8:	695b      	ldr	r3, [r3, #20]
 80041ea:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80041ee:	2b40      	cmp	r3, #64	; 0x40
 80041f0:	f040 80b6 	bne.w	8004360 <HAL_UART_IRQHandler+0x3e4>
 80041f4:	687b      	ldr	r3, [r7, #4]
 80041f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80041f8:	681b      	ldr	r3, [r3, #0]
 80041fa:	685b      	ldr	r3, [r3, #4]
 80041fc:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8004200:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8004204:	2b00      	cmp	r3, #0
 8004206:	f000 8145 	beq.w	8004494 <HAL_UART_IRQHandler+0x518>
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800420e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8004212:	429a      	cmp	r2, r3
 8004214:	f080 813e 	bcs.w	8004494 <HAL_UART_IRQHandler+0x518>
 8004218:	687b      	ldr	r3, [r7, #4]
 800421a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800421e:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004220:	687b      	ldr	r3, [r7, #4]
 8004222:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004224:	69db      	ldr	r3, [r3, #28]
 8004226:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800422a:	f000 8088 	beq.w	800433e <HAL_UART_IRQHandler+0x3c2>
 800422e:	687b      	ldr	r3, [r7, #4]
 8004230:	681b      	ldr	r3, [r3, #0]
 8004232:	330c      	adds	r3, #12
 8004234:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8004238:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800423c:	e853 3f00 	ldrex	r3, [r3]
 8004240:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8004244:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8004248:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800424c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8004250:	687b      	ldr	r3, [r7, #4]
 8004252:	681b      	ldr	r3, [r3, #0]
 8004254:	330c      	adds	r3, #12
 8004256:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800425a:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800425e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8004262:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8004266:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800426a:	e841 2300 	strex	r3, r2, [r1]
 800426e:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8004272:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 8004276:	2b00      	cmp	r3, #0
 8004278:	d1d9      	bne.n	800422e <HAL_UART_IRQHandler+0x2b2>
 800427a:	687b      	ldr	r3, [r7, #4]
 800427c:	681b      	ldr	r3, [r3, #0]
 800427e:	3314      	adds	r3, #20
 8004280:	677b      	str	r3, [r7, #116]	; 0x74
 8004282:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8004284:	e853 3f00 	ldrex	r3, [r3]
 8004288:	673b      	str	r3, [r7, #112]	; 0x70
 800428a:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800428c:	f023 0301 	bic.w	r3, r3, #1
 8004290:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	681b      	ldr	r3, [r3, #0]
 8004298:	3314      	adds	r3, #20
 800429a:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800429e:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 80042a2:	67fb      	str	r3, [r7, #124]	; 0x7c
 80042a4:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 80042a6:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 80042aa:	e841 2300 	strex	r3, r2, [r1]
 80042ae:	67bb      	str	r3, [r7, #120]	; 0x78
 80042b0:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80042b2:	2b00      	cmp	r3, #0
 80042b4:	d1e1      	bne.n	800427a <HAL_UART_IRQHandler+0x2fe>
 80042b6:	687b      	ldr	r3, [r7, #4]
 80042b8:	681b      	ldr	r3, [r3, #0]
 80042ba:	3314      	adds	r3, #20
 80042bc:	663b      	str	r3, [r7, #96]	; 0x60
 80042be:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80042c0:	e853 3f00 	ldrex	r3, [r3]
 80042c4:	65fb      	str	r3, [r7, #92]	; 0x5c
 80042c6:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80042c8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80042cc:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80042d0:	687b      	ldr	r3, [r7, #4]
 80042d2:	681b      	ldr	r3, [r3, #0]
 80042d4:	3314      	adds	r3, #20
 80042d6:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 80042da:	66fa      	str	r2, [r7, #108]	; 0x6c
 80042dc:	66bb      	str	r3, [r7, #104]	; 0x68
 80042de:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80042e0:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80042e2:	e841 2300 	strex	r3, r2, [r1]
 80042e6:	667b      	str	r3, [r7, #100]	; 0x64
 80042e8:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80042ea:	2b00      	cmp	r3, #0
 80042ec:	d1e3      	bne.n	80042b6 <HAL_UART_IRQHandler+0x33a>
 80042ee:	687b      	ldr	r3, [r7, #4]
 80042f0:	2220      	movs	r2, #32
 80042f2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80042f6:	687b      	ldr	r3, [r7, #4]
 80042f8:	2200      	movs	r2, #0
 80042fa:	631a      	str	r2, [r3, #48]	; 0x30
 80042fc:	687b      	ldr	r3, [r7, #4]
 80042fe:	681b      	ldr	r3, [r3, #0]
 8004300:	330c      	adds	r3, #12
 8004302:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004304:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8004306:	e853 3f00 	ldrex	r3, [r3]
 800430a:	64bb      	str	r3, [r7, #72]	; 0x48
 800430c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800430e:	f023 0310 	bic.w	r3, r3, #16
 8004312:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8004316:	687b      	ldr	r3, [r7, #4]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	330c      	adds	r3, #12
 800431c:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8004320:	65ba      	str	r2, [r7, #88]	; 0x58
 8004322:	657b      	str	r3, [r7, #84]	; 0x54
 8004324:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8004326:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8004328:	e841 2300 	strex	r3, r2, [r1]
 800432c:	653b      	str	r3, [r7, #80]	; 0x50
 800432e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8004330:	2b00      	cmp	r3, #0
 8004332:	d1e3      	bne.n	80042fc <HAL_UART_IRQHandler+0x380>
 8004334:	687b      	ldr	r3, [r7, #4]
 8004336:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004338:	4618      	mov	r0, r3
 800433a:	f7fd fefb 	bl	8002134 <HAL_DMA_Abort>
 800433e:	687b      	ldr	r3, [r7, #4]
 8004340:	2202      	movs	r2, #2
 8004342:	635a      	str	r2, [r3, #52]	; 0x34
 8004344:	687b      	ldr	r3, [r7, #4]
 8004346:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004348:	687b      	ldr	r3, [r7, #4]
 800434a:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800434c:	b29b      	uxth	r3, r3
 800434e:	1ad3      	subs	r3, r2, r3
 8004350:	b29b      	uxth	r3, r3
 8004352:	4619      	mov	r1, r3
 8004354:	6878      	ldr	r0, [r7, #4]
 8004356:	f7fd fbed 	bl	8001b34 <HAL_UARTEx_RxEventCallback>
 800435a:	e09b      	b.n	8004494 <HAL_UART_IRQHandler+0x518>
 800435c:	08004a37 	.word	0x08004a37
 8004360:	687b      	ldr	r3, [r7, #4]
 8004362:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8004364:	687b      	ldr	r3, [r7, #4]
 8004366:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004368:	b29b      	uxth	r3, r3
 800436a:	1ad3      	subs	r3, r2, r3
 800436c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8004370:	687b      	ldr	r3, [r7, #4]
 8004372:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004374:	b29b      	uxth	r3, r3
 8004376:	2b00      	cmp	r3, #0
 8004378:	f000 808e 	beq.w	8004498 <HAL_UART_IRQHandler+0x51c>
 800437c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8004380:	2b00      	cmp	r3, #0
 8004382:	f000 8089 	beq.w	8004498 <HAL_UART_IRQHandler+0x51c>
 8004386:	687b      	ldr	r3, [r7, #4]
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	330c      	adds	r3, #12
 800438c:	63bb      	str	r3, [r7, #56]	; 0x38
 800438e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004390:	e853 3f00 	ldrex	r3, [r3]
 8004394:	637b      	str	r3, [r7, #52]	; 0x34
 8004396:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004398:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800439c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80043a0:	687b      	ldr	r3, [r7, #4]
 80043a2:	681b      	ldr	r3, [r3, #0]
 80043a4:	330c      	adds	r3, #12
 80043a6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80043aa:	647a      	str	r2, [r7, #68]	; 0x44
 80043ac:	643b      	str	r3, [r7, #64]	; 0x40
 80043ae:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80043b0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80043b2:	e841 2300 	strex	r3, r2, [r1]
 80043b6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80043b8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80043ba:	2b00      	cmp	r3, #0
 80043bc:	d1e3      	bne.n	8004386 <HAL_UART_IRQHandler+0x40a>
 80043be:	687b      	ldr	r3, [r7, #4]
 80043c0:	681b      	ldr	r3, [r3, #0]
 80043c2:	3314      	adds	r3, #20
 80043c4:	627b      	str	r3, [r7, #36]	; 0x24
 80043c6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80043c8:	e853 3f00 	ldrex	r3, [r3]
 80043cc:	623b      	str	r3, [r7, #32]
 80043ce:	6a3b      	ldr	r3, [r7, #32]
 80043d0:	f023 0301 	bic.w	r3, r3, #1
 80043d4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	3314      	adds	r3, #20
 80043de:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 80043e2:	633a      	str	r2, [r7, #48]	; 0x30
 80043e4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80043e6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80043e8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80043ea:	e841 2300 	strex	r3, r2, [r1]
 80043ee:	62bb      	str	r3, [r7, #40]	; 0x28
 80043f0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80043f2:	2b00      	cmp	r3, #0
 80043f4:	d1e3      	bne.n	80043be <HAL_UART_IRQHandler+0x442>
 80043f6:	687b      	ldr	r3, [r7, #4]
 80043f8:	2220      	movs	r2, #32
 80043fa:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	2200      	movs	r2, #0
 8004402:	631a      	str	r2, [r3, #48]	; 0x30
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	681b      	ldr	r3, [r3, #0]
 8004408:	330c      	adds	r3, #12
 800440a:	613b      	str	r3, [r7, #16]
 800440c:	693b      	ldr	r3, [r7, #16]
 800440e:	e853 3f00 	ldrex	r3, [r3]
 8004412:	60fb      	str	r3, [r7, #12]
 8004414:	68fb      	ldr	r3, [r7, #12]
 8004416:	f023 0310 	bic.w	r3, r3, #16
 800441a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	330c      	adds	r3, #12
 8004424:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8004428:	61fa      	str	r2, [r7, #28]
 800442a:	61bb      	str	r3, [r7, #24]
 800442c:	69b9      	ldr	r1, [r7, #24]
 800442e:	69fa      	ldr	r2, [r7, #28]
 8004430:	e841 2300 	strex	r3, r2, [r1]
 8004434:	617b      	str	r3, [r7, #20]
 8004436:	697b      	ldr	r3, [r7, #20]
 8004438:	2b00      	cmp	r3, #0
 800443a:	d1e3      	bne.n	8004404 <HAL_UART_IRQHandler+0x488>
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	2202      	movs	r2, #2
 8004440:	635a      	str	r2, [r3, #52]	; 0x34
 8004442:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8004446:	4619      	mov	r1, r3
 8004448:	6878      	ldr	r0, [r7, #4]
 800444a:	f7fd fb73 	bl	8001b34 <HAL_UARTEx_RxEventCallback>
 800444e:	e023      	b.n	8004498 <HAL_UART_IRQHandler+0x51c>
 8004450:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004454:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004458:	2b00      	cmp	r3, #0
 800445a:	d009      	beq.n	8004470 <HAL_UART_IRQHandler+0x4f4>
 800445c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004460:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8004464:	2b00      	cmp	r3, #0
 8004466:	d003      	beq.n	8004470 <HAL_UART_IRQHandler+0x4f4>
 8004468:	6878      	ldr	r0, [r7, #4]
 800446a:	f000 faf8 	bl	8004a5e <UART_Transmit_IT>
 800446e:	e014      	b.n	800449a <HAL_UART_IRQHandler+0x51e>
 8004470:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8004474:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004478:	2b00      	cmp	r3, #0
 800447a:	d00e      	beq.n	800449a <HAL_UART_IRQHandler+0x51e>
 800447c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8004480:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004484:	2b00      	cmp	r3, #0
 8004486:	d008      	beq.n	800449a <HAL_UART_IRQHandler+0x51e>
 8004488:	6878      	ldr	r0, [r7, #4]
 800448a:	f000 fb38 	bl	8004afe <UART_EndTransmit_IT>
 800448e:	e004      	b.n	800449a <HAL_UART_IRQHandler+0x51e>
 8004490:	bf00      	nop
 8004492:	e002      	b.n	800449a <HAL_UART_IRQHandler+0x51e>
 8004494:	bf00      	nop
 8004496:	e000      	b.n	800449a <HAL_UART_IRQHandler+0x51e>
 8004498:	bf00      	nop
 800449a:	37e8      	adds	r7, #232	; 0xe8
 800449c:	46bd      	mov	sp, r7
 800449e:	bd80      	pop	{r7, pc}

080044a0 <HAL_UART_RxHalfCpltCallback>:
 80044a0:	b480      	push	{r7}
 80044a2:	b083      	sub	sp, #12
 80044a4:	af00      	add	r7, sp, #0
 80044a6:	6078      	str	r0, [r7, #4]
 80044a8:	bf00      	nop
 80044aa:	370c      	adds	r7, #12
 80044ac:	46bd      	mov	sp, r7
 80044ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044b2:	4770      	bx	lr

080044b4 <HAL_UART_ErrorCallback>:
 80044b4:	b480      	push	{r7}
 80044b6:	b083      	sub	sp, #12
 80044b8:	af00      	add	r7, sp, #0
 80044ba:	6078      	str	r0, [r7, #4]
 80044bc:	bf00      	nop
 80044be:	370c      	adds	r7, #12
 80044c0:	46bd      	mov	sp, r7
 80044c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044c6:	4770      	bx	lr

080044c8 <UART_DMAReceiveCplt>:
 80044c8:	b580      	push	{r7, lr}
 80044ca:	b09c      	sub	sp, #112	; 0x70
 80044cc:	af00      	add	r7, sp, #0
 80044ce:	6078      	str	r0, [r7, #4]
 80044d0:	687b      	ldr	r3, [r7, #4]
 80044d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80044d4:	66fb      	str	r3, [r7, #108]	; 0x6c
 80044d6:	687b      	ldr	r3, [r7, #4]
 80044d8:	681b      	ldr	r3, [r3, #0]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80044e0:	2b00      	cmp	r3, #0
 80044e2:	d172      	bne.n	80045ca <UART_DMAReceiveCplt+0x102>
 80044e4:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80044e6:	2200      	movs	r2, #0
 80044e8:	85da      	strh	r2, [r3, #46]	; 0x2e
 80044ea:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80044ec:	681b      	ldr	r3, [r3, #0]
 80044ee:	330c      	adds	r3, #12
 80044f0:	64fb      	str	r3, [r7, #76]	; 0x4c
 80044f2:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 80044f4:	e853 3f00 	ldrex	r3, [r3]
 80044f8:	64bb      	str	r3, [r7, #72]	; 0x48
 80044fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80044fc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8004500:	66bb      	str	r3, [r7, #104]	; 0x68
 8004502:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004504:	681b      	ldr	r3, [r3, #0]
 8004506:	330c      	adds	r3, #12
 8004508:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800450a:	65ba      	str	r2, [r7, #88]	; 0x58
 800450c:	657b      	str	r3, [r7, #84]	; 0x54
 800450e:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8004510:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8004512:	e841 2300 	strex	r3, r2, [r1]
 8004516:	653b      	str	r3, [r7, #80]	; 0x50
 8004518:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800451a:	2b00      	cmp	r3, #0
 800451c:	d1e5      	bne.n	80044ea <UART_DMAReceiveCplt+0x22>
 800451e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004520:	681b      	ldr	r3, [r3, #0]
 8004522:	3314      	adds	r3, #20
 8004524:	63bb      	str	r3, [r7, #56]	; 0x38
 8004526:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8004528:	e853 3f00 	ldrex	r3, [r3]
 800452c:	637b      	str	r3, [r7, #52]	; 0x34
 800452e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004530:	f023 0301 	bic.w	r3, r3, #1
 8004534:	667b      	str	r3, [r7, #100]	; 0x64
 8004536:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004538:	681b      	ldr	r3, [r3, #0]
 800453a:	3314      	adds	r3, #20
 800453c:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800453e:	647a      	str	r2, [r7, #68]	; 0x44
 8004540:	643b      	str	r3, [r7, #64]	; 0x40
 8004542:	6c39      	ldr	r1, [r7, #64]	; 0x40
 8004544:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8004546:	e841 2300 	strex	r3, r2, [r1]
 800454a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800454c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800454e:	2b00      	cmp	r3, #0
 8004550:	d1e5      	bne.n	800451e <UART_DMAReceiveCplt+0x56>
 8004552:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004554:	681b      	ldr	r3, [r3, #0]
 8004556:	3314      	adds	r3, #20
 8004558:	627b      	str	r3, [r7, #36]	; 0x24
 800455a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800455c:	e853 3f00 	ldrex	r3, [r3]
 8004560:	623b      	str	r3, [r7, #32]
 8004562:	6a3b      	ldr	r3, [r7, #32]
 8004564:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8004568:	663b      	str	r3, [r7, #96]	; 0x60
 800456a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800456c:	681b      	ldr	r3, [r3, #0]
 800456e:	3314      	adds	r3, #20
 8004570:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 8004572:	633a      	str	r2, [r7, #48]	; 0x30
 8004574:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004576:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8004578:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800457a:	e841 2300 	strex	r3, r2, [r1]
 800457e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004580:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004582:	2b00      	cmp	r3, #0
 8004584:	d1e5      	bne.n	8004552 <UART_DMAReceiveCplt+0x8a>
 8004586:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004588:	2220      	movs	r2, #32
 800458a:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800458e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004590:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004592:	2b01      	cmp	r3, #1
 8004594:	d119      	bne.n	80045ca <UART_DMAReceiveCplt+0x102>
 8004596:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	330c      	adds	r3, #12
 800459c:	613b      	str	r3, [r7, #16]
 800459e:	693b      	ldr	r3, [r7, #16]
 80045a0:	e853 3f00 	ldrex	r3, [r3]
 80045a4:	60fb      	str	r3, [r7, #12]
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	f023 0310 	bic.w	r3, r3, #16
 80045ac:	65fb      	str	r3, [r7, #92]	; 0x5c
 80045ae:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80045b0:	681b      	ldr	r3, [r3, #0]
 80045b2:	330c      	adds	r3, #12
 80045b4:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 80045b6:	61fa      	str	r2, [r7, #28]
 80045b8:	61bb      	str	r3, [r7, #24]
 80045ba:	69b9      	ldr	r1, [r7, #24]
 80045bc:	69fa      	ldr	r2, [r7, #28]
 80045be:	e841 2300 	strex	r3, r2, [r1]
 80045c2:	617b      	str	r3, [r7, #20]
 80045c4:	697b      	ldr	r3, [r7, #20]
 80045c6:	2b00      	cmp	r3, #0
 80045c8:	d1e5      	bne.n	8004596 <UART_DMAReceiveCplt+0xce>
 80045ca:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80045cc:	2200      	movs	r2, #0
 80045ce:	635a      	str	r2, [r3, #52]	; 0x34
 80045d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80045d2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80045d4:	2b01      	cmp	r3, #1
 80045d6:	d106      	bne.n	80045e6 <UART_DMAReceiveCplt+0x11e>
 80045d8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80045da:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 80045dc:	4619      	mov	r1, r3
 80045de:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80045e0:	f7fd faa8 	bl	8001b34 <HAL_UARTEx_RxEventCallback>
 80045e4:	e002      	b.n	80045ec <UART_DMAReceiveCplt+0x124>
 80045e6:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 80045e8:	f7fd fa54 	bl	8001a94 <HAL_UART_RxCpltCallback>
 80045ec:	bf00      	nop
 80045ee:	3770      	adds	r7, #112	; 0x70
 80045f0:	46bd      	mov	sp, r7
 80045f2:	bd80      	pop	{r7, pc}

080045f4 <UART_DMARxHalfCplt>:
 80045f4:	b580      	push	{r7, lr}
 80045f6:	b084      	sub	sp, #16
 80045f8:	af00      	add	r7, sp, #0
 80045fa:	6078      	str	r0, [r7, #4]
 80045fc:	687b      	ldr	r3, [r7, #4]
 80045fe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004600:	60fb      	str	r3, [r7, #12]
 8004602:	68fb      	ldr	r3, [r7, #12]
 8004604:	2201      	movs	r2, #1
 8004606:	635a      	str	r2, [r3, #52]	; 0x34
 8004608:	68fb      	ldr	r3, [r7, #12]
 800460a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800460c:	2b01      	cmp	r3, #1
 800460e:	d108      	bne.n	8004622 <UART_DMARxHalfCplt+0x2e>
 8004610:	68fb      	ldr	r3, [r7, #12]
 8004612:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004614:	085b      	lsrs	r3, r3, #1
 8004616:	b29b      	uxth	r3, r3
 8004618:	4619      	mov	r1, r3
 800461a:	68f8      	ldr	r0, [r7, #12]
 800461c:	f7fd fa8a 	bl	8001b34 <HAL_UARTEx_RxEventCallback>
 8004620:	e002      	b.n	8004628 <UART_DMARxHalfCplt+0x34>
 8004622:	68f8      	ldr	r0, [r7, #12]
 8004624:	f7ff ff3c 	bl	80044a0 <HAL_UART_RxHalfCpltCallback>
 8004628:	bf00      	nop
 800462a:	3710      	adds	r7, #16
 800462c:	46bd      	mov	sp, r7
 800462e:	bd80      	pop	{r7, pc}

08004630 <UART_DMAError>:
 8004630:	b580      	push	{r7, lr}
 8004632:	b084      	sub	sp, #16
 8004634:	af00      	add	r7, sp, #0
 8004636:	6078      	str	r0, [r7, #4]
 8004638:	2300      	movs	r3, #0
 800463a:	60fb      	str	r3, [r7, #12]
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004640:	60bb      	str	r3, [r7, #8]
 8004642:	68bb      	ldr	r3, [r7, #8]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	695b      	ldr	r3, [r3, #20]
 8004648:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800464c:	2b80      	cmp	r3, #128	; 0x80
 800464e:	bf0c      	ite	eq
 8004650:	2301      	moveq	r3, #1
 8004652:	2300      	movne	r3, #0
 8004654:	b2db      	uxtb	r3, r3
 8004656:	60fb      	str	r3, [r7, #12]
 8004658:	68bb      	ldr	r3, [r7, #8]
 800465a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800465e:	b2db      	uxtb	r3, r3
 8004660:	2b21      	cmp	r3, #33	; 0x21
 8004662:	d108      	bne.n	8004676 <UART_DMAError+0x46>
 8004664:	68fb      	ldr	r3, [r7, #12]
 8004666:	2b00      	cmp	r3, #0
 8004668:	d005      	beq.n	8004676 <UART_DMAError+0x46>
 800466a:	68bb      	ldr	r3, [r7, #8]
 800466c:	2200      	movs	r2, #0
 800466e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004670:	68b8      	ldr	r0, [r7, #8]
 8004672:	f000 f955 	bl	8004920 <UART_EndTxTransfer>
 8004676:	68bb      	ldr	r3, [r7, #8]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	695b      	ldr	r3, [r3, #20]
 800467c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004680:	2b40      	cmp	r3, #64	; 0x40
 8004682:	bf0c      	ite	eq
 8004684:	2301      	moveq	r3, #1
 8004686:	2300      	movne	r3, #0
 8004688:	b2db      	uxtb	r3, r3
 800468a:	60fb      	str	r3, [r7, #12]
 800468c:	68bb      	ldr	r3, [r7, #8]
 800468e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8004692:	b2db      	uxtb	r3, r3
 8004694:	2b22      	cmp	r3, #34	; 0x22
 8004696:	d108      	bne.n	80046aa <UART_DMAError+0x7a>
 8004698:	68fb      	ldr	r3, [r7, #12]
 800469a:	2b00      	cmp	r3, #0
 800469c:	d005      	beq.n	80046aa <UART_DMAError+0x7a>
 800469e:	68bb      	ldr	r3, [r7, #8]
 80046a0:	2200      	movs	r2, #0
 80046a2:	85da      	strh	r2, [r3, #46]	; 0x2e
 80046a4:	68b8      	ldr	r0, [r7, #8]
 80046a6:	f000 f963 	bl	8004970 <UART_EndRxTransfer>
 80046aa:	68bb      	ldr	r3, [r7, #8]
 80046ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046ae:	f043 0210 	orr.w	r2, r3, #16
 80046b2:	68bb      	ldr	r3, [r7, #8]
 80046b4:	645a      	str	r2, [r3, #68]	; 0x44
 80046b6:	68b8      	ldr	r0, [r7, #8]
 80046b8:	f7ff fefc 	bl	80044b4 <HAL_UART_ErrorCallback>
 80046bc:	bf00      	nop
 80046be:	3710      	adds	r7, #16
 80046c0:	46bd      	mov	sp, r7
 80046c2:	bd80      	pop	{r7, pc}

080046c4 <UART_WaitOnFlagUntilTimeout>:
 80046c4:	b580      	push	{r7, lr}
 80046c6:	b086      	sub	sp, #24
 80046c8:	af00      	add	r7, sp, #0
 80046ca:	60f8      	str	r0, [r7, #12]
 80046cc:	60b9      	str	r1, [r7, #8]
 80046ce:	603b      	str	r3, [r7, #0]
 80046d0:	4613      	mov	r3, r2
 80046d2:	71fb      	strb	r3, [r7, #7]
 80046d4:	e03b      	b.n	800474e <UART_WaitOnFlagUntilTimeout+0x8a>
 80046d6:	6a3b      	ldr	r3, [r7, #32]
 80046d8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80046dc:	d037      	beq.n	800474e <UART_WaitOnFlagUntilTimeout+0x8a>
 80046de:	f7fd fae1 	bl	8001ca4 <HAL_GetTick>
 80046e2:	4602      	mov	r2, r0
 80046e4:	683b      	ldr	r3, [r7, #0]
 80046e6:	1ad3      	subs	r3, r2, r3
 80046e8:	6a3a      	ldr	r2, [r7, #32]
 80046ea:	429a      	cmp	r2, r3
 80046ec:	d302      	bcc.n	80046f4 <UART_WaitOnFlagUntilTimeout+0x30>
 80046ee:	6a3b      	ldr	r3, [r7, #32]
 80046f0:	2b00      	cmp	r3, #0
 80046f2:	d101      	bne.n	80046f8 <UART_WaitOnFlagUntilTimeout+0x34>
 80046f4:	2303      	movs	r3, #3
 80046f6:	e03a      	b.n	800476e <UART_WaitOnFlagUntilTimeout+0xaa>
 80046f8:	68fb      	ldr	r3, [r7, #12]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	68db      	ldr	r3, [r3, #12]
 80046fe:	f003 0304 	and.w	r3, r3, #4
 8004702:	2b00      	cmp	r3, #0
 8004704:	d023      	beq.n	800474e <UART_WaitOnFlagUntilTimeout+0x8a>
 8004706:	68bb      	ldr	r3, [r7, #8]
 8004708:	2b80      	cmp	r3, #128	; 0x80
 800470a:	d020      	beq.n	800474e <UART_WaitOnFlagUntilTimeout+0x8a>
 800470c:	68bb      	ldr	r3, [r7, #8]
 800470e:	2b40      	cmp	r3, #64	; 0x40
 8004710:	d01d      	beq.n	800474e <UART_WaitOnFlagUntilTimeout+0x8a>
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	681b      	ldr	r3, [r3, #0]
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	f003 0308 	and.w	r3, r3, #8
 800471c:	2b08      	cmp	r3, #8
 800471e:	d116      	bne.n	800474e <UART_WaitOnFlagUntilTimeout+0x8a>
 8004720:	2300      	movs	r3, #0
 8004722:	617b      	str	r3, [r7, #20]
 8004724:	68fb      	ldr	r3, [r7, #12]
 8004726:	681b      	ldr	r3, [r3, #0]
 8004728:	681b      	ldr	r3, [r3, #0]
 800472a:	617b      	str	r3, [r7, #20]
 800472c:	68fb      	ldr	r3, [r7, #12]
 800472e:	681b      	ldr	r3, [r3, #0]
 8004730:	685b      	ldr	r3, [r3, #4]
 8004732:	617b      	str	r3, [r7, #20]
 8004734:	697b      	ldr	r3, [r7, #20]
 8004736:	68f8      	ldr	r0, [r7, #12]
 8004738:	f000 f91a 	bl	8004970 <UART_EndRxTransfer>
 800473c:	68fb      	ldr	r3, [r7, #12]
 800473e:	2208      	movs	r2, #8
 8004740:	645a      	str	r2, [r3, #68]	; 0x44
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	2200      	movs	r2, #0
 8004746:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800474a:	2301      	movs	r3, #1
 800474c:	e00f      	b.n	800476e <UART_WaitOnFlagUntilTimeout+0xaa>
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	681a      	ldr	r2, [r3, #0]
 8004754:	68bb      	ldr	r3, [r7, #8]
 8004756:	4013      	ands	r3, r2
 8004758:	68ba      	ldr	r2, [r7, #8]
 800475a:	429a      	cmp	r2, r3
 800475c:	bf0c      	ite	eq
 800475e:	2301      	moveq	r3, #1
 8004760:	2300      	movne	r3, #0
 8004762:	b2db      	uxtb	r3, r3
 8004764:	461a      	mov	r2, r3
 8004766:	79fb      	ldrb	r3, [r7, #7]
 8004768:	429a      	cmp	r2, r3
 800476a:	d0b4      	beq.n	80046d6 <UART_WaitOnFlagUntilTimeout+0x12>
 800476c:	2300      	movs	r3, #0
 800476e:	4618      	mov	r0, r3
 8004770:	3718      	adds	r7, #24
 8004772:	46bd      	mov	sp, r7
 8004774:	bd80      	pop	{r7, pc}

08004776 <UART_Start_Receive_IT>:
 8004776:	b480      	push	{r7}
 8004778:	b085      	sub	sp, #20
 800477a:	af00      	add	r7, sp, #0
 800477c:	60f8      	str	r0, [r7, #12]
 800477e:	60b9      	str	r1, [r7, #8]
 8004780:	4613      	mov	r3, r2
 8004782:	80fb      	strh	r3, [r7, #6]
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	68ba      	ldr	r2, [r7, #8]
 8004788:	629a      	str	r2, [r3, #40]	; 0x28
 800478a:	68fb      	ldr	r3, [r7, #12]
 800478c:	88fa      	ldrh	r2, [r7, #6]
 800478e:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004790:	68fb      	ldr	r3, [r7, #12]
 8004792:	88fa      	ldrh	r2, [r7, #6]
 8004794:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004796:	68fb      	ldr	r3, [r7, #12]
 8004798:	2200      	movs	r2, #0
 800479a:	645a      	str	r2, [r3, #68]	; 0x44
 800479c:	68fb      	ldr	r3, [r7, #12]
 800479e:	2222      	movs	r2, #34	; 0x22
 80047a0:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80047a4:	68fb      	ldr	r3, [r7, #12]
 80047a6:	691b      	ldr	r3, [r3, #16]
 80047a8:	2b00      	cmp	r3, #0
 80047aa:	d007      	beq.n	80047bc <UART_Start_Receive_IT+0x46>
 80047ac:	68fb      	ldr	r3, [r7, #12]
 80047ae:	681b      	ldr	r3, [r3, #0]
 80047b0:	68da      	ldr	r2, [r3, #12]
 80047b2:	68fb      	ldr	r3, [r7, #12]
 80047b4:	681b      	ldr	r3, [r3, #0]
 80047b6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80047ba:	60da      	str	r2, [r3, #12]
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	695a      	ldr	r2, [r3, #20]
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	f042 0201 	orr.w	r2, r2, #1
 80047ca:	615a      	str	r2, [r3, #20]
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	681b      	ldr	r3, [r3, #0]
 80047d0:	68da      	ldr	r2, [r3, #12]
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	681b      	ldr	r3, [r3, #0]
 80047d6:	f042 0220 	orr.w	r2, r2, #32
 80047da:	60da      	str	r2, [r3, #12]
 80047dc:	2300      	movs	r3, #0
 80047de:	4618      	mov	r0, r3
 80047e0:	3714      	adds	r7, #20
 80047e2:	46bd      	mov	sp, r7
 80047e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047e8:	4770      	bx	lr
	...

080047ec <UART_Start_Receive_DMA>:
 80047ec:	b580      	push	{r7, lr}
 80047ee:	b098      	sub	sp, #96	; 0x60
 80047f0:	af00      	add	r7, sp, #0
 80047f2:	60f8      	str	r0, [r7, #12]
 80047f4:	60b9      	str	r1, [r7, #8]
 80047f6:	4613      	mov	r3, r2
 80047f8:	80fb      	strh	r3, [r7, #6]
 80047fa:	68ba      	ldr	r2, [r7, #8]
 80047fc:	68fb      	ldr	r3, [r7, #12]
 80047fe:	629a      	str	r2, [r3, #40]	; 0x28
 8004800:	68fb      	ldr	r3, [r7, #12]
 8004802:	88fa      	ldrh	r2, [r7, #6]
 8004804:	859a      	strh	r2, [r3, #44]	; 0x2c
 8004806:	68fb      	ldr	r3, [r7, #12]
 8004808:	2200      	movs	r2, #0
 800480a:	645a      	str	r2, [r3, #68]	; 0x44
 800480c:	68fb      	ldr	r3, [r7, #12]
 800480e:	2222      	movs	r2, #34	; 0x22
 8004810:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004814:	68fb      	ldr	r3, [r7, #12]
 8004816:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004818:	4a3e      	ldr	r2, [pc, #248]	; (8004914 <UART_Start_Receive_DMA+0x128>)
 800481a:	63da      	str	r2, [r3, #60]	; 0x3c
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004820:	4a3d      	ldr	r2, [pc, #244]	; (8004918 <UART_Start_Receive_DMA+0x12c>)
 8004822:	641a      	str	r2, [r3, #64]	; 0x40
 8004824:	68fb      	ldr	r3, [r7, #12]
 8004826:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004828:	4a3c      	ldr	r2, [pc, #240]	; (800491c <UART_Start_Receive_DMA+0x130>)
 800482a:	64da      	str	r2, [r3, #76]	; 0x4c
 800482c:	68fb      	ldr	r3, [r7, #12]
 800482e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8004830:	2200      	movs	r2, #0
 8004832:	651a      	str	r2, [r3, #80]	; 0x50
 8004834:	f107 0308 	add.w	r3, r7, #8
 8004838:	65fb      	str	r3, [r7, #92]	; 0x5c
 800483a:	68fb      	ldr	r3, [r7, #12]
 800483c:	6bd8      	ldr	r0, [r3, #60]	; 0x3c
 800483e:	68fb      	ldr	r3, [r7, #12]
 8004840:	681b      	ldr	r3, [r3, #0]
 8004842:	3304      	adds	r3, #4
 8004844:	4619      	mov	r1, r3
 8004846:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 8004848:	681a      	ldr	r2, [r3, #0]
 800484a:	88fb      	ldrh	r3, [r7, #6]
 800484c:	f7fd fc1a 	bl	8002084 <HAL_DMA_Start_IT>
 8004850:	2300      	movs	r3, #0
 8004852:	613b      	str	r3, [r7, #16]
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	613b      	str	r3, [r7, #16]
 800485c:	68fb      	ldr	r3, [r7, #12]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	685b      	ldr	r3, [r3, #4]
 8004862:	613b      	str	r3, [r7, #16]
 8004864:	693b      	ldr	r3, [r7, #16]
 8004866:	68fb      	ldr	r3, [r7, #12]
 8004868:	691b      	ldr	r3, [r3, #16]
 800486a:	2b00      	cmp	r3, #0
 800486c:	d019      	beq.n	80048a2 <UART_Start_Receive_DMA+0xb6>
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	681b      	ldr	r3, [r3, #0]
 8004872:	330c      	adds	r3, #12
 8004874:	643b      	str	r3, [r7, #64]	; 0x40
 8004876:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8004878:	e853 3f00 	ldrex	r3, [r3]
 800487c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800487e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004880:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004884:	65bb      	str	r3, [r7, #88]	; 0x58
 8004886:	68fb      	ldr	r3, [r7, #12]
 8004888:	681b      	ldr	r3, [r3, #0]
 800488a:	330c      	adds	r3, #12
 800488c:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800488e:	64fa      	str	r2, [r7, #76]	; 0x4c
 8004890:	64bb      	str	r3, [r7, #72]	; 0x48
 8004892:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8004894:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8004896:	e841 2300 	strex	r3, r2, [r1]
 800489a:	647b      	str	r3, [r7, #68]	; 0x44
 800489c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800489e:	2b00      	cmp	r3, #0
 80048a0:	d1e5      	bne.n	800486e <UART_Start_Receive_DMA+0x82>
 80048a2:	68fb      	ldr	r3, [r7, #12]
 80048a4:	681b      	ldr	r3, [r3, #0]
 80048a6:	3314      	adds	r3, #20
 80048a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80048aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80048ac:	e853 3f00 	ldrex	r3, [r3]
 80048b0:	62bb      	str	r3, [r7, #40]	; 0x28
 80048b2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80048b4:	f043 0301 	orr.w	r3, r3, #1
 80048b8:	657b      	str	r3, [r7, #84]	; 0x54
 80048ba:	68fb      	ldr	r3, [r7, #12]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	3314      	adds	r3, #20
 80048c0:	6d7a      	ldr	r2, [r7, #84]	; 0x54
 80048c2:	63ba      	str	r2, [r7, #56]	; 0x38
 80048c4:	637b      	str	r3, [r7, #52]	; 0x34
 80048c6:	6b79      	ldr	r1, [r7, #52]	; 0x34
 80048c8:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80048ca:	e841 2300 	strex	r3, r2, [r1]
 80048ce:	633b      	str	r3, [r7, #48]	; 0x30
 80048d0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80048d2:	2b00      	cmp	r3, #0
 80048d4:	d1e5      	bne.n	80048a2 <UART_Start_Receive_DMA+0xb6>
 80048d6:	68fb      	ldr	r3, [r7, #12]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	3314      	adds	r3, #20
 80048dc:	61bb      	str	r3, [r7, #24]
 80048de:	69bb      	ldr	r3, [r7, #24]
 80048e0:	e853 3f00 	ldrex	r3, [r3]
 80048e4:	617b      	str	r3, [r7, #20]
 80048e6:	697b      	ldr	r3, [r7, #20]
 80048e8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80048ec:	653b      	str	r3, [r7, #80]	; 0x50
 80048ee:	68fb      	ldr	r3, [r7, #12]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	3314      	adds	r3, #20
 80048f4:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 80048f6:	627a      	str	r2, [r7, #36]	; 0x24
 80048f8:	623b      	str	r3, [r7, #32]
 80048fa:	6a39      	ldr	r1, [r7, #32]
 80048fc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80048fe:	e841 2300 	strex	r3, r2, [r1]
 8004902:	61fb      	str	r3, [r7, #28]
 8004904:	69fb      	ldr	r3, [r7, #28]
 8004906:	2b00      	cmp	r3, #0
 8004908:	d1e5      	bne.n	80048d6 <UART_Start_Receive_DMA+0xea>
 800490a:	2300      	movs	r3, #0
 800490c:	4618      	mov	r0, r3
 800490e:	3760      	adds	r7, #96	; 0x60
 8004910:	46bd      	mov	sp, r7
 8004912:	bd80      	pop	{r7, pc}
 8004914:	080044c9 	.word	0x080044c9
 8004918:	080045f5 	.word	0x080045f5
 800491c:	08004631 	.word	0x08004631

08004920 <UART_EndTxTransfer>:
 8004920:	b480      	push	{r7}
 8004922:	b089      	sub	sp, #36	; 0x24
 8004924:	af00      	add	r7, sp, #0
 8004926:	6078      	str	r0, [r7, #4]
 8004928:	687b      	ldr	r3, [r7, #4]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	330c      	adds	r3, #12
 800492e:	60fb      	str	r3, [r7, #12]
 8004930:	68fb      	ldr	r3, [r7, #12]
 8004932:	e853 3f00 	ldrex	r3, [r3]
 8004936:	60bb      	str	r3, [r7, #8]
 8004938:	68bb      	ldr	r3, [r7, #8]
 800493a:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800493e:	61fb      	str	r3, [r7, #28]
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	330c      	adds	r3, #12
 8004946:	69fa      	ldr	r2, [r7, #28]
 8004948:	61ba      	str	r2, [r7, #24]
 800494a:	617b      	str	r3, [r7, #20]
 800494c:	6979      	ldr	r1, [r7, #20]
 800494e:	69ba      	ldr	r2, [r7, #24]
 8004950:	e841 2300 	strex	r3, r2, [r1]
 8004954:	613b      	str	r3, [r7, #16]
 8004956:	693b      	ldr	r3, [r7, #16]
 8004958:	2b00      	cmp	r3, #0
 800495a:	d1e5      	bne.n	8004928 <UART_EndTxTransfer+0x8>
 800495c:	687b      	ldr	r3, [r7, #4]
 800495e:	2220      	movs	r2, #32
 8004960:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004964:	bf00      	nop
 8004966:	3724      	adds	r7, #36	; 0x24
 8004968:	46bd      	mov	sp, r7
 800496a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800496e:	4770      	bx	lr

08004970 <UART_EndRxTransfer>:
 8004970:	b480      	push	{r7}
 8004972:	b095      	sub	sp, #84	; 0x54
 8004974:	af00      	add	r7, sp, #0
 8004976:	6078      	str	r0, [r7, #4]
 8004978:	687b      	ldr	r3, [r7, #4]
 800497a:	681b      	ldr	r3, [r3, #0]
 800497c:	330c      	adds	r3, #12
 800497e:	637b      	str	r3, [r7, #52]	; 0x34
 8004980:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8004982:	e853 3f00 	ldrex	r3, [r3]
 8004986:	633b      	str	r3, [r7, #48]	; 0x30
 8004988:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800498a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800498e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004990:	687b      	ldr	r3, [r7, #4]
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	330c      	adds	r3, #12
 8004996:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8004998:	643a      	str	r2, [r7, #64]	; 0x40
 800499a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800499c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800499e:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 80049a0:	e841 2300 	strex	r3, r2, [r1]
 80049a4:	63bb      	str	r3, [r7, #56]	; 0x38
 80049a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80049a8:	2b00      	cmp	r3, #0
 80049aa:	d1e5      	bne.n	8004978 <UART_EndRxTransfer+0x8>
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	3314      	adds	r3, #20
 80049b2:	623b      	str	r3, [r7, #32]
 80049b4:	6a3b      	ldr	r3, [r7, #32]
 80049b6:	e853 3f00 	ldrex	r3, [r3]
 80049ba:	61fb      	str	r3, [r7, #28]
 80049bc:	69fb      	ldr	r3, [r7, #28]
 80049be:	f023 0301 	bic.w	r3, r3, #1
 80049c2:	64bb      	str	r3, [r7, #72]	; 0x48
 80049c4:	687b      	ldr	r3, [r7, #4]
 80049c6:	681b      	ldr	r3, [r3, #0]
 80049c8:	3314      	adds	r3, #20
 80049ca:	6cba      	ldr	r2, [r7, #72]	; 0x48
 80049cc:	62fa      	str	r2, [r7, #44]	; 0x2c
 80049ce:	62bb      	str	r3, [r7, #40]	; 0x28
 80049d0:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80049d2:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80049d4:	e841 2300 	strex	r3, r2, [r1]
 80049d8:	627b      	str	r3, [r7, #36]	; 0x24
 80049da:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80049dc:	2b00      	cmp	r3, #0
 80049de:	d1e5      	bne.n	80049ac <UART_EndRxTransfer+0x3c>
 80049e0:	687b      	ldr	r3, [r7, #4]
 80049e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80049e4:	2b01      	cmp	r3, #1
 80049e6:	d119      	bne.n	8004a1c <UART_EndRxTransfer+0xac>
 80049e8:	687b      	ldr	r3, [r7, #4]
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	330c      	adds	r3, #12
 80049ee:	60fb      	str	r3, [r7, #12]
 80049f0:	68fb      	ldr	r3, [r7, #12]
 80049f2:	e853 3f00 	ldrex	r3, [r3]
 80049f6:	60bb      	str	r3, [r7, #8]
 80049f8:	68bb      	ldr	r3, [r7, #8]
 80049fa:	f023 0310 	bic.w	r3, r3, #16
 80049fe:	647b      	str	r3, [r7, #68]	; 0x44
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	681b      	ldr	r3, [r3, #0]
 8004a04:	330c      	adds	r3, #12
 8004a06:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8004a08:	61ba      	str	r2, [r7, #24]
 8004a0a:	617b      	str	r3, [r7, #20]
 8004a0c:	6979      	ldr	r1, [r7, #20]
 8004a0e:	69ba      	ldr	r2, [r7, #24]
 8004a10:	e841 2300 	strex	r3, r2, [r1]
 8004a14:	613b      	str	r3, [r7, #16]
 8004a16:	693b      	ldr	r3, [r7, #16]
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d1e5      	bne.n	80049e8 <UART_EndRxTransfer+0x78>
 8004a1c:	687b      	ldr	r3, [r7, #4]
 8004a1e:	2220      	movs	r2, #32
 8004a20:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	2200      	movs	r2, #0
 8004a28:	631a      	str	r2, [r3, #48]	; 0x30
 8004a2a:	bf00      	nop
 8004a2c:	3754      	adds	r7, #84	; 0x54
 8004a2e:	46bd      	mov	sp, r7
 8004a30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a34:	4770      	bx	lr

08004a36 <UART_DMAAbortOnError>:
 8004a36:	b580      	push	{r7, lr}
 8004a38:	b084      	sub	sp, #16
 8004a3a:	af00      	add	r7, sp, #0
 8004a3c:	6078      	str	r0, [r7, #4]
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004a42:	60fb      	str	r3, [r7, #12]
 8004a44:	68fb      	ldr	r3, [r7, #12]
 8004a46:	2200      	movs	r2, #0
 8004a48:	85da      	strh	r2, [r3, #46]	; 0x2e
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	2200      	movs	r2, #0
 8004a4e:	84da      	strh	r2, [r3, #38]	; 0x26
 8004a50:	68f8      	ldr	r0, [r7, #12]
 8004a52:	f7ff fd2f 	bl	80044b4 <HAL_UART_ErrorCallback>
 8004a56:	bf00      	nop
 8004a58:	3710      	adds	r7, #16
 8004a5a:	46bd      	mov	sp, r7
 8004a5c:	bd80      	pop	{r7, pc}

08004a5e <UART_Transmit_IT>:
 8004a5e:	b480      	push	{r7}
 8004a60:	b085      	sub	sp, #20
 8004a62:	af00      	add	r7, sp, #0
 8004a64:	6078      	str	r0, [r7, #4]
 8004a66:	687b      	ldr	r3, [r7, #4]
 8004a68:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8004a6c:	b2db      	uxtb	r3, r3
 8004a6e:	2b21      	cmp	r3, #33	; 0x21
 8004a70:	d13e      	bne.n	8004af0 <UART_Transmit_IT+0x92>
 8004a72:	687b      	ldr	r3, [r7, #4]
 8004a74:	689b      	ldr	r3, [r3, #8]
 8004a76:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004a7a:	d114      	bne.n	8004aa6 <UART_Transmit_IT+0x48>
 8004a7c:	687b      	ldr	r3, [r7, #4]
 8004a7e:	691b      	ldr	r3, [r3, #16]
 8004a80:	2b00      	cmp	r3, #0
 8004a82:	d110      	bne.n	8004aa6 <UART_Transmit_IT+0x48>
 8004a84:	687b      	ldr	r3, [r7, #4]
 8004a86:	6a1b      	ldr	r3, [r3, #32]
 8004a88:	60fb      	str	r3, [r7, #12]
 8004a8a:	68fb      	ldr	r3, [r7, #12]
 8004a8c:	881b      	ldrh	r3, [r3, #0]
 8004a8e:	461a      	mov	r2, r3
 8004a90:	687b      	ldr	r3, [r7, #4]
 8004a92:	681b      	ldr	r3, [r3, #0]
 8004a94:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8004a98:	605a      	str	r2, [r3, #4]
 8004a9a:	687b      	ldr	r3, [r7, #4]
 8004a9c:	6a1b      	ldr	r3, [r3, #32]
 8004a9e:	1c9a      	adds	r2, r3, #2
 8004aa0:	687b      	ldr	r3, [r7, #4]
 8004aa2:	621a      	str	r2, [r3, #32]
 8004aa4:	e008      	b.n	8004ab8 <UART_Transmit_IT+0x5a>
 8004aa6:	687b      	ldr	r3, [r7, #4]
 8004aa8:	6a1b      	ldr	r3, [r3, #32]
 8004aaa:	1c59      	adds	r1, r3, #1
 8004aac:	687a      	ldr	r2, [r7, #4]
 8004aae:	6211      	str	r1, [r2, #32]
 8004ab0:	781a      	ldrb	r2, [r3, #0]
 8004ab2:	687b      	ldr	r3, [r7, #4]
 8004ab4:	681b      	ldr	r3, [r3, #0]
 8004ab6:	605a      	str	r2, [r3, #4]
 8004ab8:	687b      	ldr	r3, [r7, #4]
 8004aba:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004abc:	b29b      	uxth	r3, r3
 8004abe:	3b01      	subs	r3, #1
 8004ac0:	b29b      	uxth	r3, r3
 8004ac2:	687a      	ldr	r2, [r7, #4]
 8004ac4:	4619      	mov	r1, r3
 8004ac6:	84d1      	strh	r1, [r2, #38]	; 0x26
 8004ac8:	2b00      	cmp	r3, #0
 8004aca:	d10f      	bne.n	8004aec <UART_Transmit_IT+0x8e>
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	68da      	ldr	r2, [r3, #12]
 8004ad2:	687b      	ldr	r3, [r7, #4]
 8004ad4:	681b      	ldr	r3, [r3, #0]
 8004ad6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004ada:	60da      	str	r2, [r3, #12]
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	681b      	ldr	r3, [r3, #0]
 8004ae0:	68da      	ldr	r2, [r3, #12]
 8004ae2:	687b      	ldr	r3, [r7, #4]
 8004ae4:	681b      	ldr	r3, [r3, #0]
 8004ae6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8004aea:	60da      	str	r2, [r3, #12]
 8004aec:	2300      	movs	r3, #0
 8004aee:	e000      	b.n	8004af2 <UART_Transmit_IT+0x94>
 8004af0:	2302      	movs	r3, #2
 8004af2:	4618      	mov	r0, r3
 8004af4:	3714      	adds	r7, #20
 8004af6:	46bd      	mov	sp, r7
 8004af8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004afc:	4770      	bx	lr

08004afe <UART_EndTransmit_IT>:
 8004afe:	b580      	push	{r7, lr}
 8004b00:	b082      	sub	sp, #8
 8004b02:	af00      	add	r7, sp, #0
 8004b04:	6078      	str	r0, [r7, #4]
 8004b06:	687b      	ldr	r3, [r7, #4]
 8004b08:	681b      	ldr	r3, [r3, #0]
 8004b0a:	68da      	ldr	r2, [r3, #12]
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	681b      	ldr	r3, [r3, #0]
 8004b10:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8004b14:	60da      	str	r2, [r3, #12]
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	2220      	movs	r2, #32
 8004b1a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8004b1e:	6878      	ldr	r0, [r7, #4]
 8004b20:	f7fc ffae 	bl	8001a80 <HAL_UART_TxCpltCallback>
 8004b24:	2300      	movs	r3, #0
 8004b26:	4618      	mov	r0, r3
 8004b28:	3708      	adds	r7, #8
 8004b2a:	46bd      	mov	sp, r7
 8004b2c:	bd80      	pop	{r7, pc}

08004b2e <UART_Receive_IT>:
 8004b2e:	b580      	push	{r7, lr}
 8004b30:	b08c      	sub	sp, #48	; 0x30
 8004b32:	af00      	add	r7, sp, #0
 8004b34:	6078      	str	r0, [r7, #4]
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8004b3c:	b2db      	uxtb	r3, r3
 8004b3e:	2b22      	cmp	r3, #34	; 0x22
 8004b40:	f040 80ae 	bne.w	8004ca0 <UART_Receive_IT+0x172>
 8004b44:	687b      	ldr	r3, [r7, #4]
 8004b46:	689b      	ldr	r3, [r3, #8]
 8004b48:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004b4c:	d117      	bne.n	8004b7e <UART_Receive_IT+0x50>
 8004b4e:	687b      	ldr	r3, [r7, #4]
 8004b50:	691b      	ldr	r3, [r3, #16]
 8004b52:	2b00      	cmp	r3, #0
 8004b54:	d113      	bne.n	8004b7e <UART_Receive_IT+0x50>
 8004b56:	2300      	movs	r3, #0
 8004b58:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b5e:	62bb      	str	r3, [r7, #40]	; 0x28
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	681b      	ldr	r3, [r3, #0]
 8004b64:	685b      	ldr	r3, [r3, #4]
 8004b66:	b29b      	uxth	r3, r3
 8004b68:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8004b6c:	b29a      	uxth	r2, r3
 8004b6e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004b70:	801a      	strh	r2, [r3, #0]
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b76:	1c9a      	adds	r2, r3, #2
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	629a      	str	r2, [r3, #40]	; 0x28
 8004b7c:	e026      	b.n	8004bcc <UART_Receive_IT+0x9e>
 8004b7e:	687b      	ldr	r3, [r7, #4]
 8004b80:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004b82:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004b84:	2300      	movs	r3, #0
 8004b86:	62bb      	str	r3, [r7, #40]	; 0x28
 8004b88:	687b      	ldr	r3, [r7, #4]
 8004b8a:	689b      	ldr	r3, [r3, #8]
 8004b8c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8004b90:	d007      	beq.n	8004ba2 <UART_Receive_IT+0x74>
 8004b92:	687b      	ldr	r3, [r7, #4]
 8004b94:	689b      	ldr	r3, [r3, #8]
 8004b96:	2b00      	cmp	r3, #0
 8004b98:	d10a      	bne.n	8004bb0 <UART_Receive_IT+0x82>
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	691b      	ldr	r3, [r3, #16]
 8004b9e:	2b00      	cmp	r3, #0
 8004ba0:	d106      	bne.n	8004bb0 <UART_Receive_IT+0x82>
 8004ba2:	687b      	ldr	r3, [r7, #4]
 8004ba4:	681b      	ldr	r3, [r3, #0]
 8004ba6:	685b      	ldr	r3, [r3, #4]
 8004ba8:	b2da      	uxtb	r2, r3
 8004baa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004bac:	701a      	strb	r2, [r3, #0]
 8004bae:	e008      	b.n	8004bc2 <UART_Receive_IT+0x94>
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	681b      	ldr	r3, [r3, #0]
 8004bb4:	685b      	ldr	r3, [r3, #4]
 8004bb6:	b2db      	uxtb	r3, r3
 8004bb8:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8004bbc:	b2da      	uxtb	r2, r3
 8004bbe:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8004bc0:	701a      	strb	r2, [r3, #0]
 8004bc2:	687b      	ldr	r3, [r7, #4]
 8004bc4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004bc6:	1c5a      	adds	r2, r3, #1
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	629a      	str	r2, [r3, #40]	; 0x28
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8004bd0:	b29b      	uxth	r3, r3
 8004bd2:	3b01      	subs	r3, #1
 8004bd4:	b29b      	uxth	r3, r3
 8004bd6:	687a      	ldr	r2, [r7, #4]
 8004bd8:	4619      	mov	r1, r3
 8004bda:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8004bdc:	2b00      	cmp	r3, #0
 8004bde:	d15d      	bne.n	8004c9c <UART_Receive_IT+0x16e>
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	681b      	ldr	r3, [r3, #0]
 8004be4:	68da      	ldr	r2, [r3, #12]
 8004be6:	687b      	ldr	r3, [r7, #4]
 8004be8:	681b      	ldr	r3, [r3, #0]
 8004bea:	f022 0220 	bic.w	r2, r2, #32
 8004bee:	60da      	str	r2, [r3, #12]
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	68da      	ldr	r2, [r3, #12]
 8004bf6:	687b      	ldr	r3, [r7, #4]
 8004bf8:	681b      	ldr	r3, [r3, #0]
 8004bfa:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8004bfe:	60da      	str	r2, [r3, #12]
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	695a      	ldr	r2, [r3, #20]
 8004c06:	687b      	ldr	r3, [r7, #4]
 8004c08:	681b      	ldr	r3, [r3, #0]
 8004c0a:	f022 0201 	bic.w	r2, r2, #1
 8004c0e:	615a      	str	r2, [r3, #20]
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	2220      	movs	r2, #32
 8004c14:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	2200      	movs	r2, #0
 8004c1c:	635a      	str	r2, [r3, #52]	; 0x34
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004c22:	2b01      	cmp	r3, #1
 8004c24:	d135      	bne.n	8004c92 <UART_Receive_IT+0x164>
 8004c26:	687b      	ldr	r3, [r7, #4]
 8004c28:	2200      	movs	r2, #0
 8004c2a:	631a      	str	r2, [r3, #48]	; 0x30
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	681b      	ldr	r3, [r3, #0]
 8004c30:	330c      	adds	r3, #12
 8004c32:	617b      	str	r3, [r7, #20]
 8004c34:	697b      	ldr	r3, [r7, #20]
 8004c36:	e853 3f00 	ldrex	r3, [r3]
 8004c3a:	613b      	str	r3, [r7, #16]
 8004c3c:	693b      	ldr	r3, [r7, #16]
 8004c3e:	f023 0310 	bic.w	r3, r3, #16
 8004c42:	627b      	str	r3, [r7, #36]	; 0x24
 8004c44:	687b      	ldr	r3, [r7, #4]
 8004c46:	681b      	ldr	r3, [r3, #0]
 8004c48:	330c      	adds	r3, #12
 8004c4a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004c4c:	623a      	str	r2, [r7, #32]
 8004c4e:	61fb      	str	r3, [r7, #28]
 8004c50:	69f9      	ldr	r1, [r7, #28]
 8004c52:	6a3a      	ldr	r2, [r7, #32]
 8004c54:	e841 2300 	strex	r3, r2, [r1]
 8004c58:	61bb      	str	r3, [r7, #24]
 8004c5a:	69bb      	ldr	r3, [r7, #24]
 8004c5c:	2b00      	cmp	r3, #0
 8004c5e:	d1e5      	bne.n	8004c2c <UART_Receive_IT+0xfe>
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	f003 0310 	and.w	r3, r3, #16
 8004c6a:	2b10      	cmp	r3, #16
 8004c6c:	d10a      	bne.n	8004c84 <UART_Receive_IT+0x156>
 8004c6e:	2300      	movs	r3, #0
 8004c70:	60fb      	str	r3, [r7, #12]
 8004c72:	687b      	ldr	r3, [r7, #4]
 8004c74:	681b      	ldr	r3, [r3, #0]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	60fb      	str	r3, [r7, #12]
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	685b      	ldr	r3, [r3, #4]
 8004c80:	60fb      	str	r3, [r7, #12]
 8004c82:	68fb      	ldr	r3, [r7, #12]
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8004c88:	4619      	mov	r1, r3
 8004c8a:	6878      	ldr	r0, [r7, #4]
 8004c8c:	f7fc ff52 	bl	8001b34 <HAL_UARTEx_RxEventCallback>
 8004c90:	e002      	b.n	8004c98 <UART_Receive_IT+0x16a>
 8004c92:	6878      	ldr	r0, [r7, #4]
 8004c94:	f7fc fefe 	bl	8001a94 <HAL_UART_RxCpltCallback>
 8004c98:	2300      	movs	r3, #0
 8004c9a:	e002      	b.n	8004ca2 <UART_Receive_IT+0x174>
 8004c9c:	2300      	movs	r3, #0
 8004c9e:	e000      	b.n	8004ca2 <UART_Receive_IT+0x174>
 8004ca0:	2302      	movs	r3, #2
 8004ca2:	4618      	mov	r0, r3
 8004ca4:	3730      	adds	r7, #48	; 0x30
 8004ca6:	46bd      	mov	sp, r7
 8004ca8:	bd80      	pop	{r7, pc}
	...

08004cac <UART_SetConfig>:
 8004cac:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8004cb0:	b0c0      	sub	sp, #256	; 0x100
 8004cb2:	af00      	add	r7, sp, #0
 8004cb4:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8004cb8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	691b      	ldr	r3, [r3, #16]
 8004cc0:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8004cc4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004cc8:	68d9      	ldr	r1, [r3, #12]
 8004cca:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004cce:	681a      	ldr	r2, [r3, #0]
 8004cd0:	ea40 0301 	orr.w	r3, r0, r1
 8004cd4:	6113      	str	r3, [r2, #16]
 8004cd6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004cda:	689a      	ldr	r2, [r3, #8]
 8004cdc:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ce0:	691b      	ldr	r3, [r3, #16]
 8004ce2:	431a      	orrs	r2, r3
 8004ce4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004ce8:	695b      	ldr	r3, [r3, #20]
 8004cea:	431a      	orrs	r2, r3
 8004cec:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004cf0:	69db      	ldr	r3, [r3, #28]
 8004cf2:	4313      	orrs	r3, r2
 8004cf4:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8004cf8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004cfc:	681b      	ldr	r3, [r3, #0]
 8004cfe:	68db      	ldr	r3, [r3, #12]
 8004d00:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8004d04:	f021 010c 	bic.w	r1, r1, #12
 8004d08:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d0c:	681a      	ldr	r2, [r3, #0]
 8004d0e:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8004d12:	430b      	orrs	r3, r1
 8004d14:	60d3      	str	r3, [r2, #12]
 8004d16:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d1a:	681b      	ldr	r3, [r3, #0]
 8004d1c:	695b      	ldr	r3, [r3, #20]
 8004d1e:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8004d22:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d26:	6999      	ldr	r1, [r3, #24]
 8004d28:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d2c:	681a      	ldr	r2, [r3, #0]
 8004d2e:	ea40 0301 	orr.w	r3, r0, r1
 8004d32:	6153      	str	r3, [r2, #20]
 8004d34:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d38:	681a      	ldr	r2, [r3, #0]
 8004d3a:	4b8f      	ldr	r3, [pc, #572]	; (8004f78 <UART_SetConfig+0x2cc>)
 8004d3c:	429a      	cmp	r2, r3
 8004d3e:	d005      	beq.n	8004d4c <UART_SetConfig+0xa0>
 8004d40:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d44:	681a      	ldr	r2, [r3, #0]
 8004d46:	4b8d      	ldr	r3, [pc, #564]	; (8004f7c <UART_SetConfig+0x2d0>)
 8004d48:	429a      	cmp	r2, r3
 8004d4a:	d104      	bne.n	8004d56 <UART_SetConfig+0xaa>
 8004d4c:	f7fe ff6e 	bl	8003c2c <HAL_RCC_GetPCLK2Freq>
 8004d50:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8004d54:	e003      	b.n	8004d5e <UART_SetConfig+0xb2>
 8004d56:	f7fe ff55 	bl	8003c04 <HAL_RCC_GetPCLK1Freq>
 8004d5a:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8004d5e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004d62:	69db      	ldr	r3, [r3, #28]
 8004d64:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004d68:	f040 810c 	bne.w	8004f84 <UART_SetConfig+0x2d8>
 8004d6c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004d70:	2200      	movs	r2, #0
 8004d72:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8004d76:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8004d7a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8004d7e:	4622      	mov	r2, r4
 8004d80:	462b      	mov	r3, r5
 8004d82:	1891      	adds	r1, r2, r2
 8004d84:	65b9      	str	r1, [r7, #88]	; 0x58
 8004d86:	415b      	adcs	r3, r3
 8004d88:	65fb      	str	r3, [r7, #92]	; 0x5c
 8004d8a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8004d8e:	4621      	mov	r1, r4
 8004d90:	eb12 0801 	adds.w	r8, r2, r1
 8004d94:	4629      	mov	r1, r5
 8004d96:	eb43 0901 	adc.w	r9, r3, r1
 8004d9a:	f04f 0200 	mov.w	r2, #0
 8004d9e:	f04f 0300 	mov.w	r3, #0
 8004da2:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8004da6:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8004daa:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8004dae:	4690      	mov	r8, r2
 8004db0:	4699      	mov	r9, r3
 8004db2:	4623      	mov	r3, r4
 8004db4:	eb18 0303 	adds.w	r3, r8, r3
 8004db8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8004dbc:	462b      	mov	r3, r5
 8004dbe:	eb49 0303 	adc.w	r3, r9, r3
 8004dc2:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8004dc6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004dca:	685b      	ldr	r3, [r3, #4]
 8004dcc:	2200      	movs	r2, #0
 8004dce:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8004dd2:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8004dd6:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8004dda:	460b      	mov	r3, r1
 8004ddc:	18db      	adds	r3, r3, r3
 8004dde:	653b      	str	r3, [r7, #80]	; 0x50
 8004de0:	4613      	mov	r3, r2
 8004de2:	eb42 0303 	adc.w	r3, r2, r3
 8004de6:	657b      	str	r3, [r7, #84]	; 0x54
 8004de8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8004dec:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8004df0:	f7fb fa66 	bl	80002c0 <__aeabi_uldivmod>
 8004df4:	4602      	mov	r2, r0
 8004df6:	460b      	mov	r3, r1
 8004df8:	4b61      	ldr	r3, [pc, #388]	; (8004f80 <UART_SetConfig+0x2d4>)
 8004dfa:	fba3 2302 	umull	r2, r3, r3, r2
 8004dfe:	095b      	lsrs	r3, r3, #5
 8004e00:	011c      	lsls	r4, r3, #4
 8004e02:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004e06:	2200      	movs	r2, #0
 8004e08:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8004e0c:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8004e10:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8004e14:	4642      	mov	r2, r8
 8004e16:	464b      	mov	r3, r9
 8004e18:	1891      	adds	r1, r2, r2
 8004e1a:	64b9      	str	r1, [r7, #72]	; 0x48
 8004e1c:	415b      	adcs	r3, r3
 8004e1e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8004e20:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8004e24:	4641      	mov	r1, r8
 8004e26:	eb12 0a01 	adds.w	sl, r2, r1
 8004e2a:	4649      	mov	r1, r9
 8004e2c:	eb43 0b01 	adc.w	fp, r3, r1
 8004e30:	f04f 0200 	mov.w	r2, #0
 8004e34:	f04f 0300 	mov.w	r3, #0
 8004e38:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8004e3c:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8004e40:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004e44:	4692      	mov	sl, r2
 8004e46:	469b      	mov	fp, r3
 8004e48:	4643      	mov	r3, r8
 8004e4a:	eb1a 0303 	adds.w	r3, sl, r3
 8004e4e:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8004e52:	464b      	mov	r3, r9
 8004e54:	eb4b 0303 	adc.w	r3, fp, r3
 8004e58:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8004e5c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004e60:	685b      	ldr	r3, [r3, #4]
 8004e62:	2200      	movs	r2, #0
 8004e64:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8004e68:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8004e6c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 8004e70:	460b      	mov	r3, r1
 8004e72:	18db      	adds	r3, r3, r3
 8004e74:	643b      	str	r3, [r7, #64]	; 0x40
 8004e76:	4613      	mov	r3, r2
 8004e78:	eb42 0303 	adc.w	r3, r2, r3
 8004e7c:	647b      	str	r3, [r7, #68]	; 0x44
 8004e7e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 8004e82:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8004e86:	f7fb fa1b 	bl	80002c0 <__aeabi_uldivmod>
 8004e8a:	4602      	mov	r2, r0
 8004e8c:	460b      	mov	r3, r1
 8004e8e:	4611      	mov	r1, r2
 8004e90:	4b3b      	ldr	r3, [pc, #236]	; (8004f80 <UART_SetConfig+0x2d4>)
 8004e92:	fba3 2301 	umull	r2, r3, r3, r1
 8004e96:	095b      	lsrs	r3, r3, #5
 8004e98:	2264      	movs	r2, #100	; 0x64
 8004e9a:	fb02 f303 	mul.w	r3, r2, r3
 8004e9e:	1acb      	subs	r3, r1, r3
 8004ea0:	00db      	lsls	r3, r3, #3
 8004ea2:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8004ea6:	4b36      	ldr	r3, [pc, #216]	; (8004f80 <UART_SetConfig+0x2d4>)
 8004ea8:	fba3 2302 	umull	r2, r3, r3, r2
 8004eac:	095b      	lsrs	r3, r3, #5
 8004eae:	005b      	lsls	r3, r3, #1
 8004eb0:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8004eb4:	441c      	add	r4, r3
 8004eb6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004eba:	2200      	movs	r2, #0
 8004ebc:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8004ec0:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8004ec4:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8004ec8:	4642      	mov	r2, r8
 8004eca:	464b      	mov	r3, r9
 8004ecc:	1891      	adds	r1, r2, r2
 8004ece:	63b9      	str	r1, [r7, #56]	; 0x38
 8004ed0:	415b      	adcs	r3, r3
 8004ed2:	63fb      	str	r3, [r7, #60]	; 0x3c
 8004ed4:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 8004ed8:	4641      	mov	r1, r8
 8004eda:	1851      	adds	r1, r2, r1
 8004edc:	6339      	str	r1, [r7, #48]	; 0x30
 8004ede:	4649      	mov	r1, r9
 8004ee0:	414b      	adcs	r3, r1
 8004ee2:	637b      	str	r3, [r7, #52]	; 0x34
 8004ee4:	f04f 0200 	mov.w	r2, #0
 8004ee8:	f04f 0300 	mov.w	r3, #0
 8004eec:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 8004ef0:	4659      	mov	r1, fp
 8004ef2:	00cb      	lsls	r3, r1, #3
 8004ef4:	4651      	mov	r1, sl
 8004ef6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8004efa:	4651      	mov	r1, sl
 8004efc:	00ca      	lsls	r2, r1, #3
 8004efe:	4610      	mov	r0, r2
 8004f00:	4619      	mov	r1, r3
 8004f02:	4603      	mov	r3, r0
 8004f04:	4642      	mov	r2, r8
 8004f06:	189b      	adds	r3, r3, r2
 8004f08:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8004f0c:	464b      	mov	r3, r9
 8004f0e:	460a      	mov	r2, r1
 8004f10:	eb42 0303 	adc.w	r3, r2, r3
 8004f14:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 8004f18:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004f1c:	685b      	ldr	r3, [r3, #4]
 8004f1e:	2200      	movs	r2, #0
 8004f20:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 8004f24:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 8004f28:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 8004f2c:	460b      	mov	r3, r1
 8004f2e:	18db      	adds	r3, r3, r3
 8004f30:	62bb      	str	r3, [r7, #40]	; 0x28
 8004f32:	4613      	mov	r3, r2
 8004f34:	eb42 0303 	adc.w	r3, r2, r3
 8004f38:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004f3a:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8004f3e:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 8004f42:	f7fb f9bd 	bl	80002c0 <__aeabi_uldivmod>
 8004f46:	4602      	mov	r2, r0
 8004f48:	460b      	mov	r3, r1
 8004f4a:	4b0d      	ldr	r3, [pc, #52]	; (8004f80 <UART_SetConfig+0x2d4>)
 8004f4c:	fba3 1302 	umull	r1, r3, r3, r2
 8004f50:	095b      	lsrs	r3, r3, #5
 8004f52:	2164      	movs	r1, #100	; 0x64
 8004f54:	fb01 f303 	mul.w	r3, r1, r3
 8004f58:	1ad3      	subs	r3, r2, r3
 8004f5a:	00db      	lsls	r3, r3, #3
 8004f5c:	3332      	adds	r3, #50	; 0x32
 8004f5e:	4a08      	ldr	r2, [pc, #32]	; (8004f80 <UART_SetConfig+0x2d4>)
 8004f60:	fba2 2303 	umull	r2, r3, r2, r3
 8004f64:	095b      	lsrs	r3, r3, #5
 8004f66:	f003 0207 	and.w	r2, r3, #7
 8004f6a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	4422      	add	r2, r4
 8004f72:	609a      	str	r2, [r3, #8]
 8004f74:	e106      	b.n	8005184 <UART_SetConfig+0x4d8>
 8004f76:	bf00      	nop
 8004f78:	40011000 	.word	0x40011000
 8004f7c:	40011400 	.word	0x40011400
 8004f80:	51eb851f 	.word	0x51eb851f
 8004f84:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8004f88:	2200      	movs	r2, #0
 8004f8a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8004f8e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8004f92:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8004f96:	4642      	mov	r2, r8
 8004f98:	464b      	mov	r3, r9
 8004f9a:	1891      	adds	r1, r2, r2
 8004f9c:	6239      	str	r1, [r7, #32]
 8004f9e:	415b      	adcs	r3, r3
 8004fa0:	627b      	str	r3, [r7, #36]	; 0x24
 8004fa2:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8004fa6:	4641      	mov	r1, r8
 8004fa8:	1854      	adds	r4, r2, r1
 8004faa:	4649      	mov	r1, r9
 8004fac:	eb43 0501 	adc.w	r5, r3, r1
 8004fb0:	f04f 0200 	mov.w	r2, #0
 8004fb4:	f04f 0300 	mov.w	r3, #0
 8004fb8:	00eb      	lsls	r3, r5, #3
 8004fba:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8004fbe:	00e2      	lsls	r2, r4, #3
 8004fc0:	4614      	mov	r4, r2
 8004fc2:	461d      	mov	r5, r3
 8004fc4:	4643      	mov	r3, r8
 8004fc6:	18e3      	adds	r3, r4, r3
 8004fc8:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8004fcc:	464b      	mov	r3, r9
 8004fce:	eb45 0303 	adc.w	r3, r5, r3
 8004fd2:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8004fd6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8004fda:	685b      	ldr	r3, [r3, #4]
 8004fdc:	2200      	movs	r2, #0
 8004fde:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8004fe2:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8004fe6:	f04f 0200 	mov.w	r2, #0
 8004fea:	f04f 0300 	mov.w	r3, #0
 8004fee:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 8004ff2:	4629      	mov	r1, r5
 8004ff4:	008b      	lsls	r3, r1, #2
 8004ff6:	4621      	mov	r1, r4
 8004ff8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8004ffc:	4621      	mov	r1, r4
 8004ffe:	008a      	lsls	r2, r1, #2
 8005000:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 8005004:	f7fb f95c 	bl	80002c0 <__aeabi_uldivmod>
 8005008:	4602      	mov	r2, r0
 800500a:	460b      	mov	r3, r1
 800500c:	4b60      	ldr	r3, [pc, #384]	; (8005190 <UART_SetConfig+0x4e4>)
 800500e:	fba3 2302 	umull	r2, r3, r3, r2
 8005012:	095b      	lsrs	r3, r3, #5
 8005014:	011c      	lsls	r4, r3, #4
 8005016:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800501a:	2200      	movs	r2, #0
 800501c:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8005020:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 8005024:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 8005028:	4642      	mov	r2, r8
 800502a:	464b      	mov	r3, r9
 800502c:	1891      	adds	r1, r2, r2
 800502e:	61b9      	str	r1, [r7, #24]
 8005030:	415b      	adcs	r3, r3
 8005032:	61fb      	str	r3, [r7, #28]
 8005034:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8005038:	4641      	mov	r1, r8
 800503a:	1851      	adds	r1, r2, r1
 800503c:	6139      	str	r1, [r7, #16]
 800503e:	4649      	mov	r1, r9
 8005040:	414b      	adcs	r3, r1
 8005042:	617b      	str	r3, [r7, #20]
 8005044:	f04f 0200 	mov.w	r2, #0
 8005048:	f04f 0300 	mov.w	r3, #0
 800504c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8005050:	4659      	mov	r1, fp
 8005052:	00cb      	lsls	r3, r1, #3
 8005054:	4651      	mov	r1, sl
 8005056:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800505a:	4651      	mov	r1, sl
 800505c:	00ca      	lsls	r2, r1, #3
 800505e:	4610      	mov	r0, r2
 8005060:	4619      	mov	r1, r3
 8005062:	4603      	mov	r3, r0
 8005064:	4642      	mov	r2, r8
 8005066:	189b      	adds	r3, r3, r2
 8005068:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800506c:	464b      	mov	r3, r9
 800506e:	460a      	mov	r2, r1
 8005070:	eb42 0303 	adc.w	r3, r2, r3
 8005074:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8005078:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800507c:	685b      	ldr	r3, [r3, #4]
 800507e:	2200      	movs	r2, #0
 8005080:	67bb      	str	r3, [r7, #120]	; 0x78
 8005082:	67fa      	str	r2, [r7, #124]	; 0x7c
 8005084:	f04f 0200 	mov.w	r2, #0
 8005088:	f04f 0300 	mov.w	r3, #0
 800508c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 8005090:	4649      	mov	r1, r9
 8005092:	008b      	lsls	r3, r1, #2
 8005094:	4641      	mov	r1, r8
 8005096:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800509a:	4641      	mov	r1, r8
 800509c:	008a      	lsls	r2, r1, #2
 800509e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 80050a2:	f7fb f90d 	bl	80002c0 <__aeabi_uldivmod>
 80050a6:	4602      	mov	r2, r0
 80050a8:	460b      	mov	r3, r1
 80050aa:	4611      	mov	r1, r2
 80050ac:	4b38      	ldr	r3, [pc, #224]	; (8005190 <UART_SetConfig+0x4e4>)
 80050ae:	fba3 2301 	umull	r2, r3, r3, r1
 80050b2:	095b      	lsrs	r3, r3, #5
 80050b4:	2264      	movs	r2, #100	; 0x64
 80050b6:	fb02 f303 	mul.w	r3, r2, r3
 80050ba:	1acb      	subs	r3, r1, r3
 80050bc:	011b      	lsls	r3, r3, #4
 80050be:	3332      	adds	r3, #50	; 0x32
 80050c0:	4a33      	ldr	r2, [pc, #204]	; (8005190 <UART_SetConfig+0x4e4>)
 80050c2:	fba2 2303 	umull	r2, r3, r2, r3
 80050c6:	095b      	lsrs	r3, r3, #5
 80050c8:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80050cc:	441c      	add	r4, r3
 80050ce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80050d2:	2200      	movs	r2, #0
 80050d4:	673b      	str	r3, [r7, #112]	; 0x70
 80050d6:	677a      	str	r2, [r7, #116]	; 0x74
 80050d8:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 80050dc:	4642      	mov	r2, r8
 80050de:	464b      	mov	r3, r9
 80050e0:	1891      	adds	r1, r2, r2
 80050e2:	60b9      	str	r1, [r7, #8]
 80050e4:	415b      	adcs	r3, r3
 80050e6:	60fb      	str	r3, [r7, #12]
 80050e8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80050ec:	4641      	mov	r1, r8
 80050ee:	1851      	adds	r1, r2, r1
 80050f0:	6039      	str	r1, [r7, #0]
 80050f2:	4649      	mov	r1, r9
 80050f4:	414b      	adcs	r3, r1
 80050f6:	607b      	str	r3, [r7, #4]
 80050f8:	f04f 0200 	mov.w	r2, #0
 80050fc:	f04f 0300 	mov.w	r3, #0
 8005100:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8005104:	4659      	mov	r1, fp
 8005106:	00cb      	lsls	r3, r1, #3
 8005108:	4651      	mov	r1, sl
 800510a:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800510e:	4651      	mov	r1, sl
 8005110:	00ca      	lsls	r2, r1, #3
 8005112:	4610      	mov	r0, r2
 8005114:	4619      	mov	r1, r3
 8005116:	4603      	mov	r3, r0
 8005118:	4642      	mov	r2, r8
 800511a:	189b      	adds	r3, r3, r2
 800511c:	66bb      	str	r3, [r7, #104]	; 0x68
 800511e:	464b      	mov	r3, r9
 8005120:	460a      	mov	r2, r1
 8005122:	eb42 0303 	adc.w	r3, r2, r3
 8005126:	66fb      	str	r3, [r7, #108]	; 0x6c
 8005128:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800512c:	685b      	ldr	r3, [r3, #4]
 800512e:	2200      	movs	r2, #0
 8005130:	663b      	str	r3, [r7, #96]	; 0x60
 8005132:	667a      	str	r2, [r7, #100]	; 0x64
 8005134:	f04f 0200 	mov.w	r2, #0
 8005138:	f04f 0300 	mov.w	r3, #0
 800513c:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8005140:	4649      	mov	r1, r9
 8005142:	008b      	lsls	r3, r1, #2
 8005144:	4641      	mov	r1, r8
 8005146:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800514a:	4641      	mov	r1, r8
 800514c:	008a      	lsls	r2, r1, #2
 800514e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 8005152:	f7fb f8b5 	bl	80002c0 <__aeabi_uldivmod>
 8005156:	4602      	mov	r2, r0
 8005158:	460b      	mov	r3, r1
 800515a:	4b0d      	ldr	r3, [pc, #52]	; (8005190 <UART_SetConfig+0x4e4>)
 800515c:	fba3 1302 	umull	r1, r3, r3, r2
 8005160:	095b      	lsrs	r3, r3, #5
 8005162:	2164      	movs	r1, #100	; 0x64
 8005164:	fb01 f303 	mul.w	r3, r1, r3
 8005168:	1ad3      	subs	r3, r2, r3
 800516a:	011b      	lsls	r3, r3, #4
 800516c:	3332      	adds	r3, #50	; 0x32
 800516e:	4a08      	ldr	r2, [pc, #32]	; (8005190 <UART_SetConfig+0x4e4>)
 8005170:	fba2 2303 	umull	r2, r3, r2, r3
 8005174:	095b      	lsrs	r3, r3, #5
 8005176:	f003 020f 	and.w	r2, r3, #15
 800517a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800517e:	681b      	ldr	r3, [r3, #0]
 8005180:	4422      	add	r2, r4
 8005182:	609a      	str	r2, [r3, #8]
 8005184:	bf00      	nop
 8005186:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800518a:	46bd      	mov	sp, r7
 800518c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005190:	51eb851f 	.word	0x51eb851f

08005194 <USB_CoreInit>:
 8005194:	b084      	sub	sp, #16
 8005196:	b580      	push	{r7, lr}
 8005198:	b084      	sub	sp, #16
 800519a:	af00      	add	r7, sp, #0
 800519c:	6078      	str	r0, [r7, #4]
 800519e:	f107 001c 	add.w	r0, r7, #28
 80051a2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 80051a6:	f897 3021 	ldrb.w	r3, [r7, #33]	; 0x21
 80051aa:	2b01      	cmp	r3, #1
 80051ac:	d123      	bne.n	80051f6 <USB_CoreInit+0x62>
 80051ae:	687b      	ldr	r3, [r7, #4]
 80051b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051b2:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	639a      	str	r2, [r3, #56]	; 0x38
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	68db      	ldr	r3, [r3, #12]
 80051be:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 80051c2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80051c6:	687a      	ldr	r2, [r7, #4]
 80051c8:	60d3      	str	r3, [r2, #12]
 80051ca:	687b      	ldr	r3, [r7, #4]
 80051cc:	68db      	ldr	r3, [r3, #12]
 80051ce:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 80051d2:	687b      	ldr	r3, [r7, #4]
 80051d4:	60da      	str	r2, [r3, #12]
 80051d6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80051da:	2b01      	cmp	r3, #1
 80051dc:	d105      	bne.n	80051ea <USB_CoreInit+0x56>
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	68db      	ldr	r3, [r3, #12]
 80051e2:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	60da      	str	r2, [r3, #12]
 80051ea:	6878      	ldr	r0, [r7, #4]
 80051ec:	f000 faa0 	bl	8005730 <USB_CoreReset>
 80051f0:	4603      	mov	r3, r0
 80051f2:	73fb      	strb	r3, [r7, #15]
 80051f4:	e01b      	b.n	800522e <USB_CoreInit+0x9a>
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	68db      	ldr	r3, [r3, #12]
 80051fa:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 80051fe:	687b      	ldr	r3, [r7, #4]
 8005200:	60da      	str	r2, [r3, #12]
 8005202:	6878      	ldr	r0, [r7, #4]
 8005204:	f000 fa94 	bl	8005730 <USB_CoreReset>
 8005208:	4603      	mov	r3, r0
 800520a:	73fb      	strb	r3, [r7, #15]
 800520c:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8005210:	2b00      	cmp	r3, #0
 8005212:	d106      	bne.n	8005222 <USB_CoreInit+0x8e>
 8005214:	687b      	ldr	r3, [r7, #4]
 8005216:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005218:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 800521c:	687b      	ldr	r3, [r7, #4]
 800521e:	639a      	str	r2, [r3, #56]	; 0x38
 8005220:	e005      	b.n	800522e <USB_CoreInit+0x9a>
 8005222:	687b      	ldr	r3, [r7, #4]
 8005224:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005226:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800522a:	687b      	ldr	r3, [r7, #4]
 800522c:	639a      	str	r2, [r3, #56]	; 0x38
 800522e:	7fbb      	ldrb	r3, [r7, #30]
 8005230:	2b01      	cmp	r3, #1
 8005232:	d10b      	bne.n	800524c <USB_CoreInit+0xb8>
 8005234:	687b      	ldr	r3, [r7, #4]
 8005236:	689b      	ldr	r3, [r3, #8]
 8005238:	f043 0206 	orr.w	r2, r3, #6
 800523c:	687b      	ldr	r3, [r7, #4]
 800523e:	609a      	str	r2, [r3, #8]
 8005240:	687b      	ldr	r3, [r7, #4]
 8005242:	689b      	ldr	r3, [r3, #8]
 8005244:	f043 0220 	orr.w	r2, r3, #32
 8005248:	687b      	ldr	r3, [r7, #4]
 800524a:	609a      	str	r2, [r3, #8]
 800524c:	7bfb      	ldrb	r3, [r7, #15]
 800524e:	4618      	mov	r0, r3
 8005250:	3710      	adds	r7, #16
 8005252:	46bd      	mov	sp, r7
 8005254:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8005258:	b004      	add	sp, #16
 800525a:	4770      	bx	lr

0800525c <USB_DisableGlobalInt>:
 800525c:	b480      	push	{r7}
 800525e:	b083      	sub	sp, #12
 8005260:	af00      	add	r7, sp, #0
 8005262:	6078      	str	r0, [r7, #4]
 8005264:	687b      	ldr	r3, [r7, #4]
 8005266:	689b      	ldr	r3, [r3, #8]
 8005268:	f023 0201 	bic.w	r2, r3, #1
 800526c:	687b      	ldr	r3, [r7, #4]
 800526e:	609a      	str	r2, [r3, #8]
 8005270:	2300      	movs	r3, #0
 8005272:	4618      	mov	r0, r3
 8005274:	370c      	adds	r7, #12
 8005276:	46bd      	mov	sp, r7
 8005278:	f85d 7b04 	ldr.w	r7, [sp], #4
 800527c:	4770      	bx	lr

0800527e <USB_SetCurrentMode>:
 800527e:	b580      	push	{r7, lr}
 8005280:	b084      	sub	sp, #16
 8005282:	af00      	add	r7, sp, #0
 8005284:	6078      	str	r0, [r7, #4]
 8005286:	460b      	mov	r3, r1
 8005288:	70fb      	strb	r3, [r7, #3]
 800528a:	2300      	movs	r3, #0
 800528c:	60fb      	str	r3, [r7, #12]
 800528e:	687b      	ldr	r3, [r7, #4]
 8005290:	68db      	ldr	r3, [r3, #12]
 8005292:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 8005296:	687b      	ldr	r3, [r7, #4]
 8005298:	60da      	str	r2, [r3, #12]
 800529a:	78fb      	ldrb	r3, [r7, #3]
 800529c:	2b01      	cmp	r3, #1
 800529e:	d115      	bne.n	80052cc <USB_SetCurrentMode+0x4e>
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	68db      	ldr	r3, [r3, #12]
 80052a4:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	60da      	str	r2, [r3, #12]
 80052ac:	200a      	movs	r0, #10
 80052ae:	f7fc fd05 	bl	8001cbc <HAL_Delay>
 80052b2:	68fb      	ldr	r3, [r7, #12]
 80052b4:	330a      	adds	r3, #10
 80052b6:	60fb      	str	r3, [r7, #12]
 80052b8:	6878      	ldr	r0, [r7, #4]
 80052ba:	f000 fa2b 	bl	8005714 <USB_GetMode>
 80052be:	4603      	mov	r3, r0
 80052c0:	2b01      	cmp	r3, #1
 80052c2:	d01e      	beq.n	8005302 <USB_SetCurrentMode+0x84>
 80052c4:	68fb      	ldr	r3, [r7, #12]
 80052c6:	2bc7      	cmp	r3, #199	; 0xc7
 80052c8:	d9f0      	bls.n	80052ac <USB_SetCurrentMode+0x2e>
 80052ca:	e01a      	b.n	8005302 <USB_SetCurrentMode+0x84>
 80052cc:	78fb      	ldrb	r3, [r7, #3]
 80052ce:	2b00      	cmp	r3, #0
 80052d0:	d115      	bne.n	80052fe <USB_SetCurrentMode+0x80>
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	68db      	ldr	r3, [r3, #12]
 80052d6:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 80052da:	687b      	ldr	r3, [r7, #4]
 80052dc:	60da      	str	r2, [r3, #12]
 80052de:	200a      	movs	r0, #10
 80052e0:	f7fc fcec 	bl	8001cbc <HAL_Delay>
 80052e4:	68fb      	ldr	r3, [r7, #12]
 80052e6:	330a      	adds	r3, #10
 80052e8:	60fb      	str	r3, [r7, #12]
 80052ea:	6878      	ldr	r0, [r7, #4]
 80052ec:	f000 fa12 	bl	8005714 <USB_GetMode>
 80052f0:	4603      	mov	r3, r0
 80052f2:	2b00      	cmp	r3, #0
 80052f4:	d005      	beq.n	8005302 <USB_SetCurrentMode+0x84>
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	2bc7      	cmp	r3, #199	; 0xc7
 80052fa:	d9f0      	bls.n	80052de <USB_SetCurrentMode+0x60>
 80052fc:	e001      	b.n	8005302 <USB_SetCurrentMode+0x84>
 80052fe:	2301      	movs	r3, #1
 8005300:	e005      	b.n	800530e <USB_SetCurrentMode+0x90>
 8005302:	68fb      	ldr	r3, [r7, #12]
 8005304:	2bc8      	cmp	r3, #200	; 0xc8
 8005306:	d101      	bne.n	800530c <USB_SetCurrentMode+0x8e>
 8005308:	2301      	movs	r3, #1
 800530a:	e000      	b.n	800530e <USB_SetCurrentMode+0x90>
 800530c:	2300      	movs	r3, #0
 800530e:	4618      	mov	r0, r3
 8005310:	3710      	adds	r7, #16
 8005312:	46bd      	mov	sp, r7
 8005314:	bd80      	pop	{r7, pc}
	...

08005318 <USB_DevInit>:
 8005318:	b084      	sub	sp, #16
 800531a:	b580      	push	{r7, lr}
 800531c:	b086      	sub	sp, #24
 800531e:	af00      	add	r7, sp, #0
 8005320:	6078      	str	r0, [r7, #4]
 8005322:	f107 0024 	add.w	r0, r7, #36	; 0x24
 8005326:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800532a:	2300      	movs	r3, #0
 800532c:	75fb      	strb	r3, [r7, #23]
 800532e:	687b      	ldr	r3, [r7, #4]
 8005330:	60fb      	str	r3, [r7, #12]
 8005332:	2300      	movs	r3, #0
 8005334:	613b      	str	r3, [r7, #16]
 8005336:	e009      	b.n	800534c <USB_DevInit+0x34>
 8005338:	687a      	ldr	r2, [r7, #4]
 800533a:	693b      	ldr	r3, [r7, #16]
 800533c:	3340      	adds	r3, #64	; 0x40
 800533e:	009b      	lsls	r3, r3, #2
 8005340:	4413      	add	r3, r2
 8005342:	2200      	movs	r2, #0
 8005344:	605a      	str	r2, [r3, #4]
 8005346:	693b      	ldr	r3, [r7, #16]
 8005348:	3301      	adds	r3, #1
 800534a:	613b      	str	r3, [r7, #16]
 800534c:	693b      	ldr	r3, [r7, #16]
 800534e:	2b0e      	cmp	r3, #14
 8005350:	d9f2      	bls.n	8005338 <USB_DevInit+0x20>
 8005352:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 8005356:	2b00      	cmp	r3, #0
 8005358:	d11c      	bne.n	8005394 <USB_DevInit+0x7c>
 800535a:	68fb      	ldr	r3, [r7, #12]
 800535c:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005360:	685b      	ldr	r3, [r3, #4]
 8005362:	68fa      	ldr	r2, [r7, #12]
 8005364:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8005368:	f043 0302 	orr.w	r3, r3, #2
 800536c:	6053      	str	r3, [r2, #4]
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005372:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	639a      	str	r2, [r3, #56]	; 0x38
 800537a:	687b      	ldr	r3, [r7, #4]
 800537c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800537e:	f423 2200 	bic.w	r2, r3, #524288	; 0x80000
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	639a      	str	r2, [r3, #56]	; 0x38
 8005386:	687b      	ldr	r3, [r7, #4]
 8005388:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800538a:	f423 2280 	bic.w	r2, r3, #262144	; 0x40000
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	639a      	str	r2, [r3, #56]	; 0x38
 8005392:	e00b      	b.n	80053ac <USB_DevInit+0x94>
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005398:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 800539c:	687b      	ldr	r3, [r7, #4]
 800539e:	639a      	str	r2, [r3, #56]	; 0x38
 80053a0:	687b      	ldr	r3, [r7, #4]
 80053a2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80053a4:	f443 2200 	orr.w	r2, r3, #524288	; 0x80000
 80053a8:	687b      	ldr	r3, [r7, #4]
 80053aa:	639a      	str	r2, [r3, #56]	; 0x38
 80053ac:	68fb      	ldr	r3, [r7, #12]
 80053ae:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 80053b2:	461a      	mov	r2, r3
 80053b4:	2300      	movs	r3, #0
 80053b6:	6013      	str	r3, [r2, #0]
 80053b8:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 80053bc:	2b01      	cmp	r3, #1
 80053be:	d10d      	bne.n	80053dc <USB_DevInit+0xc4>
 80053c0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80053c4:	2b00      	cmp	r3, #0
 80053c6:	d104      	bne.n	80053d2 <USB_DevInit+0xba>
 80053c8:	2100      	movs	r1, #0
 80053ca:	6878      	ldr	r0, [r7, #4]
 80053cc:	f000 f968 	bl	80056a0 <USB_SetDevSpeed>
 80053d0:	e008      	b.n	80053e4 <USB_DevInit+0xcc>
 80053d2:	2101      	movs	r1, #1
 80053d4:	6878      	ldr	r0, [r7, #4]
 80053d6:	f000 f963 	bl	80056a0 <USB_SetDevSpeed>
 80053da:	e003      	b.n	80053e4 <USB_DevInit+0xcc>
 80053dc:	2103      	movs	r1, #3
 80053de:	6878      	ldr	r0, [r7, #4]
 80053e0:	f000 f95e 	bl	80056a0 <USB_SetDevSpeed>
 80053e4:	2110      	movs	r1, #16
 80053e6:	6878      	ldr	r0, [r7, #4]
 80053e8:	f000 f8fa 	bl	80055e0 <USB_FlushTxFifo>
 80053ec:	4603      	mov	r3, r0
 80053ee:	2b00      	cmp	r3, #0
 80053f0:	d001      	beq.n	80053f6 <USB_DevInit+0xde>
 80053f2:	2301      	movs	r3, #1
 80053f4:	75fb      	strb	r3, [r7, #23]
 80053f6:	6878      	ldr	r0, [r7, #4]
 80053f8:	f000 f924 	bl	8005644 <USB_FlushRxFifo>
 80053fc:	4603      	mov	r3, r0
 80053fe:	2b00      	cmp	r3, #0
 8005400:	d001      	beq.n	8005406 <USB_DevInit+0xee>
 8005402:	2301      	movs	r3, #1
 8005404:	75fb      	strb	r3, [r7, #23]
 8005406:	68fb      	ldr	r3, [r7, #12]
 8005408:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800540c:	461a      	mov	r2, r3
 800540e:	2300      	movs	r3, #0
 8005410:	6113      	str	r3, [r2, #16]
 8005412:	68fb      	ldr	r3, [r7, #12]
 8005414:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005418:	461a      	mov	r2, r3
 800541a:	2300      	movs	r3, #0
 800541c:	6153      	str	r3, [r2, #20]
 800541e:	68fb      	ldr	r3, [r7, #12]
 8005420:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005424:	461a      	mov	r2, r3
 8005426:	2300      	movs	r3, #0
 8005428:	61d3      	str	r3, [r2, #28]
 800542a:	2300      	movs	r3, #0
 800542c:	613b      	str	r3, [r7, #16]
 800542e:	e043      	b.n	80054b8 <USB_DevInit+0x1a0>
 8005430:	693b      	ldr	r3, [r7, #16]
 8005432:	015a      	lsls	r2, r3, #5
 8005434:	68fb      	ldr	r3, [r7, #12]
 8005436:	4413      	add	r3, r2
 8005438:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8005442:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8005446:	d118      	bne.n	800547a <USB_DevInit+0x162>
 8005448:	693b      	ldr	r3, [r7, #16]
 800544a:	2b00      	cmp	r3, #0
 800544c:	d10a      	bne.n	8005464 <USB_DevInit+0x14c>
 800544e:	693b      	ldr	r3, [r7, #16]
 8005450:	015a      	lsls	r2, r3, #5
 8005452:	68fb      	ldr	r3, [r7, #12]
 8005454:	4413      	add	r3, r2
 8005456:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800545a:	461a      	mov	r2, r3
 800545c:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8005460:	6013      	str	r3, [r2, #0]
 8005462:	e013      	b.n	800548c <USB_DevInit+0x174>
 8005464:	693b      	ldr	r3, [r7, #16]
 8005466:	015a      	lsls	r2, r3, #5
 8005468:	68fb      	ldr	r3, [r7, #12]
 800546a:	4413      	add	r3, r2
 800546c:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005470:	461a      	mov	r2, r3
 8005472:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8005476:	6013      	str	r3, [r2, #0]
 8005478:	e008      	b.n	800548c <USB_DevInit+0x174>
 800547a:	693b      	ldr	r3, [r7, #16]
 800547c:	015a      	lsls	r2, r3, #5
 800547e:	68fb      	ldr	r3, [r7, #12]
 8005480:	4413      	add	r3, r2
 8005482:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005486:	461a      	mov	r2, r3
 8005488:	2300      	movs	r3, #0
 800548a:	6013      	str	r3, [r2, #0]
 800548c:	693b      	ldr	r3, [r7, #16]
 800548e:	015a      	lsls	r2, r3, #5
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	4413      	add	r3, r2
 8005494:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 8005498:	461a      	mov	r2, r3
 800549a:	2300      	movs	r3, #0
 800549c:	6113      	str	r3, [r2, #16]
 800549e:	693b      	ldr	r3, [r7, #16]
 80054a0:	015a      	lsls	r2, r3, #5
 80054a2:	68fb      	ldr	r3, [r7, #12]
 80054a4:	4413      	add	r3, r2
 80054a6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 80054aa:	461a      	mov	r2, r3
 80054ac:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 80054b0:	6093      	str	r3, [r2, #8]
 80054b2:	693b      	ldr	r3, [r7, #16]
 80054b4:	3301      	adds	r3, #1
 80054b6:	613b      	str	r3, [r7, #16]
 80054b8:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80054bc:	461a      	mov	r2, r3
 80054be:	693b      	ldr	r3, [r7, #16]
 80054c0:	4293      	cmp	r3, r2
 80054c2:	d3b5      	bcc.n	8005430 <USB_DevInit+0x118>
 80054c4:	2300      	movs	r3, #0
 80054c6:	613b      	str	r3, [r7, #16]
 80054c8:	e043      	b.n	8005552 <USB_DevInit+0x23a>
 80054ca:	693b      	ldr	r3, [r7, #16]
 80054cc:	015a      	lsls	r2, r3, #5
 80054ce:	68fb      	ldr	r3, [r7, #12]
 80054d0:	4413      	add	r3, r2
 80054d2:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80054d6:	681b      	ldr	r3, [r3, #0]
 80054d8:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 80054dc:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 80054e0:	d118      	bne.n	8005514 <USB_DevInit+0x1fc>
 80054e2:	693b      	ldr	r3, [r7, #16]
 80054e4:	2b00      	cmp	r3, #0
 80054e6:	d10a      	bne.n	80054fe <USB_DevInit+0x1e6>
 80054e8:	693b      	ldr	r3, [r7, #16]
 80054ea:	015a      	lsls	r2, r3, #5
 80054ec:	68fb      	ldr	r3, [r7, #12]
 80054ee:	4413      	add	r3, r2
 80054f0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 80054f4:	461a      	mov	r2, r3
 80054f6:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 80054fa:	6013      	str	r3, [r2, #0]
 80054fc:	e013      	b.n	8005526 <USB_DevInit+0x20e>
 80054fe:	693b      	ldr	r3, [r7, #16]
 8005500:	015a      	lsls	r2, r3, #5
 8005502:	68fb      	ldr	r3, [r7, #12]
 8005504:	4413      	add	r3, r2
 8005506:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800550a:	461a      	mov	r2, r3
 800550c:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 8005510:	6013      	str	r3, [r2, #0]
 8005512:	e008      	b.n	8005526 <USB_DevInit+0x20e>
 8005514:	693b      	ldr	r3, [r7, #16]
 8005516:	015a      	lsls	r2, r3, #5
 8005518:	68fb      	ldr	r3, [r7, #12]
 800551a:	4413      	add	r3, r2
 800551c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005520:	461a      	mov	r2, r3
 8005522:	2300      	movs	r3, #0
 8005524:	6013      	str	r3, [r2, #0]
 8005526:	693b      	ldr	r3, [r7, #16]
 8005528:	015a      	lsls	r2, r3, #5
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	4413      	add	r3, r2
 800552e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005532:	461a      	mov	r2, r3
 8005534:	2300      	movs	r3, #0
 8005536:	6113      	str	r3, [r2, #16]
 8005538:	693b      	ldr	r3, [r7, #16]
 800553a:	015a      	lsls	r2, r3, #5
 800553c:	68fb      	ldr	r3, [r7, #12]
 800553e:	4413      	add	r3, r2
 8005540:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 8005544:	461a      	mov	r2, r3
 8005546:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 800554a:	6093      	str	r3, [r2, #8]
 800554c:	693b      	ldr	r3, [r7, #16]
 800554e:	3301      	adds	r3, #1
 8005550:	613b      	str	r3, [r7, #16]
 8005552:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8005556:	461a      	mov	r2, r3
 8005558:	693b      	ldr	r3, [r7, #16]
 800555a:	4293      	cmp	r3, r2
 800555c:	d3b5      	bcc.n	80054ca <USB_DevInit+0x1b2>
 800555e:	68fb      	ldr	r3, [r7, #12]
 8005560:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 8005564:	691b      	ldr	r3, [r3, #16]
 8005566:	68fa      	ldr	r2, [r7, #12]
 8005568:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800556c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8005570:	6113      	str	r3, [r2, #16]
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	2200      	movs	r2, #0
 8005576:	619a      	str	r2, [r3, #24]
 8005578:	687b      	ldr	r3, [r7, #4]
 800557a:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 800557e:	615a      	str	r2, [r3, #20]
 8005580:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8005584:	2b00      	cmp	r3, #0
 8005586:	d105      	bne.n	8005594 <USB_DevInit+0x27c>
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	699b      	ldr	r3, [r3, #24]
 800558c:	f043 0210 	orr.w	r2, r3, #16
 8005590:	687b      	ldr	r3, [r7, #4]
 8005592:	619a      	str	r2, [r3, #24]
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	699a      	ldr	r2, [r3, #24]
 8005598:	4b10      	ldr	r3, [pc, #64]	; (80055dc <USB_DevInit+0x2c4>)
 800559a:	4313      	orrs	r3, r2
 800559c:	687a      	ldr	r2, [r7, #4]
 800559e:	6193      	str	r3, [r2, #24]
 80055a0:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 80055a4:	2b00      	cmp	r3, #0
 80055a6:	d005      	beq.n	80055b4 <USB_DevInit+0x29c>
 80055a8:	687b      	ldr	r3, [r7, #4]
 80055aa:	699b      	ldr	r3, [r3, #24]
 80055ac:	f043 0208 	orr.w	r2, r3, #8
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	619a      	str	r2, [r3, #24]
 80055b4:	f897 302e 	ldrb.w	r3, [r7, #46]	; 0x2e
 80055b8:	2b01      	cmp	r3, #1
 80055ba:	d107      	bne.n	80055cc <USB_DevInit+0x2b4>
 80055bc:	687b      	ldr	r3, [r7, #4]
 80055be:	699b      	ldr	r3, [r3, #24]
 80055c0:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80055c4:	f043 0304 	orr.w	r3, r3, #4
 80055c8:	687a      	ldr	r2, [r7, #4]
 80055ca:	6193      	str	r3, [r2, #24]
 80055cc:	7dfb      	ldrb	r3, [r7, #23]
 80055ce:	4618      	mov	r0, r3
 80055d0:	3718      	adds	r7, #24
 80055d2:	46bd      	mov	sp, r7
 80055d4:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 80055d8:	b004      	add	sp, #16
 80055da:	4770      	bx	lr
 80055dc:	803c3800 	.word	0x803c3800

080055e0 <USB_FlushTxFifo>:
 80055e0:	b480      	push	{r7}
 80055e2:	b085      	sub	sp, #20
 80055e4:	af00      	add	r7, sp, #0
 80055e6:	6078      	str	r0, [r7, #4]
 80055e8:	6039      	str	r1, [r7, #0]
 80055ea:	2300      	movs	r3, #0
 80055ec:	60fb      	str	r3, [r7, #12]
 80055ee:	68fb      	ldr	r3, [r7, #12]
 80055f0:	3301      	adds	r3, #1
 80055f2:	60fb      	str	r3, [r7, #12]
 80055f4:	68fb      	ldr	r3, [r7, #12]
 80055f6:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 80055fa:	d901      	bls.n	8005600 <USB_FlushTxFifo+0x20>
 80055fc:	2303      	movs	r3, #3
 80055fe:	e01b      	b.n	8005638 <USB_FlushTxFifo+0x58>
 8005600:	687b      	ldr	r3, [r7, #4]
 8005602:	691b      	ldr	r3, [r3, #16]
 8005604:	2b00      	cmp	r3, #0
 8005606:	daf2      	bge.n	80055ee <USB_FlushTxFifo+0xe>
 8005608:	2300      	movs	r3, #0
 800560a:	60fb      	str	r3, [r7, #12]
 800560c:	683b      	ldr	r3, [r7, #0]
 800560e:	019b      	lsls	r3, r3, #6
 8005610:	f043 0220 	orr.w	r2, r3, #32
 8005614:	687b      	ldr	r3, [r7, #4]
 8005616:	611a      	str	r2, [r3, #16]
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	3301      	adds	r3, #1
 800561c:	60fb      	str	r3, [r7, #12]
 800561e:	68fb      	ldr	r3, [r7, #12]
 8005620:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8005624:	d901      	bls.n	800562a <USB_FlushTxFifo+0x4a>
 8005626:	2303      	movs	r3, #3
 8005628:	e006      	b.n	8005638 <USB_FlushTxFifo+0x58>
 800562a:	687b      	ldr	r3, [r7, #4]
 800562c:	691b      	ldr	r3, [r3, #16]
 800562e:	f003 0320 	and.w	r3, r3, #32
 8005632:	2b20      	cmp	r3, #32
 8005634:	d0f0      	beq.n	8005618 <USB_FlushTxFifo+0x38>
 8005636:	2300      	movs	r3, #0
 8005638:	4618      	mov	r0, r3
 800563a:	3714      	adds	r7, #20
 800563c:	46bd      	mov	sp, r7
 800563e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005642:	4770      	bx	lr

08005644 <USB_FlushRxFifo>:
 8005644:	b480      	push	{r7}
 8005646:	b085      	sub	sp, #20
 8005648:	af00      	add	r7, sp, #0
 800564a:	6078      	str	r0, [r7, #4]
 800564c:	2300      	movs	r3, #0
 800564e:	60fb      	str	r3, [r7, #12]
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	3301      	adds	r3, #1
 8005654:	60fb      	str	r3, [r7, #12]
 8005656:	68fb      	ldr	r3, [r7, #12]
 8005658:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 800565c:	d901      	bls.n	8005662 <USB_FlushRxFifo+0x1e>
 800565e:	2303      	movs	r3, #3
 8005660:	e018      	b.n	8005694 <USB_FlushRxFifo+0x50>
 8005662:	687b      	ldr	r3, [r7, #4]
 8005664:	691b      	ldr	r3, [r3, #16]
 8005666:	2b00      	cmp	r3, #0
 8005668:	daf2      	bge.n	8005650 <USB_FlushRxFifo+0xc>
 800566a:	2300      	movs	r3, #0
 800566c:	60fb      	str	r3, [r7, #12]
 800566e:	687b      	ldr	r3, [r7, #4]
 8005670:	2210      	movs	r2, #16
 8005672:	611a      	str	r2, [r3, #16]
 8005674:	68fb      	ldr	r3, [r7, #12]
 8005676:	3301      	adds	r3, #1
 8005678:	60fb      	str	r3, [r7, #12]
 800567a:	68fb      	ldr	r3, [r7, #12]
 800567c:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8005680:	d901      	bls.n	8005686 <USB_FlushRxFifo+0x42>
 8005682:	2303      	movs	r3, #3
 8005684:	e006      	b.n	8005694 <USB_FlushRxFifo+0x50>
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	691b      	ldr	r3, [r3, #16]
 800568a:	f003 0310 	and.w	r3, r3, #16
 800568e:	2b10      	cmp	r3, #16
 8005690:	d0f0      	beq.n	8005674 <USB_FlushRxFifo+0x30>
 8005692:	2300      	movs	r3, #0
 8005694:	4618      	mov	r0, r3
 8005696:	3714      	adds	r7, #20
 8005698:	46bd      	mov	sp, r7
 800569a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800569e:	4770      	bx	lr

080056a0 <USB_SetDevSpeed>:
 80056a0:	b480      	push	{r7}
 80056a2:	b085      	sub	sp, #20
 80056a4:	af00      	add	r7, sp, #0
 80056a6:	6078      	str	r0, [r7, #4]
 80056a8:	460b      	mov	r3, r1
 80056aa:	70fb      	strb	r3, [r7, #3]
 80056ac:	687b      	ldr	r3, [r7, #4]
 80056ae:	60fb      	str	r3, [r7, #12]
 80056b0:	68fb      	ldr	r3, [r7, #12]
 80056b2:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80056b6:	681a      	ldr	r2, [r3, #0]
 80056b8:	78fb      	ldrb	r3, [r7, #3]
 80056ba:	68f9      	ldr	r1, [r7, #12]
 80056bc:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 80056c0:	4313      	orrs	r3, r2
 80056c2:	600b      	str	r3, [r1, #0]
 80056c4:	2300      	movs	r3, #0
 80056c6:	4618      	mov	r0, r3
 80056c8:	3714      	adds	r7, #20
 80056ca:	46bd      	mov	sp, r7
 80056cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80056d0:	4770      	bx	lr

080056d2 <USB_DevDisconnect>:
 80056d2:	b480      	push	{r7}
 80056d4:	b085      	sub	sp, #20
 80056d6:	af00      	add	r7, sp, #0
 80056d8:	6078      	str	r0, [r7, #4]
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	60fb      	str	r3, [r7, #12]
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 80056e4:	681b      	ldr	r3, [r3, #0]
 80056e6:	68fa      	ldr	r2, [r7, #12]
 80056e8:	f502 6260 	add.w	r2, r2, #3584	; 0xe00
 80056ec:	f023 0303 	bic.w	r3, r3, #3
 80056f0:	6013      	str	r3, [r2, #0]
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 80056f8:	685b      	ldr	r3, [r3, #4]
 80056fa:	68fa      	ldr	r2, [r7, #12]
 80056fc:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 8005700:	f043 0302 	orr.w	r3, r3, #2
 8005704:	6053      	str	r3, [r2, #4]
 8005706:	2300      	movs	r3, #0
 8005708:	4618      	mov	r0, r3
 800570a:	3714      	adds	r7, #20
 800570c:	46bd      	mov	sp, r7
 800570e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005712:	4770      	bx	lr

08005714 <USB_GetMode>:
 8005714:	b480      	push	{r7}
 8005716:	b083      	sub	sp, #12
 8005718:	af00      	add	r7, sp, #0
 800571a:	6078      	str	r0, [r7, #4]
 800571c:	687b      	ldr	r3, [r7, #4]
 800571e:	695b      	ldr	r3, [r3, #20]
 8005720:	f003 0301 	and.w	r3, r3, #1
 8005724:	4618      	mov	r0, r3
 8005726:	370c      	adds	r7, #12
 8005728:	46bd      	mov	sp, r7
 800572a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800572e:	4770      	bx	lr

08005730 <USB_CoreReset>:
 8005730:	b480      	push	{r7}
 8005732:	b085      	sub	sp, #20
 8005734:	af00      	add	r7, sp, #0
 8005736:	6078      	str	r0, [r7, #4]
 8005738:	2300      	movs	r3, #0
 800573a:	60fb      	str	r3, [r7, #12]
 800573c:	68fb      	ldr	r3, [r7, #12]
 800573e:	3301      	adds	r3, #1
 8005740:	60fb      	str	r3, [r7, #12]
 8005742:	68fb      	ldr	r3, [r7, #12]
 8005744:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8005748:	d901      	bls.n	800574e <USB_CoreReset+0x1e>
 800574a:	2303      	movs	r3, #3
 800574c:	e01b      	b.n	8005786 <USB_CoreReset+0x56>
 800574e:	687b      	ldr	r3, [r7, #4]
 8005750:	691b      	ldr	r3, [r3, #16]
 8005752:	2b00      	cmp	r3, #0
 8005754:	daf2      	bge.n	800573c <USB_CoreReset+0xc>
 8005756:	2300      	movs	r3, #0
 8005758:	60fb      	str	r3, [r7, #12]
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	691b      	ldr	r3, [r3, #16]
 800575e:	f043 0201 	orr.w	r2, r3, #1
 8005762:	687b      	ldr	r3, [r7, #4]
 8005764:	611a      	str	r2, [r3, #16]
 8005766:	68fb      	ldr	r3, [r7, #12]
 8005768:	3301      	adds	r3, #1
 800576a:	60fb      	str	r3, [r7, #12]
 800576c:	68fb      	ldr	r3, [r7, #12]
 800576e:	f1b3 6f70 	cmp.w	r3, #251658240	; 0xf000000
 8005772:	d901      	bls.n	8005778 <USB_CoreReset+0x48>
 8005774:	2303      	movs	r3, #3
 8005776:	e006      	b.n	8005786 <USB_CoreReset+0x56>
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	691b      	ldr	r3, [r3, #16]
 800577c:	f003 0301 	and.w	r3, r3, #1
 8005780:	2b01      	cmp	r3, #1
 8005782:	d0f0      	beq.n	8005766 <USB_CoreReset+0x36>
 8005784:	2300      	movs	r3, #0
 8005786:	4618      	mov	r0, r3
 8005788:	3714      	adds	r7, #20
 800578a:	46bd      	mov	sp, r7
 800578c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005790:	4770      	bx	lr
	...

08005794 <std>:
 8005794:	2300      	movs	r3, #0
 8005796:	b510      	push	{r4, lr}
 8005798:	4604      	mov	r4, r0
 800579a:	e9c0 3300 	strd	r3, r3, [r0]
 800579e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80057a2:	6083      	str	r3, [r0, #8]
 80057a4:	8181      	strh	r1, [r0, #12]
 80057a6:	6643      	str	r3, [r0, #100]	; 0x64
 80057a8:	81c2      	strh	r2, [r0, #14]
 80057aa:	6183      	str	r3, [r0, #24]
 80057ac:	4619      	mov	r1, r3
 80057ae:	2208      	movs	r2, #8
 80057b0:	305c      	adds	r0, #92	; 0x5c
 80057b2:	f000 fa17 	bl	8005be4 <memset>
 80057b6:	4b0d      	ldr	r3, [pc, #52]	; (80057ec <std+0x58>)
 80057b8:	6263      	str	r3, [r4, #36]	; 0x24
 80057ba:	4b0d      	ldr	r3, [pc, #52]	; (80057f0 <std+0x5c>)
 80057bc:	62a3      	str	r3, [r4, #40]	; 0x28
 80057be:	4b0d      	ldr	r3, [pc, #52]	; (80057f4 <std+0x60>)
 80057c0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80057c2:	4b0d      	ldr	r3, [pc, #52]	; (80057f8 <std+0x64>)
 80057c4:	6323      	str	r3, [r4, #48]	; 0x30
 80057c6:	4b0d      	ldr	r3, [pc, #52]	; (80057fc <std+0x68>)
 80057c8:	6224      	str	r4, [r4, #32]
 80057ca:	429c      	cmp	r4, r3
 80057cc:	d006      	beq.n	80057dc <std+0x48>
 80057ce:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80057d2:	4294      	cmp	r4, r2
 80057d4:	d002      	beq.n	80057dc <std+0x48>
 80057d6:	33d0      	adds	r3, #208	; 0xd0
 80057d8:	429c      	cmp	r4, r3
 80057da:	d105      	bne.n	80057e8 <std+0x54>
 80057dc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80057e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80057e4:	f000 bad2 	b.w	8005d8c <__retarget_lock_init_recursive>
 80057e8:	bd10      	pop	{r4, pc}
 80057ea:	bf00      	nop
 80057ec:	08005a35 	.word	0x08005a35
 80057f0:	08005a57 	.word	0x08005a57
 80057f4:	08005a8f 	.word	0x08005a8f
 80057f8:	08005ab3 	.word	0x08005ab3
 80057fc:	20000c38 	.word	0x20000c38

08005800 <stdio_exit_handler>:
 8005800:	4a02      	ldr	r2, [pc, #8]	; (800580c <stdio_exit_handler+0xc>)
 8005802:	4903      	ldr	r1, [pc, #12]	; (8005810 <stdio_exit_handler+0x10>)
 8005804:	4803      	ldr	r0, [pc, #12]	; (8005814 <stdio_exit_handler+0x14>)
 8005806:	f000 b869 	b.w	80058dc <_fwalk_sglue>
 800580a:	bf00      	nop
 800580c:	20000040 	.word	0x20000040
 8005810:	08006951 	.word	0x08006951
 8005814:	2000004c 	.word	0x2000004c

08005818 <cleanup_stdio>:
 8005818:	6841      	ldr	r1, [r0, #4]
 800581a:	4b0c      	ldr	r3, [pc, #48]	; (800584c <cleanup_stdio+0x34>)
 800581c:	4299      	cmp	r1, r3
 800581e:	b510      	push	{r4, lr}
 8005820:	4604      	mov	r4, r0
 8005822:	d001      	beq.n	8005828 <cleanup_stdio+0x10>
 8005824:	f001 f894 	bl	8006950 <_fflush_r>
 8005828:	68a1      	ldr	r1, [r4, #8]
 800582a:	4b09      	ldr	r3, [pc, #36]	; (8005850 <cleanup_stdio+0x38>)
 800582c:	4299      	cmp	r1, r3
 800582e:	d002      	beq.n	8005836 <cleanup_stdio+0x1e>
 8005830:	4620      	mov	r0, r4
 8005832:	f001 f88d 	bl	8006950 <_fflush_r>
 8005836:	68e1      	ldr	r1, [r4, #12]
 8005838:	4b06      	ldr	r3, [pc, #24]	; (8005854 <cleanup_stdio+0x3c>)
 800583a:	4299      	cmp	r1, r3
 800583c:	d004      	beq.n	8005848 <cleanup_stdio+0x30>
 800583e:	4620      	mov	r0, r4
 8005840:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005844:	f001 b884 	b.w	8006950 <_fflush_r>
 8005848:	bd10      	pop	{r4, pc}
 800584a:	bf00      	nop
 800584c:	20000c38 	.word	0x20000c38
 8005850:	20000ca0 	.word	0x20000ca0
 8005854:	20000d08 	.word	0x20000d08

08005858 <global_stdio_init.part.0>:
 8005858:	b510      	push	{r4, lr}
 800585a:	4b0b      	ldr	r3, [pc, #44]	; (8005888 <global_stdio_init.part.0+0x30>)
 800585c:	4c0b      	ldr	r4, [pc, #44]	; (800588c <global_stdio_init.part.0+0x34>)
 800585e:	4a0c      	ldr	r2, [pc, #48]	; (8005890 <global_stdio_init.part.0+0x38>)
 8005860:	601a      	str	r2, [r3, #0]
 8005862:	4620      	mov	r0, r4
 8005864:	2200      	movs	r2, #0
 8005866:	2104      	movs	r1, #4
 8005868:	f7ff ff94 	bl	8005794 <std>
 800586c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8005870:	2201      	movs	r2, #1
 8005872:	2109      	movs	r1, #9
 8005874:	f7ff ff8e 	bl	8005794 <std>
 8005878:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800587c:	2202      	movs	r2, #2
 800587e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005882:	2112      	movs	r1, #18
 8005884:	f7ff bf86 	b.w	8005794 <std>
 8005888:	20000d70 	.word	0x20000d70
 800588c:	20000c38 	.word	0x20000c38
 8005890:	08005801 	.word	0x08005801

08005894 <__sfp_lock_acquire>:
 8005894:	4801      	ldr	r0, [pc, #4]	; (800589c <__sfp_lock_acquire+0x8>)
 8005896:	f000 ba7a 	b.w	8005d8e <__retarget_lock_acquire_recursive>
 800589a:	bf00      	nop
 800589c:	20000d79 	.word	0x20000d79

080058a0 <__sfp_lock_release>:
 80058a0:	4801      	ldr	r0, [pc, #4]	; (80058a8 <__sfp_lock_release+0x8>)
 80058a2:	f000 ba75 	b.w	8005d90 <__retarget_lock_release_recursive>
 80058a6:	bf00      	nop
 80058a8:	20000d79 	.word	0x20000d79

080058ac <__sinit>:
 80058ac:	b510      	push	{r4, lr}
 80058ae:	4604      	mov	r4, r0
 80058b0:	f7ff fff0 	bl	8005894 <__sfp_lock_acquire>
 80058b4:	6a23      	ldr	r3, [r4, #32]
 80058b6:	b11b      	cbz	r3, 80058c0 <__sinit+0x14>
 80058b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80058bc:	f7ff bff0 	b.w	80058a0 <__sfp_lock_release>
 80058c0:	4b04      	ldr	r3, [pc, #16]	; (80058d4 <__sinit+0x28>)
 80058c2:	6223      	str	r3, [r4, #32]
 80058c4:	4b04      	ldr	r3, [pc, #16]	; (80058d8 <__sinit+0x2c>)
 80058c6:	681b      	ldr	r3, [r3, #0]
 80058c8:	2b00      	cmp	r3, #0
 80058ca:	d1f5      	bne.n	80058b8 <__sinit+0xc>
 80058cc:	f7ff ffc4 	bl	8005858 <global_stdio_init.part.0>
 80058d0:	e7f2      	b.n	80058b8 <__sinit+0xc>
 80058d2:	bf00      	nop
 80058d4:	08005819 	.word	0x08005819
 80058d8:	20000d70 	.word	0x20000d70

080058dc <_fwalk_sglue>:
 80058dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80058e0:	4607      	mov	r7, r0
 80058e2:	4688      	mov	r8, r1
 80058e4:	4614      	mov	r4, r2
 80058e6:	2600      	movs	r6, #0
 80058e8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80058ec:	f1b9 0901 	subs.w	r9, r9, #1
 80058f0:	d505      	bpl.n	80058fe <_fwalk_sglue+0x22>
 80058f2:	6824      	ldr	r4, [r4, #0]
 80058f4:	2c00      	cmp	r4, #0
 80058f6:	d1f7      	bne.n	80058e8 <_fwalk_sglue+0xc>
 80058f8:	4630      	mov	r0, r6
 80058fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80058fe:	89ab      	ldrh	r3, [r5, #12]
 8005900:	2b01      	cmp	r3, #1
 8005902:	d907      	bls.n	8005914 <_fwalk_sglue+0x38>
 8005904:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005908:	3301      	adds	r3, #1
 800590a:	d003      	beq.n	8005914 <_fwalk_sglue+0x38>
 800590c:	4629      	mov	r1, r5
 800590e:	4638      	mov	r0, r7
 8005910:	47c0      	blx	r8
 8005912:	4306      	orrs	r6, r0
 8005914:	3568      	adds	r5, #104	; 0x68
 8005916:	e7e9      	b.n	80058ec <_fwalk_sglue+0x10>

08005918 <iprintf>:
 8005918:	b40f      	push	{r0, r1, r2, r3}
 800591a:	b507      	push	{r0, r1, r2, lr}
 800591c:	4906      	ldr	r1, [pc, #24]	; (8005938 <iprintf+0x20>)
 800591e:	ab04      	add	r3, sp, #16
 8005920:	6808      	ldr	r0, [r1, #0]
 8005922:	f853 2b04 	ldr.w	r2, [r3], #4
 8005926:	6881      	ldr	r1, [r0, #8]
 8005928:	9301      	str	r3, [sp, #4]
 800592a:	f000 fce1 	bl	80062f0 <_vfiprintf_r>
 800592e:	b003      	add	sp, #12
 8005930:	f85d eb04 	ldr.w	lr, [sp], #4
 8005934:	b004      	add	sp, #16
 8005936:	4770      	bx	lr
 8005938:	20000098 	.word	0x20000098

0800593c <_puts_r>:
 800593c:	6a03      	ldr	r3, [r0, #32]
 800593e:	b570      	push	{r4, r5, r6, lr}
 8005940:	6884      	ldr	r4, [r0, #8]
 8005942:	4605      	mov	r5, r0
 8005944:	460e      	mov	r6, r1
 8005946:	b90b      	cbnz	r3, 800594c <_puts_r+0x10>
 8005948:	f7ff ffb0 	bl	80058ac <__sinit>
 800594c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800594e:	07db      	lsls	r3, r3, #31
 8005950:	d405      	bmi.n	800595e <_puts_r+0x22>
 8005952:	89a3      	ldrh	r3, [r4, #12]
 8005954:	0598      	lsls	r0, r3, #22
 8005956:	d402      	bmi.n	800595e <_puts_r+0x22>
 8005958:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800595a:	f000 fa18 	bl	8005d8e <__retarget_lock_acquire_recursive>
 800595e:	89a3      	ldrh	r3, [r4, #12]
 8005960:	0719      	lsls	r1, r3, #28
 8005962:	d513      	bpl.n	800598c <_puts_r+0x50>
 8005964:	6923      	ldr	r3, [r4, #16]
 8005966:	b18b      	cbz	r3, 800598c <_puts_r+0x50>
 8005968:	3e01      	subs	r6, #1
 800596a:	68a3      	ldr	r3, [r4, #8]
 800596c:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8005970:	3b01      	subs	r3, #1
 8005972:	60a3      	str	r3, [r4, #8]
 8005974:	b9e9      	cbnz	r1, 80059b2 <_puts_r+0x76>
 8005976:	2b00      	cmp	r3, #0
 8005978:	da2e      	bge.n	80059d8 <_puts_r+0x9c>
 800597a:	4622      	mov	r2, r4
 800597c:	210a      	movs	r1, #10
 800597e:	4628      	mov	r0, r5
 8005980:	f000 f89b 	bl	8005aba <__swbuf_r>
 8005984:	3001      	adds	r0, #1
 8005986:	d007      	beq.n	8005998 <_puts_r+0x5c>
 8005988:	250a      	movs	r5, #10
 800598a:	e007      	b.n	800599c <_puts_r+0x60>
 800598c:	4621      	mov	r1, r4
 800598e:	4628      	mov	r0, r5
 8005990:	f000 f8d0 	bl	8005b34 <__swsetup_r>
 8005994:	2800      	cmp	r0, #0
 8005996:	d0e7      	beq.n	8005968 <_puts_r+0x2c>
 8005998:	f04f 35ff 	mov.w	r5, #4294967295
 800599c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800599e:	07da      	lsls	r2, r3, #31
 80059a0:	d405      	bmi.n	80059ae <_puts_r+0x72>
 80059a2:	89a3      	ldrh	r3, [r4, #12]
 80059a4:	059b      	lsls	r3, r3, #22
 80059a6:	d402      	bmi.n	80059ae <_puts_r+0x72>
 80059a8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80059aa:	f000 f9f1 	bl	8005d90 <__retarget_lock_release_recursive>
 80059ae:	4628      	mov	r0, r5
 80059b0:	bd70      	pop	{r4, r5, r6, pc}
 80059b2:	2b00      	cmp	r3, #0
 80059b4:	da04      	bge.n	80059c0 <_puts_r+0x84>
 80059b6:	69a2      	ldr	r2, [r4, #24]
 80059b8:	429a      	cmp	r2, r3
 80059ba:	dc06      	bgt.n	80059ca <_puts_r+0x8e>
 80059bc:	290a      	cmp	r1, #10
 80059be:	d004      	beq.n	80059ca <_puts_r+0x8e>
 80059c0:	6823      	ldr	r3, [r4, #0]
 80059c2:	1c5a      	adds	r2, r3, #1
 80059c4:	6022      	str	r2, [r4, #0]
 80059c6:	7019      	strb	r1, [r3, #0]
 80059c8:	e7cf      	b.n	800596a <_puts_r+0x2e>
 80059ca:	4622      	mov	r2, r4
 80059cc:	4628      	mov	r0, r5
 80059ce:	f000 f874 	bl	8005aba <__swbuf_r>
 80059d2:	3001      	adds	r0, #1
 80059d4:	d1c9      	bne.n	800596a <_puts_r+0x2e>
 80059d6:	e7df      	b.n	8005998 <_puts_r+0x5c>
 80059d8:	6823      	ldr	r3, [r4, #0]
 80059da:	250a      	movs	r5, #10
 80059dc:	1c5a      	adds	r2, r3, #1
 80059de:	6022      	str	r2, [r4, #0]
 80059e0:	701d      	strb	r5, [r3, #0]
 80059e2:	e7db      	b.n	800599c <_puts_r+0x60>

080059e4 <puts>:
 80059e4:	4b02      	ldr	r3, [pc, #8]	; (80059f0 <puts+0xc>)
 80059e6:	4601      	mov	r1, r0
 80059e8:	6818      	ldr	r0, [r3, #0]
 80059ea:	f7ff bfa7 	b.w	800593c <_puts_r>
 80059ee:	bf00      	nop
 80059f0:	20000098 	.word	0x20000098

080059f4 <siprintf>:
 80059f4:	b40e      	push	{r1, r2, r3}
 80059f6:	b500      	push	{lr}
 80059f8:	b09c      	sub	sp, #112	; 0x70
 80059fa:	ab1d      	add	r3, sp, #116	; 0x74
 80059fc:	9002      	str	r0, [sp, #8]
 80059fe:	9006      	str	r0, [sp, #24]
 8005a00:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8005a04:	4809      	ldr	r0, [pc, #36]	; (8005a2c <siprintf+0x38>)
 8005a06:	9107      	str	r1, [sp, #28]
 8005a08:	9104      	str	r1, [sp, #16]
 8005a0a:	4909      	ldr	r1, [pc, #36]	; (8005a30 <siprintf+0x3c>)
 8005a0c:	f853 2b04 	ldr.w	r2, [r3], #4
 8005a10:	9105      	str	r1, [sp, #20]
 8005a12:	6800      	ldr	r0, [r0, #0]
 8005a14:	9301      	str	r3, [sp, #4]
 8005a16:	a902      	add	r1, sp, #8
 8005a18:	f000 fb42 	bl	80060a0 <_svfiprintf_r>
 8005a1c:	9b02      	ldr	r3, [sp, #8]
 8005a1e:	2200      	movs	r2, #0
 8005a20:	701a      	strb	r2, [r3, #0]
 8005a22:	b01c      	add	sp, #112	; 0x70
 8005a24:	f85d eb04 	ldr.w	lr, [sp], #4
 8005a28:	b003      	add	sp, #12
 8005a2a:	4770      	bx	lr
 8005a2c:	20000098 	.word	0x20000098
 8005a30:	ffff0208 	.word	0xffff0208

08005a34 <__sread>:
 8005a34:	b510      	push	{r4, lr}
 8005a36:	460c      	mov	r4, r1
 8005a38:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005a3c:	f000 f958 	bl	8005cf0 <_read_r>
 8005a40:	2800      	cmp	r0, #0
 8005a42:	bfab      	itete	ge
 8005a44:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8005a46:	89a3      	ldrhlt	r3, [r4, #12]
 8005a48:	181b      	addge	r3, r3, r0
 8005a4a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005a4e:	bfac      	ite	ge
 8005a50:	6563      	strge	r3, [r4, #84]	; 0x54
 8005a52:	81a3      	strhlt	r3, [r4, #12]
 8005a54:	bd10      	pop	{r4, pc}

08005a56 <__swrite>:
 8005a56:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a5a:	461f      	mov	r7, r3
 8005a5c:	898b      	ldrh	r3, [r1, #12]
 8005a5e:	05db      	lsls	r3, r3, #23
 8005a60:	4605      	mov	r5, r0
 8005a62:	460c      	mov	r4, r1
 8005a64:	4616      	mov	r6, r2
 8005a66:	d505      	bpl.n	8005a74 <__swrite+0x1e>
 8005a68:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005a6c:	2302      	movs	r3, #2
 8005a6e:	2200      	movs	r2, #0
 8005a70:	f000 f92c 	bl	8005ccc <_lseek_r>
 8005a74:	89a3      	ldrh	r3, [r4, #12]
 8005a76:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005a7a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005a7e:	81a3      	strh	r3, [r4, #12]
 8005a80:	4632      	mov	r2, r6
 8005a82:	463b      	mov	r3, r7
 8005a84:	4628      	mov	r0, r5
 8005a86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005a8a:	f000 b943 	b.w	8005d14 <_write_r>

08005a8e <__sseek>:
 8005a8e:	b510      	push	{r4, lr}
 8005a90:	460c      	mov	r4, r1
 8005a92:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005a96:	f000 f919 	bl	8005ccc <_lseek_r>
 8005a9a:	1c43      	adds	r3, r0, #1
 8005a9c:	89a3      	ldrh	r3, [r4, #12]
 8005a9e:	bf15      	itete	ne
 8005aa0:	6560      	strne	r0, [r4, #84]	; 0x54
 8005aa2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005aa6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005aaa:	81a3      	strheq	r3, [r4, #12]
 8005aac:	bf18      	it	ne
 8005aae:	81a3      	strhne	r3, [r4, #12]
 8005ab0:	bd10      	pop	{r4, pc}

08005ab2 <__sclose>:
 8005ab2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005ab6:	f000 b8f9 	b.w	8005cac <_close_r>

08005aba <__swbuf_r>:
 8005aba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005abc:	460e      	mov	r6, r1
 8005abe:	4614      	mov	r4, r2
 8005ac0:	4605      	mov	r5, r0
 8005ac2:	b118      	cbz	r0, 8005acc <__swbuf_r+0x12>
 8005ac4:	6a03      	ldr	r3, [r0, #32]
 8005ac6:	b90b      	cbnz	r3, 8005acc <__swbuf_r+0x12>
 8005ac8:	f7ff fef0 	bl	80058ac <__sinit>
 8005acc:	69a3      	ldr	r3, [r4, #24]
 8005ace:	60a3      	str	r3, [r4, #8]
 8005ad0:	89a3      	ldrh	r3, [r4, #12]
 8005ad2:	071a      	lsls	r2, r3, #28
 8005ad4:	d525      	bpl.n	8005b22 <__swbuf_r+0x68>
 8005ad6:	6923      	ldr	r3, [r4, #16]
 8005ad8:	b31b      	cbz	r3, 8005b22 <__swbuf_r+0x68>
 8005ada:	6823      	ldr	r3, [r4, #0]
 8005adc:	6922      	ldr	r2, [r4, #16]
 8005ade:	1a98      	subs	r0, r3, r2
 8005ae0:	6963      	ldr	r3, [r4, #20]
 8005ae2:	b2f6      	uxtb	r6, r6
 8005ae4:	4283      	cmp	r3, r0
 8005ae6:	4637      	mov	r7, r6
 8005ae8:	dc04      	bgt.n	8005af4 <__swbuf_r+0x3a>
 8005aea:	4621      	mov	r1, r4
 8005aec:	4628      	mov	r0, r5
 8005aee:	f000 ff2f 	bl	8006950 <_fflush_r>
 8005af2:	b9e0      	cbnz	r0, 8005b2e <__swbuf_r+0x74>
 8005af4:	68a3      	ldr	r3, [r4, #8]
 8005af6:	3b01      	subs	r3, #1
 8005af8:	60a3      	str	r3, [r4, #8]
 8005afa:	6823      	ldr	r3, [r4, #0]
 8005afc:	1c5a      	adds	r2, r3, #1
 8005afe:	6022      	str	r2, [r4, #0]
 8005b00:	701e      	strb	r6, [r3, #0]
 8005b02:	6962      	ldr	r2, [r4, #20]
 8005b04:	1c43      	adds	r3, r0, #1
 8005b06:	429a      	cmp	r2, r3
 8005b08:	d004      	beq.n	8005b14 <__swbuf_r+0x5a>
 8005b0a:	89a3      	ldrh	r3, [r4, #12]
 8005b0c:	07db      	lsls	r3, r3, #31
 8005b0e:	d506      	bpl.n	8005b1e <__swbuf_r+0x64>
 8005b10:	2e0a      	cmp	r6, #10
 8005b12:	d104      	bne.n	8005b1e <__swbuf_r+0x64>
 8005b14:	4621      	mov	r1, r4
 8005b16:	4628      	mov	r0, r5
 8005b18:	f000 ff1a 	bl	8006950 <_fflush_r>
 8005b1c:	b938      	cbnz	r0, 8005b2e <__swbuf_r+0x74>
 8005b1e:	4638      	mov	r0, r7
 8005b20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005b22:	4621      	mov	r1, r4
 8005b24:	4628      	mov	r0, r5
 8005b26:	f000 f805 	bl	8005b34 <__swsetup_r>
 8005b2a:	2800      	cmp	r0, #0
 8005b2c:	d0d5      	beq.n	8005ada <__swbuf_r+0x20>
 8005b2e:	f04f 37ff 	mov.w	r7, #4294967295
 8005b32:	e7f4      	b.n	8005b1e <__swbuf_r+0x64>

08005b34 <__swsetup_r>:
 8005b34:	b538      	push	{r3, r4, r5, lr}
 8005b36:	4b2a      	ldr	r3, [pc, #168]	; (8005be0 <__swsetup_r+0xac>)
 8005b38:	4605      	mov	r5, r0
 8005b3a:	6818      	ldr	r0, [r3, #0]
 8005b3c:	460c      	mov	r4, r1
 8005b3e:	b118      	cbz	r0, 8005b48 <__swsetup_r+0x14>
 8005b40:	6a03      	ldr	r3, [r0, #32]
 8005b42:	b90b      	cbnz	r3, 8005b48 <__swsetup_r+0x14>
 8005b44:	f7ff feb2 	bl	80058ac <__sinit>
 8005b48:	89a3      	ldrh	r3, [r4, #12]
 8005b4a:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005b4e:	0718      	lsls	r0, r3, #28
 8005b50:	d422      	bmi.n	8005b98 <__swsetup_r+0x64>
 8005b52:	06d9      	lsls	r1, r3, #27
 8005b54:	d407      	bmi.n	8005b66 <__swsetup_r+0x32>
 8005b56:	2309      	movs	r3, #9
 8005b58:	602b      	str	r3, [r5, #0]
 8005b5a:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005b5e:	81a3      	strh	r3, [r4, #12]
 8005b60:	f04f 30ff 	mov.w	r0, #4294967295
 8005b64:	e034      	b.n	8005bd0 <__swsetup_r+0x9c>
 8005b66:	0758      	lsls	r0, r3, #29
 8005b68:	d512      	bpl.n	8005b90 <__swsetup_r+0x5c>
 8005b6a:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005b6c:	b141      	cbz	r1, 8005b80 <__swsetup_r+0x4c>
 8005b6e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005b72:	4299      	cmp	r1, r3
 8005b74:	d002      	beq.n	8005b7c <__swsetup_r+0x48>
 8005b76:	4628      	mov	r0, r5
 8005b78:	f000 f938 	bl	8005dec <_free_r>
 8005b7c:	2300      	movs	r3, #0
 8005b7e:	6363      	str	r3, [r4, #52]	; 0x34
 8005b80:	89a3      	ldrh	r3, [r4, #12]
 8005b82:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8005b86:	81a3      	strh	r3, [r4, #12]
 8005b88:	2300      	movs	r3, #0
 8005b8a:	6063      	str	r3, [r4, #4]
 8005b8c:	6923      	ldr	r3, [r4, #16]
 8005b8e:	6023      	str	r3, [r4, #0]
 8005b90:	89a3      	ldrh	r3, [r4, #12]
 8005b92:	f043 0308 	orr.w	r3, r3, #8
 8005b96:	81a3      	strh	r3, [r4, #12]
 8005b98:	6923      	ldr	r3, [r4, #16]
 8005b9a:	b94b      	cbnz	r3, 8005bb0 <__swsetup_r+0x7c>
 8005b9c:	89a3      	ldrh	r3, [r4, #12]
 8005b9e:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8005ba2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005ba6:	d003      	beq.n	8005bb0 <__swsetup_r+0x7c>
 8005ba8:	4621      	mov	r1, r4
 8005baa:	4628      	mov	r0, r5
 8005bac:	f000 ff30 	bl	8006a10 <__smakebuf_r>
 8005bb0:	89a0      	ldrh	r0, [r4, #12]
 8005bb2:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005bb6:	f010 0301 	ands.w	r3, r0, #1
 8005bba:	d00a      	beq.n	8005bd2 <__swsetup_r+0x9e>
 8005bbc:	2300      	movs	r3, #0
 8005bbe:	60a3      	str	r3, [r4, #8]
 8005bc0:	6963      	ldr	r3, [r4, #20]
 8005bc2:	425b      	negs	r3, r3
 8005bc4:	61a3      	str	r3, [r4, #24]
 8005bc6:	6923      	ldr	r3, [r4, #16]
 8005bc8:	b943      	cbnz	r3, 8005bdc <__swsetup_r+0xa8>
 8005bca:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8005bce:	d1c4      	bne.n	8005b5a <__swsetup_r+0x26>
 8005bd0:	bd38      	pop	{r3, r4, r5, pc}
 8005bd2:	0781      	lsls	r1, r0, #30
 8005bd4:	bf58      	it	pl
 8005bd6:	6963      	ldrpl	r3, [r4, #20]
 8005bd8:	60a3      	str	r3, [r4, #8]
 8005bda:	e7f4      	b.n	8005bc6 <__swsetup_r+0x92>
 8005bdc:	2000      	movs	r0, #0
 8005bde:	e7f7      	b.n	8005bd0 <__swsetup_r+0x9c>
 8005be0:	20000098 	.word	0x20000098

08005be4 <memset>:
 8005be4:	4402      	add	r2, r0
 8005be6:	4603      	mov	r3, r0
 8005be8:	4293      	cmp	r3, r2
 8005bea:	d100      	bne.n	8005bee <memset+0xa>
 8005bec:	4770      	bx	lr
 8005bee:	f803 1b01 	strb.w	r1, [r3], #1
 8005bf2:	e7f9      	b.n	8005be8 <memset+0x4>

08005bf4 <strtok>:
 8005bf4:	4b16      	ldr	r3, [pc, #88]	; (8005c50 <strtok+0x5c>)
 8005bf6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005bf8:	681e      	ldr	r6, [r3, #0]
 8005bfa:	6c74      	ldr	r4, [r6, #68]	; 0x44
 8005bfc:	4605      	mov	r5, r0
 8005bfe:	b9fc      	cbnz	r4, 8005c40 <strtok+0x4c>
 8005c00:	2050      	movs	r0, #80	; 0x50
 8005c02:	9101      	str	r1, [sp, #4]
 8005c04:	f000 f93e 	bl	8005e84 <malloc>
 8005c08:	9901      	ldr	r1, [sp, #4]
 8005c0a:	6470      	str	r0, [r6, #68]	; 0x44
 8005c0c:	4602      	mov	r2, r0
 8005c0e:	b920      	cbnz	r0, 8005c1a <strtok+0x26>
 8005c10:	4b10      	ldr	r3, [pc, #64]	; (8005c54 <strtok+0x60>)
 8005c12:	4811      	ldr	r0, [pc, #68]	; (8005c58 <strtok+0x64>)
 8005c14:	215b      	movs	r1, #91	; 0x5b
 8005c16:	f000 f8cb 	bl	8005db0 <__assert_func>
 8005c1a:	e9c0 4400 	strd	r4, r4, [r0]
 8005c1e:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8005c22:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8005c26:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8005c2a:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8005c2e:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8005c32:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8005c36:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8005c3a:	6184      	str	r4, [r0, #24]
 8005c3c:	7704      	strb	r4, [r0, #28]
 8005c3e:	6244      	str	r4, [r0, #36]	; 0x24
 8005c40:	6c72      	ldr	r2, [r6, #68]	; 0x44
 8005c42:	2301      	movs	r3, #1
 8005c44:	4628      	mov	r0, r5
 8005c46:	b002      	add	sp, #8
 8005c48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8005c4c:	f000 b806 	b.w	8005c5c <__strtok_r>
 8005c50:	20000098 	.word	0x20000098
 8005c54:	08006e0c 	.word	0x08006e0c
 8005c58:	08006e23 	.word	0x08006e23

08005c5c <__strtok_r>:
 8005c5c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005c5e:	b908      	cbnz	r0, 8005c64 <__strtok_r+0x8>
 8005c60:	6810      	ldr	r0, [r2, #0]
 8005c62:	b188      	cbz	r0, 8005c88 <__strtok_r+0x2c>
 8005c64:	4604      	mov	r4, r0
 8005c66:	4620      	mov	r0, r4
 8005c68:	f814 5b01 	ldrb.w	r5, [r4], #1
 8005c6c:	460f      	mov	r7, r1
 8005c6e:	f817 6b01 	ldrb.w	r6, [r7], #1
 8005c72:	b91e      	cbnz	r6, 8005c7c <__strtok_r+0x20>
 8005c74:	b965      	cbnz	r5, 8005c90 <__strtok_r+0x34>
 8005c76:	6015      	str	r5, [r2, #0]
 8005c78:	4628      	mov	r0, r5
 8005c7a:	e005      	b.n	8005c88 <__strtok_r+0x2c>
 8005c7c:	42b5      	cmp	r5, r6
 8005c7e:	d1f6      	bne.n	8005c6e <__strtok_r+0x12>
 8005c80:	2b00      	cmp	r3, #0
 8005c82:	d1f0      	bne.n	8005c66 <__strtok_r+0xa>
 8005c84:	6014      	str	r4, [r2, #0]
 8005c86:	7003      	strb	r3, [r0, #0]
 8005c88:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c8a:	461c      	mov	r4, r3
 8005c8c:	e00c      	b.n	8005ca8 <__strtok_r+0x4c>
 8005c8e:	b915      	cbnz	r5, 8005c96 <__strtok_r+0x3a>
 8005c90:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005c94:	460e      	mov	r6, r1
 8005c96:	f816 5b01 	ldrb.w	r5, [r6], #1
 8005c9a:	42ab      	cmp	r3, r5
 8005c9c:	d1f7      	bne.n	8005c8e <__strtok_r+0x32>
 8005c9e:	2b00      	cmp	r3, #0
 8005ca0:	d0f3      	beq.n	8005c8a <__strtok_r+0x2e>
 8005ca2:	2300      	movs	r3, #0
 8005ca4:	f804 3c01 	strb.w	r3, [r4, #-1]
 8005ca8:	6014      	str	r4, [r2, #0]
 8005caa:	e7ed      	b.n	8005c88 <__strtok_r+0x2c>

08005cac <_close_r>:
 8005cac:	b538      	push	{r3, r4, r5, lr}
 8005cae:	4d06      	ldr	r5, [pc, #24]	; (8005cc8 <_close_r+0x1c>)
 8005cb0:	2300      	movs	r3, #0
 8005cb2:	4604      	mov	r4, r0
 8005cb4:	4608      	mov	r0, r1
 8005cb6:	602b      	str	r3, [r5, #0]
 8005cb8:	f7fb fdf9 	bl	80018ae <_close>
 8005cbc:	1c43      	adds	r3, r0, #1
 8005cbe:	d102      	bne.n	8005cc6 <_close_r+0x1a>
 8005cc0:	682b      	ldr	r3, [r5, #0]
 8005cc2:	b103      	cbz	r3, 8005cc6 <_close_r+0x1a>
 8005cc4:	6023      	str	r3, [r4, #0]
 8005cc6:	bd38      	pop	{r3, r4, r5, pc}
 8005cc8:	20000d74 	.word	0x20000d74

08005ccc <_lseek_r>:
 8005ccc:	b538      	push	{r3, r4, r5, lr}
 8005cce:	4d07      	ldr	r5, [pc, #28]	; (8005cec <_lseek_r+0x20>)
 8005cd0:	4604      	mov	r4, r0
 8005cd2:	4608      	mov	r0, r1
 8005cd4:	4611      	mov	r1, r2
 8005cd6:	2200      	movs	r2, #0
 8005cd8:	602a      	str	r2, [r5, #0]
 8005cda:	461a      	mov	r2, r3
 8005cdc:	f7fb fe0e 	bl	80018fc <_lseek>
 8005ce0:	1c43      	adds	r3, r0, #1
 8005ce2:	d102      	bne.n	8005cea <_lseek_r+0x1e>
 8005ce4:	682b      	ldr	r3, [r5, #0]
 8005ce6:	b103      	cbz	r3, 8005cea <_lseek_r+0x1e>
 8005ce8:	6023      	str	r3, [r4, #0]
 8005cea:	bd38      	pop	{r3, r4, r5, pc}
 8005cec:	20000d74 	.word	0x20000d74

08005cf0 <_read_r>:
 8005cf0:	b538      	push	{r3, r4, r5, lr}
 8005cf2:	4d07      	ldr	r5, [pc, #28]	; (8005d10 <_read_r+0x20>)
 8005cf4:	4604      	mov	r4, r0
 8005cf6:	4608      	mov	r0, r1
 8005cf8:	4611      	mov	r1, r2
 8005cfa:	2200      	movs	r2, #0
 8005cfc:	602a      	str	r2, [r5, #0]
 8005cfe:	461a      	mov	r2, r3
 8005d00:	f7fb fd9c 	bl	800183c <_read>
 8005d04:	1c43      	adds	r3, r0, #1
 8005d06:	d102      	bne.n	8005d0e <_read_r+0x1e>
 8005d08:	682b      	ldr	r3, [r5, #0]
 8005d0a:	b103      	cbz	r3, 8005d0e <_read_r+0x1e>
 8005d0c:	6023      	str	r3, [r4, #0]
 8005d0e:	bd38      	pop	{r3, r4, r5, pc}
 8005d10:	20000d74 	.word	0x20000d74

08005d14 <_write_r>:
 8005d14:	b538      	push	{r3, r4, r5, lr}
 8005d16:	4d07      	ldr	r5, [pc, #28]	; (8005d34 <_write_r+0x20>)
 8005d18:	4604      	mov	r4, r0
 8005d1a:	4608      	mov	r0, r1
 8005d1c:	4611      	mov	r1, r2
 8005d1e:	2200      	movs	r2, #0
 8005d20:	602a      	str	r2, [r5, #0]
 8005d22:	461a      	mov	r2, r3
 8005d24:	f7fb fda7 	bl	8001876 <_write>
 8005d28:	1c43      	adds	r3, r0, #1
 8005d2a:	d102      	bne.n	8005d32 <_write_r+0x1e>
 8005d2c:	682b      	ldr	r3, [r5, #0]
 8005d2e:	b103      	cbz	r3, 8005d32 <_write_r+0x1e>
 8005d30:	6023      	str	r3, [r4, #0]
 8005d32:	bd38      	pop	{r3, r4, r5, pc}
 8005d34:	20000d74 	.word	0x20000d74

08005d38 <__errno>:
 8005d38:	4b01      	ldr	r3, [pc, #4]	; (8005d40 <__errno+0x8>)
 8005d3a:	6818      	ldr	r0, [r3, #0]
 8005d3c:	4770      	bx	lr
 8005d3e:	bf00      	nop
 8005d40:	20000098 	.word	0x20000098

08005d44 <__libc_init_array>:
 8005d44:	b570      	push	{r4, r5, r6, lr}
 8005d46:	4d0d      	ldr	r5, [pc, #52]	; (8005d7c <__libc_init_array+0x38>)
 8005d48:	4c0d      	ldr	r4, [pc, #52]	; (8005d80 <__libc_init_array+0x3c>)
 8005d4a:	1b64      	subs	r4, r4, r5
 8005d4c:	10a4      	asrs	r4, r4, #2
 8005d4e:	2600      	movs	r6, #0
 8005d50:	42a6      	cmp	r6, r4
 8005d52:	d109      	bne.n	8005d68 <__libc_init_array+0x24>
 8005d54:	4d0b      	ldr	r5, [pc, #44]	; (8005d84 <__libc_init_array+0x40>)
 8005d56:	4c0c      	ldr	r4, [pc, #48]	; (8005d88 <__libc_init_array+0x44>)
 8005d58:	f000 ff64 	bl	8006c24 <_init>
 8005d5c:	1b64      	subs	r4, r4, r5
 8005d5e:	10a4      	asrs	r4, r4, #2
 8005d60:	2600      	movs	r6, #0
 8005d62:	42a6      	cmp	r6, r4
 8005d64:	d105      	bne.n	8005d72 <__libc_init_array+0x2e>
 8005d66:	bd70      	pop	{r4, r5, r6, pc}
 8005d68:	f855 3b04 	ldr.w	r3, [r5], #4
 8005d6c:	4798      	blx	r3
 8005d6e:	3601      	adds	r6, #1
 8005d70:	e7ee      	b.n	8005d50 <__libc_init_array+0xc>
 8005d72:	f855 3b04 	ldr.w	r3, [r5], #4
 8005d76:	4798      	blx	r3
 8005d78:	3601      	adds	r6, #1
 8005d7a:	e7f2      	b.n	8005d62 <__libc_init_array+0x1e>
 8005d7c:	08006ef4 	.word	0x08006ef4
 8005d80:	08006ef4 	.word	0x08006ef4
 8005d84:	08006ef4 	.word	0x08006ef4
 8005d88:	08006ef8 	.word	0x08006ef8

08005d8c <__retarget_lock_init_recursive>:
 8005d8c:	4770      	bx	lr

08005d8e <__retarget_lock_acquire_recursive>:
 8005d8e:	4770      	bx	lr

08005d90 <__retarget_lock_release_recursive>:
 8005d90:	4770      	bx	lr

08005d92 <memcpy>:
 8005d92:	440a      	add	r2, r1
 8005d94:	4291      	cmp	r1, r2
 8005d96:	f100 33ff 	add.w	r3, r0, #4294967295
 8005d9a:	d100      	bne.n	8005d9e <memcpy+0xc>
 8005d9c:	4770      	bx	lr
 8005d9e:	b510      	push	{r4, lr}
 8005da0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005da4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005da8:	4291      	cmp	r1, r2
 8005daa:	d1f9      	bne.n	8005da0 <memcpy+0xe>
 8005dac:	bd10      	pop	{r4, pc}
	...

08005db0 <__assert_func>:
 8005db0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005db2:	4614      	mov	r4, r2
 8005db4:	461a      	mov	r2, r3
 8005db6:	4b09      	ldr	r3, [pc, #36]	; (8005ddc <__assert_func+0x2c>)
 8005db8:	681b      	ldr	r3, [r3, #0]
 8005dba:	4605      	mov	r5, r0
 8005dbc:	68d8      	ldr	r0, [r3, #12]
 8005dbe:	b14c      	cbz	r4, 8005dd4 <__assert_func+0x24>
 8005dc0:	4b07      	ldr	r3, [pc, #28]	; (8005de0 <__assert_func+0x30>)
 8005dc2:	9100      	str	r1, [sp, #0]
 8005dc4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005dc8:	4906      	ldr	r1, [pc, #24]	; (8005de4 <__assert_func+0x34>)
 8005dca:	462b      	mov	r3, r5
 8005dcc:	f000 fde8 	bl	80069a0 <fiprintf>
 8005dd0:	f000 fea6 	bl	8006b20 <abort>
 8005dd4:	4b04      	ldr	r3, [pc, #16]	; (8005de8 <__assert_func+0x38>)
 8005dd6:	461c      	mov	r4, r3
 8005dd8:	e7f3      	b.n	8005dc2 <__assert_func+0x12>
 8005dda:	bf00      	nop
 8005ddc:	20000098 	.word	0x20000098
 8005de0:	08006e7d 	.word	0x08006e7d
 8005de4:	08006e8a 	.word	0x08006e8a
 8005de8:	08006eb8 	.word	0x08006eb8

08005dec <_free_r>:
 8005dec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8005dee:	2900      	cmp	r1, #0
 8005df0:	d044      	beq.n	8005e7c <_free_r+0x90>
 8005df2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005df6:	9001      	str	r0, [sp, #4]
 8005df8:	2b00      	cmp	r3, #0
 8005dfa:	f1a1 0404 	sub.w	r4, r1, #4
 8005dfe:	bfb8      	it	lt
 8005e00:	18e4      	addlt	r4, r4, r3
 8005e02:	f000 f8e7 	bl	8005fd4 <__malloc_lock>
 8005e06:	4a1e      	ldr	r2, [pc, #120]	; (8005e80 <_free_r+0x94>)
 8005e08:	9801      	ldr	r0, [sp, #4]
 8005e0a:	6813      	ldr	r3, [r2, #0]
 8005e0c:	b933      	cbnz	r3, 8005e1c <_free_r+0x30>
 8005e0e:	6063      	str	r3, [r4, #4]
 8005e10:	6014      	str	r4, [r2, #0]
 8005e12:	b003      	add	sp, #12
 8005e14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8005e18:	f000 b8e2 	b.w	8005fe0 <__malloc_unlock>
 8005e1c:	42a3      	cmp	r3, r4
 8005e1e:	d908      	bls.n	8005e32 <_free_r+0x46>
 8005e20:	6825      	ldr	r5, [r4, #0]
 8005e22:	1961      	adds	r1, r4, r5
 8005e24:	428b      	cmp	r3, r1
 8005e26:	bf01      	itttt	eq
 8005e28:	6819      	ldreq	r1, [r3, #0]
 8005e2a:	685b      	ldreq	r3, [r3, #4]
 8005e2c:	1949      	addeq	r1, r1, r5
 8005e2e:	6021      	streq	r1, [r4, #0]
 8005e30:	e7ed      	b.n	8005e0e <_free_r+0x22>
 8005e32:	461a      	mov	r2, r3
 8005e34:	685b      	ldr	r3, [r3, #4]
 8005e36:	b10b      	cbz	r3, 8005e3c <_free_r+0x50>
 8005e38:	42a3      	cmp	r3, r4
 8005e3a:	d9fa      	bls.n	8005e32 <_free_r+0x46>
 8005e3c:	6811      	ldr	r1, [r2, #0]
 8005e3e:	1855      	adds	r5, r2, r1
 8005e40:	42a5      	cmp	r5, r4
 8005e42:	d10b      	bne.n	8005e5c <_free_r+0x70>
 8005e44:	6824      	ldr	r4, [r4, #0]
 8005e46:	4421      	add	r1, r4
 8005e48:	1854      	adds	r4, r2, r1
 8005e4a:	42a3      	cmp	r3, r4
 8005e4c:	6011      	str	r1, [r2, #0]
 8005e4e:	d1e0      	bne.n	8005e12 <_free_r+0x26>
 8005e50:	681c      	ldr	r4, [r3, #0]
 8005e52:	685b      	ldr	r3, [r3, #4]
 8005e54:	6053      	str	r3, [r2, #4]
 8005e56:	440c      	add	r4, r1
 8005e58:	6014      	str	r4, [r2, #0]
 8005e5a:	e7da      	b.n	8005e12 <_free_r+0x26>
 8005e5c:	d902      	bls.n	8005e64 <_free_r+0x78>
 8005e5e:	230c      	movs	r3, #12
 8005e60:	6003      	str	r3, [r0, #0]
 8005e62:	e7d6      	b.n	8005e12 <_free_r+0x26>
 8005e64:	6825      	ldr	r5, [r4, #0]
 8005e66:	1961      	adds	r1, r4, r5
 8005e68:	428b      	cmp	r3, r1
 8005e6a:	bf04      	itt	eq
 8005e6c:	6819      	ldreq	r1, [r3, #0]
 8005e6e:	685b      	ldreq	r3, [r3, #4]
 8005e70:	6063      	str	r3, [r4, #4]
 8005e72:	bf04      	itt	eq
 8005e74:	1949      	addeq	r1, r1, r5
 8005e76:	6021      	streq	r1, [r4, #0]
 8005e78:	6054      	str	r4, [r2, #4]
 8005e7a:	e7ca      	b.n	8005e12 <_free_r+0x26>
 8005e7c:	b003      	add	sp, #12
 8005e7e:	bd30      	pop	{r4, r5, pc}
 8005e80:	20000d7c 	.word	0x20000d7c

08005e84 <malloc>:
 8005e84:	4b02      	ldr	r3, [pc, #8]	; (8005e90 <malloc+0xc>)
 8005e86:	4601      	mov	r1, r0
 8005e88:	6818      	ldr	r0, [r3, #0]
 8005e8a:	f000 b823 	b.w	8005ed4 <_malloc_r>
 8005e8e:	bf00      	nop
 8005e90:	20000098 	.word	0x20000098

08005e94 <sbrk_aligned>:
 8005e94:	b570      	push	{r4, r5, r6, lr}
 8005e96:	4e0e      	ldr	r6, [pc, #56]	; (8005ed0 <sbrk_aligned+0x3c>)
 8005e98:	460c      	mov	r4, r1
 8005e9a:	6831      	ldr	r1, [r6, #0]
 8005e9c:	4605      	mov	r5, r0
 8005e9e:	b911      	cbnz	r1, 8005ea6 <sbrk_aligned+0x12>
 8005ea0:	f000 fe2e 	bl	8006b00 <_sbrk_r>
 8005ea4:	6030      	str	r0, [r6, #0]
 8005ea6:	4621      	mov	r1, r4
 8005ea8:	4628      	mov	r0, r5
 8005eaa:	f000 fe29 	bl	8006b00 <_sbrk_r>
 8005eae:	1c43      	adds	r3, r0, #1
 8005eb0:	d00a      	beq.n	8005ec8 <sbrk_aligned+0x34>
 8005eb2:	1cc4      	adds	r4, r0, #3
 8005eb4:	f024 0403 	bic.w	r4, r4, #3
 8005eb8:	42a0      	cmp	r0, r4
 8005eba:	d007      	beq.n	8005ecc <sbrk_aligned+0x38>
 8005ebc:	1a21      	subs	r1, r4, r0
 8005ebe:	4628      	mov	r0, r5
 8005ec0:	f000 fe1e 	bl	8006b00 <_sbrk_r>
 8005ec4:	3001      	adds	r0, #1
 8005ec6:	d101      	bne.n	8005ecc <sbrk_aligned+0x38>
 8005ec8:	f04f 34ff 	mov.w	r4, #4294967295
 8005ecc:	4620      	mov	r0, r4
 8005ece:	bd70      	pop	{r4, r5, r6, pc}
 8005ed0:	20000d80 	.word	0x20000d80

08005ed4 <_malloc_r>:
 8005ed4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ed8:	1ccd      	adds	r5, r1, #3
 8005eda:	f025 0503 	bic.w	r5, r5, #3
 8005ede:	3508      	adds	r5, #8
 8005ee0:	2d0c      	cmp	r5, #12
 8005ee2:	bf38      	it	cc
 8005ee4:	250c      	movcc	r5, #12
 8005ee6:	2d00      	cmp	r5, #0
 8005ee8:	4607      	mov	r7, r0
 8005eea:	db01      	blt.n	8005ef0 <_malloc_r+0x1c>
 8005eec:	42a9      	cmp	r1, r5
 8005eee:	d905      	bls.n	8005efc <_malloc_r+0x28>
 8005ef0:	230c      	movs	r3, #12
 8005ef2:	603b      	str	r3, [r7, #0]
 8005ef4:	2600      	movs	r6, #0
 8005ef6:	4630      	mov	r0, r6
 8005ef8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005efc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8005fd0 <_malloc_r+0xfc>
 8005f00:	f000 f868 	bl	8005fd4 <__malloc_lock>
 8005f04:	f8d8 3000 	ldr.w	r3, [r8]
 8005f08:	461c      	mov	r4, r3
 8005f0a:	bb5c      	cbnz	r4, 8005f64 <_malloc_r+0x90>
 8005f0c:	4629      	mov	r1, r5
 8005f0e:	4638      	mov	r0, r7
 8005f10:	f7ff ffc0 	bl	8005e94 <sbrk_aligned>
 8005f14:	1c43      	adds	r3, r0, #1
 8005f16:	4604      	mov	r4, r0
 8005f18:	d155      	bne.n	8005fc6 <_malloc_r+0xf2>
 8005f1a:	f8d8 4000 	ldr.w	r4, [r8]
 8005f1e:	4626      	mov	r6, r4
 8005f20:	2e00      	cmp	r6, #0
 8005f22:	d145      	bne.n	8005fb0 <_malloc_r+0xdc>
 8005f24:	2c00      	cmp	r4, #0
 8005f26:	d048      	beq.n	8005fba <_malloc_r+0xe6>
 8005f28:	6823      	ldr	r3, [r4, #0]
 8005f2a:	4631      	mov	r1, r6
 8005f2c:	4638      	mov	r0, r7
 8005f2e:	eb04 0903 	add.w	r9, r4, r3
 8005f32:	f000 fde5 	bl	8006b00 <_sbrk_r>
 8005f36:	4581      	cmp	r9, r0
 8005f38:	d13f      	bne.n	8005fba <_malloc_r+0xe6>
 8005f3a:	6821      	ldr	r1, [r4, #0]
 8005f3c:	1a6d      	subs	r5, r5, r1
 8005f3e:	4629      	mov	r1, r5
 8005f40:	4638      	mov	r0, r7
 8005f42:	f7ff ffa7 	bl	8005e94 <sbrk_aligned>
 8005f46:	3001      	adds	r0, #1
 8005f48:	d037      	beq.n	8005fba <_malloc_r+0xe6>
 8005f4a:	6823      	ldr	r3, [r4, #0]
 8005f4c:	442b      	add	r3, r5
 8005f4e:	6023      	str	r3, [r4, #0]
 8005f50:	f8d8 3000 	ldr.w	r3, [r8]
 8005f54:	2b00      	cmp	r3, #0
 8005f56:	d038      	beq.n	8005fca <_malloc_r+0xf6>
 8005f58:	685a      	ldr	r2, [r3, #4]
 8005f5a:	42a2      	cmp	r2, r4
 8005f5c:	d12b      	bne.n	8005fb6 <_malloc_r+0xe2>
 8005f5e:	2200      	movs	r2, #0
 8005f60:	605a      	str	r2, [r3, #4]
 8005f62:	e00f      	b.n	8005f84 <_malloc_r+0xb0>
 8005f64:	6822      	ldr	r2, [r4, #0]
 8005f66:	1b52      	subs	r2, r2, r5
 8005f68:	d41f      	bmi.n	8005faa <_malloc_r+0xd6>
 8005f6a:	2a0b      	cmp	r2, #11
 8005f6c:	d917      	bls.n	8005f9e <_malloc_r+0xca>
 8005f6e:	1961      	adds	r1, r4, r5
 8005f70:	42a3      	cmp	r3, r4
 8005f72:	6025      	str	r5, [r4, #0]
 8005f74:	bf18      	it	ne
 8005f76:	6059      	strne	r1, [r3, #4]
 8005f78:	6863      	ldr	r3, [r4, #4]
 8005f7a:	bf08      	it	eq
 8005f7c:	f8c8 1000 	streq.w	r1, [r8]
 8005f80:	5162      	str	r2, [r4, r5]
 8005f82:	604b      	str	r3, [r1, #4]
 8005f84:	4638      	mov	r0, r7
 8005f86:	f104 060b 	add.w	r6, r4, #11
 8005f8a:	f000 f829 	bl	8005fe0 <__malloc_unlock>
 8005f8e:	f026 0607 	bic.w	r6, r6, #7
 8005f92:	1d23      	adds	r3, r4, #4
 8005f94:	1af2      	subs	r2, r6, r3
 8005f96:	d0ae      	beq.n	8005ef6 <_malloc_r+0x22>
 8005f98:	1b9b      	subs	r3, r3, r6
 8005f9a:	50a3      	str	r3, [r4, r2]
 8005f9c:	e7ab      	b.n	8005ef6 <_malloc_r+0x22>
 8005f9e:	42a3      	cmp	r3, r4
 8005fa0:	6862      	ldr	r2, [r4, #4]
 8005fa2:	d1dd      	bne.n	8005f60 <_malloc_r+0x8c>
 8005fa4:	f8c8 2000 	str.w	r2, [r8]
 8005fa8:	e7ec      	b.n	8005f84 <_malloc_r+0xb0>
 8005faa:	4623      	mov	r3, r4
 8005fac:	6864      	ldr	r4, [r4, #4]
 8005fae:	e7ac      	b.n	8005f0a <_malloc_r+0x36>
 8005fb0:	4634      	mov	r4, r6
 8005fb2:	6876      	ldr	r6, [r6, #4]
 8005fb4:	e7b4      	b.n	8005f20 <_malloc_r+0x4c>
 8005fb6:	4613      	mov	r3, r2
 8005fb8:	e7cc      	b.n	8005f54 <_malloc_r+0x80>
 8005fba:	230c      	movs	r3, #12
 8005fbc:	603b      	str	r3, [r7, #0]
 8005fbe:	4638      	mov	r0, r7
 8005fc0:	f000 f80e 	bl	8005fe0 <__malloc_unlock>
 8005fc4:	e797      	b.n	8005ef6 <_malloc_r+0x22>
 8005fc6:	6025      	str	r5, [r4, #0]
 8005fc8:	e7dc      	b.n	8005f84 <_malloc_r+0xb0>
 8005fca:	605b      	str	r3, [r3, #4]
 8005fcc:	deff      	udf	#255	; 0xff
 8005fce:	bf00      	nop
 8005fd0:	20000d7c 	.word	0x20000d7c

08005fd4 <__malloc_lock>:
 8005fd4:	4801      	ldr	r0, [pc, #4]	; (8005fdc <__malloc_lock+0x8>)
 8005fd6:	f7ff beda 	b.w	8005d8e <__retarget_lock_acquire_recursive>
 8005fda:	bf00      	nop
 8005fdc:	20000d78 	.word	0x20000d78

08005fe0 <__malloc_unlock>:
 8005fe0:	4801      	ldr	r0, [pc, #4]	; (8005fe8 <__malloc_unlock+0x8>)
 8005fe2:	f7ff bed5 	b.w	8005d90 <__retarget_lock_release_recursive>
 8005fe6:	bf00      	nop
 8005fe8:	20000d78 	.word	0x20000d78

08005fec <__ssputs_r>:
 8005fec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005ff0:	688e      	ldr	r6, [r1, #8]
 8005ff2:	461f      	mov	r7, r3
 8005ff4:	42be      	cmp	r6, r7
 8005ff6:	680b      	ldr	r3, [r1, #0]
 8005ff8:	4682      	mov	sl, r0
 8005ffa:	460c      	mov	r4, r1
 8005ffc:	4690      	mov	r8, r2
 8005ffe:	d82c      	bhi.n	800605a <__ssputs_r+0x6e>
 8006000:	898a      	ldrh	r2, [r1, #12]
 8006002:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8006006:	d026      	beq.n	8006056 <__ssputs_r+0x6a>
 8006008:	6965      	ldr	r5, [r4, #20]
 800600a:	6909      	ldr	r1, [r1, #16]
 800600c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006010:	eba3 0901 	sub.w	r9, r3, r1
 8006014:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8006018:	1c7b      	adds	r3, r7, #1
 800601a:	444b      	add	r3, r9
 800601c:	106d      	asrs	r5, r5, #1
 800601e:	429d      	cmp	r5, r3
 8006020:	bf38      	it	cc
 8006022:	461d      	movcc	r5, r3
 8006024:	0553      	lsls	r3, r2, #21
 8006026:	d527      	bpl.n	8006078 <__ssputs_r+0x8c>
 8006028:	4629      	mov	r1, r5
 800602a:	f7ff ff53 	bl	8005ed4 <_malloc_r>
 800602e:	4606      	mov	r6, r0
 8006030:	b360      	cbz	r0, 800608c <__ssputs_r+0xa0>
 8006032:	6921      	ldr	r1, [r4, #16]
 8006034:	464a      	mov	r2, r9
 8006036:	f7ff feac 	bl	8005d92 <memcpy>
 800603a:	89a3      	ldrh	r3, [r4, #12]
 800603c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8006040:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006044:	81a3      	strh	r3, [r4, #12]
 8006046:	6126      	str	r6, [r4, #16]
 8006048:	6165      	str	r5, [r4, #20]
 800604a:	444e      	add	r6, r9
 800604c:	eba5 0509 	sub.w	r5, r5, r9
 8006050:	6026      	str	r6, [r4, #0]
 8006052:	60a5      	str	r5, [r4, #8]
 8006054:	463e      	mov	r6, r7
 8006056:	42be      	cmp	r6, r7
 8006058:	d900      	bls.n	800605c <__ssputs_r+0x70>
 800605a:	463e      	mov	r6, r7
 800605c:	6820      	ldr	r0, [r4, #0]
 800605e:	4632      	mov	r2, r6
 8006060:	4641      	mov	r1, r8
 8006062:	f000 fd11 	bl	8006a88 <memmove>
 8006066:	68a3      	ldr	r3, [r4, #8]
 8006068:	1b9b      	subs	r3, r3, r6
 800606a:	60a3      	str	r3, [r4, #8]
 800606c:	6823      	ldr	r3, [r4, #0]
 800606e:	4433      	add	r3, r6
 8006070:	6023      	str	r3, [r4, #0]
 8006072:	2000      	movs	r0, #0
 8006074:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006078:	462a      	mov	r2, r5
 800607a:	f000 fd58 	bl	8006b2e <_realloc_r>
 800607e:	4606      	mov	r6, r0
 8006080:	2800      	cmp	r0, #0
 8006082:	d1e0      	bne.n	8006046 <__ssputs_r+0x5a>
 8006084:	6921      	ldr	r1, [r4, #16]
 8006086:	4650      	mov	r0, sl
 8006088:	f7ff feb0 	bl	8005dec <_free_r>
 800608c:	230c      	movs	r3, #12
 800608e:	f8ca 3000 	str.w	r3, [sl]
 8006092:	89a3      	ldrh	r3, [r4, #12]
 8006094:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006098:	81a3      	strh	r3, [r4, #12]
 800609a:	f04f 30ff 	mov.w	r0, #4294967295
 800609e:	e7e9      	b.n	8006074 <__ssputs_r+0x88>

080060a0 <_svfiprintf_r>:
 80060a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80060a4:	4698      	mov	r8, r3
 80060a6:	898b      	ldrh	r3, [r1, #12]
 80060a8:	061b      	lsls	r3, r3, #24
 80060aa:	b09d      	sub	sp, #116	; 0x74
 80060ac:	4607      	mov	r7, r0
 80060ae:	460d      	mov	r5, r1
 80060b0:	4614      	mov	r4, r2
 80060b2:	d50e      	bpl.n	80060d2 <_svfiprintf_r+0x32>
 80060b4:	690b      	ldr	r3, [r1, #16]
 80060b6:	b963      	cbnz	r3, 80060d2 <_svfiprintf_r+0x32>
 80060b8:	2140      	movs	r1, #64	; 0x40
 80060ba:	f7ff ff0b 	bl	8005ed4 <_malloc_r>
 80060be:	6028      	str	r0, [r5, #0]
 80060c0:	6128      	str	r0, [r5, #16]
 80060c2:	b920      	cbnz	r0, 80060ce <_svfiprintf_r+0x2e>
 80060c4:	230c      	movs	r3, #12
 80060c6:	603b      	str	r3, [r7, #0]
 80060c8:	f04f 30ff 	mov.w	r0, #4294967295
 80060cc:	e0d0      	b.n	8006270 <_svfiprintf_r+0x1d0>
 80060ce:	2340      	movs	r3, #64	; 0x40
 80060d0:	616b      	str	r3, [r5, #20]
 80060d2:	2300      	movs	r3, #0
 80060d4:	9309      	str	r3, [sp, #36]	; 0x24
 80060d6:	2320      	movs	r3, #32
 80060d8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80060dc:	f8cd 800c 	str.w	r8, [sp, #12]
 80060e0:	2330      	movs	r3, #48	; 0x30
 80060e2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8006288 <_svfiprintf_r+0x1e8>
 80060e6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80060ea:	f04f 0901 	mov.w	r9, #1
 80060ee:	4623      	mov	r3, r4
 80060f0:	469a      	mov	sl, r3
 80060f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80060f6:	b10a      	cbz	r2, 80060fc <_svfiprintf_r+0x5c>
 80060f8:	2a25      	cmp	r2, #37	; 0x25
 80060fa:	d1f9      	bne.n	80060f0 <_svfiprintf_r+0x50>
 80060fc:	ebba 0b04 	subs.w	fp, sl, r4
 8006100:	d00b      	beq.n	800611a <_svfiprintf_r+0x7a>
 8006102:	465b      	mov	r3, fp
 8006104:	4622      	mov	r2, r4
 8006106:	4629      	mov	r1, r5
 8006108:	4638      	mov	r0, r7
 800610a:	f7ff ff6f 	bl	8005fec <__ssputs_r>
 800610e:	3001      	adds	r0, #1
 8006110:	f000 80a9 	beq.w	8006266 <_svfiprintf_r+0x1c6>
 8006114:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006116:	445a      	add	r2, fp
 8006118:	9209      	str	r2, [sp, #36]	; 0x24
 800611a:	f89a 3000 	ldrb.w	r3, [sl]
 800611e:	2b00      	cmp	r3, #0
 8006120:	f000 80a1 	beq.w	8006266 <_svfiprintf_r+0x1c6>
 8006124:	2300      	movs	r3, #0
 8006126:	f04f 32ff 	mov.w	r2, #4294967295
 800612a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800612e:	f10a 0a01 	add.w	sl, sl, #1
 8006132:	9304      	str	r3, [sp, #16]
 8006134:	9307      	str	r3, [sp, #28]
 8006136:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800613a:	931a      	str	r3, [sp, #104]	; 0x68
 800613c:	4654      	mov	r4, sl
 800613e:	2205      	movs	r2, #5
 8006140:	f814 1b01 	ldrb.w	r1, [r4], #1
 8006144:	4850      	ldr	r0, [pc, #320]	; (8006288 <_svfiprintf_r+0x1e8>)
 8006146:	f7fa f86b 	bl	8000220 <memchr>
 800614a:	9a04      	ldr	r2, [sp, #16]
 800614c:	b9d8      	cbnz	r0, 8006186 <_svfiprintf_r+0xe6>
 800614e:	06d0      	lsls	r0, r2, #27
 8006150:	bf44      	itt	mi
 8006152:	2320      	movmi	r3, #32
 8006154:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006158:	0711      	lsls	r1, r2, #28
 800615a:	bf44      	itt	mi
 800615c:	232b      	movmi	r3, #43	; 0x2b
 800615e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8006162:	f89a 3000 	ldrb.w	r3, [sl]
 8006166:	2b2a      	cmp	r3, #42	; 0x2a
 8006168:	d015      	beq.n	8006196 <_svfiprintf_r+0xf6>
 800616a:	9a07      	ldr	r2, [sp, #28]
 800616c:	4654      	mov	r4, sl
 800616e:	2000      	movs	r0, #0
 8006170:	f04f 0c0a 	mov.w	ip, #10
 8006174:	4621      	mov	r1, r4
 8006176:	f811 3b01 	ldrb.w	r3, [r1], #1
 800617a:	3b30      	subs	r3, #48	; 0x30
 800617c:	2b09      	cmp	r3, #9
 800617e:	d94d      	bls.n	800621c <_svfiprintf_r+0x17c>
 8006180:	b1b0      	cbz	r0, 80061b0 <_svfiprintf_r+0x110>
 8006182:	9207      	str	r2, [sp, #28]
 8006184:	e014      	b.n	80061b0 <_svfiprintf_r+0x110>
 8006186:	eba0 0308 	sub.w	r3, r0, r8
 800618a:	fa09 f303 	lsl.w	r3, r9, r3
 800618e:	4313      	orrs	r3, r2
 8006190:	9304      	str	r3, [sp, #16]
 8006192:	46a2      	mov	sl, r4
 8006194:	e7d2      	b.n	800613c <_svfiprintf_r+0x9c>
 8006196:	9b03      	ldr	r3, [sp, #12]
 8006198:	1d19      	adds	r1, r3, #4
 800619a:	681b      	ldr	r3, [r3, #0]
 800619c:	9103      	str	r1, [sp, #12]
 800619e:	2b00      	cmp	r3, #0
 80061a0:	bfbb      	ittet	lt
 80061a2:	425b      	neglt	r3, r3
 80061a4:	f042 0202 	orrlt.w	r2, r2, #2
 80061a8:	9307      	strge	r3, [sp, #28]
 80061aa:	9307      	strlt	r3, [sp, #28]
 80061ac:	bfb8      	it	lt
 80061ae:	9204      	strlt	r2, [sp, #16]
 80061b0:	7823      	ldrb	r3, [r4, #0]
 80061b2:	2b2e      	cmp	r3, #46	; 0x2e
 80061b4:	d10c      	bne.n	80061d0 <_svfiprintf_r+0x130>
 80061b6:	7863      	ldrb	r3, [r4, #1]
 80061b8:	2b2a      	cmp	r3, #42	; 0x2a
 80061ba:	d134      	bne.n	8006226 <_svfiprintf_r+0x186>
 80061bc:	9b03      	ldr	r3, [sp, #12]
 80061be:	1d1a      	adds	r2, r3, #4
 80061c0:	681b      	ldr	r3, [r3, #0]
 80061c2:	9203      	str	r2, [sp, #12]
 80061c4:	2b00      	cmp	r3, #0
 80061c6:	bfb8      	it	lt
 80061c8:	f04f 33ff 	movlt.w	r3, #4294967295
 80061cc:	3402      	adds	r4, #2
 80061ce:	9305      	str	r3, [sp, #20]
 80061d0:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8006298 <_svfiprintf_r+0x1f8>
 80061d4:	7821      	ldrb	r1, [r4, #0]
 80061d6:	2203      	movs	r2, #3
 80061d8:	4650      	mov	r0, sl
 80061da:	f7fa f821 	bl	8000220 <memchr>
 80061de:	b138      	cbz	r0, 80061f0 <_svfiprintf_r+0x150>
 80061e0:	9b04      	ldr	r3, [sp, #16]
 80061e2:	eba0 000a 	sub.w	r0, r0, sl
 80061e6:	2240      	movs	r2, #64	; 0x40
 80061e8:	4082      	lsls	r2, r0
 80061ea:	4313      	orrs	r3, r2
 80061ec:	3401      	adds	r4, #1
 80061ee:	9304      	str	r3, [sp, #16]
 80061f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80061f4:	4825      	ldr	r0, [pc, #148]	; (800628c <_svfiprintf_r+0x1ec>)
 80061f6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80061fa:	2206      	movs	r2, #6
 80061fc:	f7fa f810 	bl	8000220 <memchr>
 8006200:	2800      	cmp	r0, #0
 8006202:	d038      	beq.n	8006276 <_svfiprintf_r+0x1d6>
 8006204:	4b22      	ldr	r3, [pc, #136]	; (8006290 <_svfiprintf_r+0x1f0>)
 8006206:	bb1b      	cbnz	r3, 8006250 <_svfiprintf_r+0x1b0>
 8006208:	9b03      	ldr	r3, [sp, #12]
 800620a:	3307      	adds	r3, #7
 800620c:	f023 0307 	bic.w	r3, r3, #7
 8006210:	3308      	adds	r3, #8
 8006212:	9303      	str	r3, [sp, #12]
 8006214:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006216:	4433      	add	r3, r6
 8006218:	9309      	str	r3, [sp, #36]	; 0x24
 800621a:	e768      	b.n	80060ee <_svfiprintf_r+0x4e>
 800621c:	fb0c 3202 	mla	r2, ip, r2, r3
 8006220:	460c      	mov	r4, r1
 8006222:	2001      	movs	r0, #1
 8006224:	e7a6      	b.n	8006174 <_svfiprintf_r+0xd4>
 8006226:	2300      	movs	r3, #0
 8006228:	3401      	adds	r4, #1
 800622a:	9305      	str	r3, [sp, #20]
 800622c:	4619      	mov	r1, r3
 800622e:	f04f 0c0a 	mov.w	ip, #10
 8006232:	4620      	mov	r0, r4
 8006234:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006238:	3a30      	subs	r2, #48	; 0x30
 800623a:	2a09      	cmp	r2, #9
 800623c:	d903      	bls.n	8006246 <_svfiprintf_r+0x1a6>
 800623e:	2b00      	cmp	r3, #0
 8006240:	d0c6      	beq.n	80061d0 <_svfiprintf_r+0x130>
 8006242:	9105      	str	r1, [sp, #20]
 8006244:	e7c4      	b.n	80061d0 <_svfiprintf_r+0x130>
 8006246:	fb0c 2101 	mla	r1, ip, r1, r2
 800624a:	4604      	mov	r4, r0
 800624c:	2301      	movs	r3, #1
 800624e:	e7f0      	b.n	8006232 <_svfiprintf_r+0x192>
 8006250:	ab03      	add	r3, sp, #12
 8006252:	9300      	str	r3, [sp, #0]
 8006254:	462a      	mov	r2, r5
 8006256:	4b0f      	ldr	r3, [pc, #60]	; (8006294 <_svfiprintf_r+0x1f4>)
 8006258:	a904      	add	r1, sp, #16
 800625a:	4638      	mov	r0, r7
 800625c:	f3af 8000 	nop.w
 8006260:	1c42      	adds	r2, r0, #1
 8006262:	4606      	mov	r6, r0
 8006264:	d1d6      	bne.n	8006214 <_svfiprintf_r+0x174>
 8006266:	89ab      	ldrh	r3, [r5, #12]
 8006268:	065b      	lsls	r3, r3, #25
 800626a:	f53f af2d 	bmi.w	80060c8 <_svfiprintf_r+0x28>
 800626e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006270:	b01d      	add	sp, #116	; 0x74
 8006272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006276:	ab03      	add	r3, sp, #12
 8006278:	9300      	str	r3, [sp, #0]
 800627a:	462a      	mov	r2, r5
 800627c:	4b05      	ldr	r3, [pc, #20]	; (8006294 <_svfiprintf_r+0x1f4>)
 800627e:	a904      	add	r1, sp, #16
 8006280:	4638      	mov	r0, r7
 8006282:	f000 f9bd 	bl	8006600 <_printf_i>
 8006286:	e7eb      	b.n	8006260 <_svfiprintf_r+0x1c0>
 8006288:	08006eb9 	.word	0x08006eb9
 800628c:	08006ec3 	.word	0x08006ec3
 8006290:	00000000 	.word	0x00000000
 8006294:	08005fed 	.word	0x08005fed
 8006298:	08006ebf 	.word	0x08006ebf

0800629c <__sfputc_r>:
 800629c:	6893      	ldr	r3, [r2, #8]
 800629e:	3b01      	subs	r3, #1
 80062a0:	2b00      	cmp	r3, #0
 80062a2:	b410      	push	{r4}
 80062a4:	6093      	str	r3, [r2, #8]
 80062a6:	da08      	bge.n	80062ba <__sfputc_r+0x1e>
 80062a8:	6994      	ldr	r4, [r2, #24]
 80062aa:	42a3      	cmp	r3, r4
 80062ac:	db01      	blt.n	80062b2 <__sfputc_r+0x16>
 80062ae:	290a      	cmp	r1, #10
 80062b0:	d103      	bne.n	80062ba <__sfputc_r+0x1e>
 80062b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80062b6:	f7ff bc00 	b.w	8005aba <__swbuf_r>
 80062ba:	6813      	ldr	r3, [r2, #0]
 80062bc:	1c58      	adds	r0, r3, #1
 80062be:	6010      	str	r0, [r2, #0]
 80062c0:	7019      	strb	r1, [r3, #0]
 80062c2:	4608      	mov	r0, r1
 80062c4:	f85d 4b04 	ldr.w	r4, [sp], #4
 80062c8:	4770      	bx	lr

080062ca <__sfputs_r>:
 80062ca:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80062cc:	4606      	mov	r6, r0
 80062ce:	460f      	mov	r7, r1
 80062d0:	4614      	mov	r4, r2
 80062d2:	18d5      	adds	r5, r2, r3
 80062d4:	42ac      	cmp	r4, r5
 80062d6:	d101      	bne.n	80062dc <__sfputs_r+0x12>
 80062d8:	2000      	movs	r0, #0
 80062da:	e007      	b.n	80062ec <__sfputs_r+0x22>
 80062dc:	f814 1b01 	ldrb.w	r1, [r4], #1
 80062e0:	463a      	mov	r2, r7
 80062e2:	4630      	mov	r0, r6
 80062e4:	f7ff ffda 	bl	800629c <__sfputc_r>
 80062e8:	1c43      	adds	r3, r0, #1
 80062ea:	d1f3      	bne.n	80062d4 <__sfputs_r+0xa>
 80062ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080062f0 <_vfiprintf_r>:
 80062f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80062f4:	460d      	mov	r5, r1
 80062f6:	b09d      	sub	sp, #116	; 0x74
 80062f8:	4614      	mov	r4, r2
 80062fa:	4698      	mov	r8, r3
 80062fc:	4606      	mov	r6, r0
 80062fe:	b118      	cbz	r0, 8006308 <_vfiprintf_r+0x18>
 8006300:	6a03      	ldr	r3, [r0, #32]
 8006302:	b90b      	cbnz	r3, 8006308 <_vfiprintf_r+0x18>
 8006304:	f7ff fad2 	bl	80058ac <__sinit>
 8006308:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800630a:	07d9      	lsls	r1, r3, #31
 800630c:	d405      	bmi.n	800631a <_vfiprintf_r+0x2a>
 800630e:	89ab      	ldrh	r3, [r5, #12]
 8006310:	059a      	lsls	r2, r3, #22
 8006312:	d402      	bmi.n	800631a <_vfiprintf_r+0x2a>
 8006314:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006316:	f7ff fd3a 	bl	8005d8e <__retarget_lock_acquire_recursive>
 800631a:	89ab      	ldrh	r3, [r5, #12]
 800631c:	071b      	lsls	r3, r3, #28
 800631e:	d501      	bpl.n	8006324 <_vfiprintf_r+0x34>
 8006320:	692b      	ldr	r3, [r5, #16]
 8006322:	b99b      	cbnz	r3, 800634c <_vfiprintf_r+0x5c>
 8006324:	4629      	mov	r1, r5
 8006326:	4630      	mov	r0, r6
 8006328:	f7ff fc04 	bl	8005b34 <__swsetup_r>
 800632c:	b170      	cbz	r0, 800634c <_vfiprintf_r+0x5c>
 800632e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8006330:	07dc      	lsls	r4, r3, #31
 8006332:	d504      	bpl.n	800633e <_vfiprintf_r+0x4e>
 8006334:	f04f 30ff 	mov.w	r0, #4294967295
 8006338:	b01d      	add	sp, #116	; 0x74
 800633a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800633e:	89ab      	ldrh	r3, [r5, #12]
 8006340:	0598      	lsls	r0, r3, #22
 8006342:	d4f7      	bmi.n	8006334 <_vfiprintf_r+0x44>
 8006344:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8006346:	f7ff fd23 	bl	8005d90 <__retarget_lock_release_recursive>
 800634a:	e7f3      	b.n	8006334 <_vfiprintf_r+0x44>
 800634c:	2300      	movs	r3, #0
 800634e:	9309      	str	r3, [sp, #36]	; 0x24
 8006350:	2320      	movs	r3, #32
 8006352:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8006356:	f8cd 800c 	str.w	r8, [sp, #12]
 800635a:	2330      	movs	r3, #48	; 0x30
 800635c:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 8006510 <_vfiprintf_r+0x220>
 8006360:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006364:	f04f 0901 	mov.w	r9, #1
 8006368:	4623      	mov	r3, r4
 800636a:	469a      	mov	sl, r3
 800636c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8006370:	b10a      	cbz	r2, 8006376 <_vfiprintf_r+0x86>
 8006372:	2a25      	cmp	r2, #37	; 0x25
 8006374:	d1f9      	bne.n	800636a <_vfiprintf_r+0x7a>
 8006376:	ebba 0b04 	subs.w	fp, sl, r4
 800637a:	d00b      	beq.n	8006394 <_vfiprintf_r+0xa4>
 800637c:	465b      	mov	r3, fp
 800637e:	4622      	mov	r2, r4
 8006380:	4629      	mov	r1, r5
 8006382:	4630      	mov	r0, r6
 8006384:	f7ff ffa1 	bl	80062ca <__sfputs_r>
 8006388:	3001      	adds	r0, #1
 800638a:	f000 80a9 	beq.w	80064e0 <_vfiprintf_r+0x1f0>
 800638e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8006390:	445a      	add	r2, fp
 8006392:	9209      	str	r2, [sp, #36]	; 0x24
 8006394:	f89a 3000 	ldrb.w	r3, [sl]
 8006398:	2b00      	cmp	r3, #0
 800639a:	f000 80a1 	beq.w	80064e0 <_vfiprintf_r+0x1f0>
 800639e:	2300      	movs	r3, #0
 80063a0:	f04f 32ff 	mov.w	r2, #4294967295
 80063a4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80063a8:	f10a 0a01 	add.w	sl, sl, #1
 80063ac:	9304      	str	r3, [sp, #16]
 80063ae:	9307      	str	r3, [sp, #28]
 80063b0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80063b4:	931a      	str	r3, [sp, #104]	; 0x68
 80063b6:	4654      	mov	r4, sl
 80063b8:	2205      	movs	r2, #5
 80063ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 80063be:	4854      	ldr	r0, [pc, #336]	; (8006510 <_vfiprintf_r+0x220>)
 80063c0:	f7f9 ff2e 	bl	8000220 <memchr>
 80063c4:	9a04      	ldr	r2, [sp, #16]
 80063c6:	b9d8      	cbnz	r0, 8006400 <_vfiprintf_r+0x110>
 80063c8:	06d1      	lsls	r1, r2, #27
 80063ca:	bf44      	itt	mi
 80063cc:	2320      	movmi	r3, #32
 80063ce:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80063d2:	0713      	lsls	r3, r2, #28
 80063d4:	bf44      	itt	mi
 80063d6:	232b      	movmi	r3, #43	; 0x2b
 80063d8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80063dc:	f89a 3000 	ldrb.w	r3, [sl]
 80063e0:	2b2a      	cmp	r3, #42	; 0x2a
 80063e2:	d015      	beq.n	8006410 <_vfiprintf_r+0x120>
 80063e4:	9a07      	ldr	r2, [sp, #28]
 80063e6:	4654      	mov	r4, sl
 80063e8:	2000      	movs	r0, #0
 80063ea:	f04f 0c0a 	mov.w	ip, #10
 80063ee:	4621      	mov	r1, r4
 80063f0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80063f4:	3b30      	subs	r3, #48	; 0x30
 80063f6:	2b09      	cmp	r3, #9
 80063f8:	d94d      	bls.n	8006496 <_vfiprintf_r+0x1a6>
 80063fa:	b1b0      	cbz	r0, 800642a <_vfiprintf_r+0x13a>
 80063fc:	9207      	str	r2, [sp, #28]
 80063fe:	e014      	b.n	800642a <_vfiprintf_r+0x13a>
 8006400:	eba0 0308 	sub.w	r3, r0, r8
 8006404:	fa09 f303 	lsl.w	r3, r9, r3
 8006408:	4313      	orrs	r3, r2
 800640a:	9304      	str	r3, [sp, #16]
 800640c:	46a2      	mov	sl, r4
 800640e:	e7d2      	b.n	80063b6 <_vfiprintf_r+0xc6>
 8006410:	9b03      	ldr	r3, [sp, #12]
 8006412:	1d19      	adds	r1, r3, #4
 8006414:	681b      	ldr	r3, [r3, #0]
 8006416:	9103      	str	r1, [sp, #12]
 8006418:	2b00      	cmp	r3, #0
 800641a:	bfbb      	ittet	lt
 800641c:	425b      	neglt	r3, r3
 800641e:	f042 0202 	orrlt.w	r2, r2, #2
 8006422:	9307      	strge	r3, [sp, #28]
 8006424:	9307      	strlt	r3, [sp, #28]
 8006426:	bfb8      	it	lt
 8006428:	9204      	strlt	r2, [sp, #16]
 800642a:	7823      	ldrb	r3, [r4, #0]
 800642c:	2b2e      	cmp	r3, #46	; 0x2e
 800642e:	d10c      	bne.n	800644a <_vfiprintf_r+0x15a>
 8006430:	7863      	ldrb	r3, [r4, #1]
 8006432:	2b2a      	cmp	r3, #42	; 0x2a
 8006434:	d134      	bne.n	80064a0 <_vfiprintf_r+0x1b0>
 8006436:	9b03      	ldr	r3, [sp, #12]
 8006438:	1d1a      	adds	r2, r3, #4
 800643a:	681b      	ldr	r3, [r3, #0]
 800643c:	9203      	str	r2, [sp, #12]
 800643e:	2b00      	cmp	r3, #0
 8006440:	bfb8      	it	lt
 8006442:	f04f 33ff 	movlt.w	r3, #4294967295
 8006446:	3402      	adds	r4, #2
 8006448:	9305      	str	r3, [sp, #20]
 800644a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 8006520 <_vfiprintf_r+0x230>
 800644e:	7821      	ldrb	r1, [r4, #0]
 8006450:	2203      	movs	r2, #3
 8006452:	4650      	mov	r0, sl
 8006454:	f7f9 fee4 	bl	8000220 <memchr>
 8006458:	b138      	cbz	r0, 800646a <_vfiprintf_r+0x17a>
 800645a:	9b04      	ldr	r3, [sp, #16]
 800645c:	eba0 000a 	sub.w	r0, r0, sl
 8006460:	2240      	movs	r2, #64	; 0x40
 8006462:	4082      	lsls	r2, r0
 8006464:	4313      	orrs	r3, r2
 8006466:	3401      	adds	r4, #1
 8006468:	9304      	str	r3, [sp, #16]
 800646a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800646e:	4829      	ldr	r0, [pc, #164]	; (8006514 <_vfiprintf_r+0x224>)
 8006470:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006474:	2206      	movs	r2, #6
 8006476:	f7f9 fed3 	bl	8000220 <memchr>
 800647a:	2800      	cmp	r0, #0
 800647c:	d03f      	beq.n	80064fe <_vfiprintf_r+0x20e>
 800647e:	4b26      	ldr	r3, [pc, #152]	; (8006518 <_vfiprintf_r+0x228>)
 8006480:	bb1b      	cbnz	r3, 80064ca <_vfiprintf_r+0x1da>
 8006482:	9b03      	ldr	r3, [sp, #12]
 8006484:	3307      	adds	r3, #7
 8006486:	f023 0307 	bic.w	r3, r3, #7
 800648a:	3308      	adds	r3, #8
 800648c:	9303      	str	r3, [sp, #12]
 800648e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006490:	443b      	add	r3, r7
 8006492:	9309      	str	r3, [sp, #36]	; 0x24
 8006494:	e768      	b.n	8006368 <_vfiprintf_r+0x78>
 8006496:	fb0c 3202 	mla	r2, ip, r2, r3
 800649a:	460c      	mov	r4, r1
 800649c:	2001      	movs	r0, #1
 800649e:	e7a6      	b.n	80063ee <_vfiprintf_r+0xfe>
 80064a0:	2300      	movs	r3, #0
 80064a2:	3401      	adds	r4, #1
 80064a4:	9305      	str	r3, [sp, #20]
 80064a6:	4619      	mov	r1, r3
 80064a8:	f04f 0c0a 	mov.w	ip, #10
 80064ac:	4620      	mov	r0, r4
 80064ae:	f810 2b01 	ldrb.w	r2, [r0], #1
 80064b2:	3a30      	subs	r2, #48	; 0x30
 80064b4:	2a09      	cmp	r2, #9
 80064b6:	d903      	bls.n	80064c0 <_vfiprintf_r+0x1d0>
 80064b8:	2b00      	cmp	r3, #0
 80064ba:	d0c6      	beq.n	800644a <_vfiprintf_r+0x15a>
 80064bc:	9105      	str	r1, [sp, #20]
 80064be:	e7c4      	b.n	800644a <_vfiprintf_r+0x15a>
 80064c0:	fb0c 2101 	mla	r1, ip, r1, r2
 80064c4:	4604      	mov	r4, r0
 80064c6:	2301      	movs	r3, #1
 80064c8:	e7f0      	b.n	80064ac <_vfiprintf_r+0x1bc>
 80064ca:	ab03      	add	r3, sp, #12
 80064cc:	9300      	str	r3, [sp, #0]
 80064ce:	462a      	mov	r2, r5
 80064d0:	4b12      	ldr	r3, [pc, #72]	; (800651c <_vfiprintf_r+0x22c>)
 80064d2:	a904      	add	r1, sp, #16
 80064d4:	4630      	mov	r0, r6
 80064d6:	f3af 8000 	nop.w
 80064da:	4607      	mov	r7, r0
 80064dc:	1c78      	adds	r0, r7, #1
 80064de:	d1d6      	bne.n	800648e <_vfiprintf_r+0x19e>
 80064e0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80064e2:	07d9      	lsls	r1, r3, #31
 80064e4:	d405      	bmi.n	80064f2 <_vfiprintf_r+0x202>
 80064e6:	89ab      	ldrh	r3, [r5, #12]
 80064e8:	059a      	lsls	r2, r3, #22
 80064ea:	d402      	bmi.n	80064f2 <_vfiprintf_r+0x202>
 80064ec:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80064ee:	f7ff fc4f 	bl	8005d90 <__retarget_lock_release_recursive>
 80064f2:	89ab      	ldrh	r3, [r5, #12]
 80064f4:	065b      	lsls	r3, r3, #25
 80064f6:	f53f af1d 	bmi.w	8006334 <_vfiprintf_r+0x44>
 80064fa:	9809      	ldr	r0, [sp, #36]	; 0x24
 80064fc:	e71c      	b.n	8006338 <_vfiprintf_r+0x48>
 80064fe:	ab03      	add	r3, sp, #12
 8006500:	9300      	str	r3, [sp, #0]
 8006502:	462a      	mov	r2, r5
 8006504:	4b05      	ldr	r3, [pc, #20]	; (800651c <_vfiprintf_r+0x22c>)
 8006506:	a904      	add	r1, sp, #16
 8006508:	4630      	mov	r0, r6
 800650a:	f000 f879 	bl	8006600 <_printf_i>
 800650e:	e7e4      	b.n	80064da <_vfiprintf_r+0x1ea>
 8006510:	08006eb9 	.word	0x08006eb9
 8006514:	08006ec3 	.word	0x08006ec3
 8006518:	00000000 	.word	0x00000000
 800651c:	080062cb 	.word	0x080062cb
 8006520:	08006ebf 	.word	0x08006ebf

08006524 <_printf_common>:
 8006524:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006528:	4616      	mov	r6, r2
 800652a:	4699      	mov	r9, r3
 800652c:	688a      	ldr	r2, [r1, #8]
 800652e:	690b      	ldr	r3, [r1, #16]
 8006530:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8006534:	4293      	cmp	r3, r2
 8006536:	bfb8      	it	lt
 8006538:	4613      	movlt	r3, r2
 800653a:	6033      	str	r3, [r6, #0]
 800653c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8006540:	4607      	mov	r7, r0
 8006542:	460c      	mov	r4, r1
 8006544:	b10a      	cbz	r2, 800654a <_printf_common+0x26>
 8006546:	3301      	adds	r3, #1
 8006548:	6033      	str	r3, [r6, #0]
 800654a:	6823      	ldr	r3, [r4, #0]
 800654c:	0699      	lsls	r1, r3, #26
 800654e:	bf42      	ittt	mi
 8006550:	6833      	ldrmi	r3, [r6, #0]
 8006552:	3302      	addmi	r3, #2
 8006554:	6033      	strmi	r3, [r6, #0]
 8006556:	6825      	ldr	r5, [r4, #0]
 8006558:	f015 0506 	ands.w	r5, r5, #6
 800655c:	d106      	bne.n	800656c <_printf_common+0x48>
 800655e:	f104 0a19 	add.w	sl, r4, #25
 8006562:	68e3      	ldr	r3, [r4, #12]
 8006564:	6832      	ldr	r2, [r6, #0]
 8006566:	1a9b      	subs	r3, r3, r2
 8006568:	42ab      	cmp	r3, r5
 800656a:	dc26      	bgt.n	80065ba <_printf_common+0x96>
 800656c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8006570:	1e13      	subs	r3, r2, #0
 8006572:	6822      	ldr	r2, [r4, #0]
 8006574:	bf18      	it	ne
 8006576:	2301      	movne	r3, #1
 8006578:	0692      	lsls	r2, r2, #26
 800657a:	d42b      	bmi.n	80065d4 <_printf_common+0xb0>
 800657c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8006580:	4649      	mov	r1, r9
 8006582:	4638      	mov	r0, r7
 8006584:	47c0      	blx	r8
 8006586:	3001      	adds	r0, #1
 8006588:	d01e      	beq.n	80065c8 <_printf_common+0xa4>
 800658a:	6823      	ldr	r3, [r4, #0]
 800658c:	6922      	ldr	r2, [r4, #16]
 800658e:	f003 0306 	and.w	r3, r3, #6
 8006592:	2b04      	cmp	r3, #4
 8006594:	bf02      	ittt	eq
 8006596:	68e5      	ldreq	r5, [r4, #12]
 8006598:	6833      	ldreq	r3, [r6, #0]
 800659a:	1aed      	subeq	r5, r5, r3
 800659c:	68a3      	ldr	r3, [r4, #8]
 800659e:	bf0c      	ite	eq
 80065a0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80065a4:	2500      	movne	r5, #0
 80065a6:	4293      	cmp	r3, r2
 80065a8:	bfc4      	itt	gt
 80065aa:	1a9b      	subgt	r3, r3, r2
 80065ac:	18ed      	addgt	r5, r5, r3
 80065ae:	2600      	movs	r6, #0
 80065b0:	341a      	adds	r4, #26
 80065b2:	42b5      	cmp	r5, r6
 80065b4:	d11a      	bne.n	80065ec <_printf_common+0xc8>
 80065b6:	2000      	movs	r0, #0
 80065b8:	e008      	b.n	80065cc <_printf_common+0xa8>
 80065ba:	2301      	movs	r3, #1
 80065bc:	4652      	mov	r2, sl
 80065be:	4649      	mov	r1, r9
 80065c0:	4638      	mov	r0, r7
 80065c2:	47c0      	blx	r8
 80065c4:	3001      	adds	r0, #1
 80065c6:	d103      	bne.n	80065d0 <_printf_common+0xac>
 80065c8:	f04f 30ff 	mov.w	r0, #4294967295
 80065cc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80065d0:	3501      	adds	r5, #1
 80065d2:	e7c6      	b.n	8006562 <_printf_common+0x3e>
 80065d4:	18e1      	adds	r1, r4, r3
 80065d6:	1c5a      	adds	r2, r3, #1
 80065d8:	2030      	movs	r0, #48	; 0x30
 80065da:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80065de:	4422      	add	r2, r4
 80065e0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80065e4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80065e8:	3302      	adds	r3, #2
 80065ea:	e7c7      	b.n	800657c <_printf_common+0x58>
 80065ec:	2301      	movs	r3, #1
 80065ee:	4622      	mov	r2, r4
 80065f0:	4649      	mov	r1, r9
 80065f2:	4638      	mov	r0, r7
 80065f4:	47c0      	blx	r8
 80065f6:	3001      	adds	r0, #1
 80065f8:	d0e6      	beq.n	80065c8 <_printf_common+0xa4>
 80065fa:	3601      	adds	r6, #1
 80065fc:	e7d9      	b.n	80065b2 <_printf_common+0x8e>
	...

08006600 <_printf_i>:
 8006600:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8006604:	7e0f      	ldrb	r7, [r1, #24]
 8006606:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8006608:	2f78      	cmp	r7, #120	; 0x78
 800660a:	4691      	mov	r9, r2
 800660c:	4680      	mov	r8, r0
 800660e:	460c      	mov	r4, r1
 8006610:	469a      	mov	sl, r3
 8006612:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8006616:	d807      	bhi.n	8006628 <_printf_i+0x28>
 8006618:	2f62      	cmp	r7, #98	; 0x62
 800661a:	d80a      	bhi.n	8006632 <_printf_i+0x32>
 800661c:	2f00      	cmp	r7, #0
 800661e:	f000 80d4 	beq.w	80067ca <_printf_i+0x1ca>
 8006622:	2f58      	cmp	r7, #88	; 0x58
 8006624:	f000 80c0 	beq.w	80067a8 <_printf_i+0x1a8>
 8006628:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800662c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8006630:	e03a      	b.n	80066a8 <_printf_i+0xa8>
 8006632:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8006636:	2b15      	cmp	r3, #21
 8006638:	d8f6      	bhi.n	8006628 <_printf_i+0x28>
 800663a:	a101      	add	r1, pc, #4	; (adr r1, 8006640 <_printf_i+0x40>)
 800663c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8006640:	08006699 	.word	0x08006699
 8006644:	080066ad 	.word	0x080066ad
 8006648:	08006629 	.word	0x08006629
 800664c:	08006629 	.word	0x08006629
 8006650:	08006629 	.word	0x08006629
 8006654:	08006629 	.word	0x08006629
 8006658:	080066ad 	.word	0x080066ad
 800665c:	08006629 	.word	0x08006629
 8006660:	08006629 	.word	0x08006629
 8006664:	08006629 	.word	0x08006629
 8006668:	08006629 	.word	0x08006629
 800666c:	080067b1 	.word	0x080067b1
 8006670:	080066d9 	.word	0x080066d9
 8006674:	0800676b 	.word	0x0800676b
 8006678:	08006629 	.word	0x08006629
 800667c:	08006629 	.word	0x08006629
 8006680:	080067d3 	.word	0x080067d3
 8006684:	08006629 	.word	0x08006629
 8006688:	080066d9 	.word	0x080066d9
 800668c:	08006629 	.word	0x08006629
 8006690:	08006629 	.word	0x08006629
 8006694:	08006773 	.word	0x08006773
 8006698:	682b      	ldr	r3, [r5, #0]
 800669a:	1d1a      	adds	r2, r3, #4
 800669c:	681b      	ldr	r3, [r3, #0]
 800669e:	602a      	str	r2, [r5, #0]
 80066a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80066a4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80066a8:	2301      	movs	r3, #1
 80066aa:	e09f      	b.n	80067ec <_printf_i+0x1ec>
 80066ac:	6820      	ldr	r0, [r4, #0]
 80066ae:	682b      	ldr	r3, [r5, #0]
 80066b0:	0607      	lsls	r7, r0, #24
 80066b2:	f103 0104 	add.w	r1, r3, #4
 80066b6:	6029      	str	r1, [r5, #0]
 80066b8:	d501      	bpl.n	80066be <_printf_i+0xbe>
 80066ba:	681e      	ldr	r6, [r3, #0]
 80066bc:	e003      	b.n	80066c6 <_printf_i+0xc6>
 80066be:	0646      	lsls	r6, r0, #25
 80066c0:	d5fb      	bpl.n	80066ba <_printf_i+0xba>
 80066c2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80066c6:	2e00      	cmp	r6, #0
 80066c8:	da03      	bge.n	80066d2 <_printf_i+0xd2>
 80066ca:	232d      	movs	r3, #45	; 0x2d
 80066cc:	4276      	negs	r6, r6
 80066ce:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80066d2:	485a      	ldr	r0, [pc, #360]	; (800683c <_printf_i+0x23c>)
 80066d4:	230a      	movs	r3, #10
 80066d6:	e012      	b.n	80066fe <_printf_i+0xfe>
 80066d8:	682b      	ldr	r3, [r5, #0]
 80066da:	6820      	ldr	r0, [r4, #0]
 80066dc:	1d19      	adds	r1, r3, #4
 80066de:	6029      	str	r1, [r5, #0]
 80066e0:	0605      	lsls	r5, r0, #24
 80066e2:	d501      	bpl.n	80066e8 <_printf_i+0xe8>
 80066e4:	681e      	ldr	r6, [r3, #0]
 80066e6:	e002      	b.n	80066ee <_printf_i+0xee>
 80066e8:	0641      	lsls	r1, r0, #25
 80066ea:	d5fb      	bpl.n	80066e4 <_printf_i+0xe4>
 80066ec:	881e      	ldrh	r6, [r3, #0]
 80066ee:	4853      	ldr	r0, [pc, #332]	; (800683c <_printf_i+0x23c>)
 80066f0:	2f6f      	cmp	r7, #111	; 0x6f
 80066f2:	bf0c      	ite	eq
 80066f4:	2308      	moveq	r3, #8
 80066f6:	230a      	movne	r3, #10
 80066f8:	2100      	movs	r1, #0
 80066fa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80066fe:	6865      	ldr	r5, [r4, #4]
 8006700:	60a5      	str	r5, [r4, #8]
 8006702:	2d00      	cmp	r5, #0
 8006704:	bfa2      	ittt	ge
 8006706:	6821      	ldrge	r1, [r4, #0]
 8006708:	f021 0104 	bicge.w	r1, r1, #4
 800670c:	6021      	strge	r1, [r4, #0]
 800670e:	b90e      	cbnz	r6, 8006714 <_printf_i+0x114>
 8006710:	2d00      	cmp	r5, #0
 8006712:	d04b      	beq.n	80067ac <_printf_i+0x1ac>
 8006714:	4615      	mov	r5, r2
 8006716:	fbb6 f1f3 	udiv	r1, r6, r3
 800671a:	fb03 6711 	mls	r7, r3, r1, r6
 800671e:	5dc7      	ldrb	r7, [r0, r7]
 8006720:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8006724:	4637      	mov	r7, r6
 8006726:	42bb      	cmp	r3, r7
 8006728:	460e      	mov	r6, r1
 800672a:	d9f4      	bls.n	8006716 <_printf_i+0x116>
 800672c:	2b08      	cmp	r3, #8
 800672e:	d10b      	bne.n	8006748 <_printf_i+0x148>
 8006730:	6823      	ldr	r3, [r4, #0]
 8006732:	07de      	lsls	r6, r3, #31
 8006734:	d508      	bpl.n	8006748 <_printf_i+0x148>
 8006736:	6923      	ldr	r3, [r4, #16]
 8006738:	6861      	ldr	r1, [r4, #4]
 800673a:	4299      	cmp	r1, r3
 800673c:	bfde      	ittt	le
 800673e:	2330      	movle	r3, #48	; 0x30
 8006740:	f805 3c01 	strble.w	r3, [r5, #-1]
 8006744:	f105 35ff 	addle.w	r5, r5, #4294967295
 8006748:	1b52      	subs	r2, r2, r5
 800674a:	6122      	str	r2, [r4, #16]
 800674c:	f8cd a000 	str.w	sl, [sp]
 8006750:	464b      	mov	r3, r9
 8006752:	aa03      	add	r2, sp, #12
 8006754:	4621      	mov	r1, r4
 8006756:	4640      	mov	r0, r8
 8006758:	f7ff fee4 	bl	8006524 <_printf_common>
 800675c:	3001      	adds	r0, #1
 800675e:	d14a      	bne.n	80067f6 <_printf_i+0x1f6>
 8006760:	f04f 30ff 	mov.w	r0, #4294967295
 8006764:	b004      	add	sp, #16
 8006766:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800676a:	6823      	ldr	r3, [r4, #0]
 800676c:	f043 0320 	orr.w	r3, r3, #32
 8006770:	6023      	str	r3, [r4, #0]
 8006772:	4833      	ldr	r0, [pc, #204]	; (8006840 <_printf_i+0x240>)
 8006774:	2778      	movs	r7, #120	; 0x78
 8006776:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800677a:	6823      	ldr	r3, [r4, #0]
 800677c:	6829      	ldr	r1, [r5, #0]
 800677e:	061f      	lsls	r7, r3, #24
 8006780:	f851 6b04 	ldr.w	r6, [r1], #4
 8006784:	d402      	bmi.n	800678c <_printf_i+0x18c>
 8006786:	065f      	lsls	r7, r3, #25
 8006788:	bf48      	it	mi
 800678a:	b2b6      	uxthmi	r6, r6
 800678c:	07df      	lsls	r7, r3, #31
 800678e:	bf48      	it	mi
 8006790:	f043 0320 	orrmi.w	r3, r3, #32
 8006794:	6029      	str	r1, [r5, #0]
 8006796:	bf48      	it	mi
 8006798:	6023      	strmi	r3, [r4, #0]
 800679a:	b91e      	cbnz	r6, 80067a4 <_printf_i+0x1a4>
 800679c:	6823      	ldr	r3, [r4, #0]
 800679e:	f023 0320 	bic.w	r3, r3, #32
 80067a2:	6023      	str	r3, [r4, #0]
 80067a4:	2310      	movs	r3, #16
 80067a6:	e7a7      	b.n	80066f8 <_printf_i+0xf8>
 80067a8:	4824      	ldr	r0, [pc, #144]	; (800683c <_printf_i+0x23c>)
 80067aa:	e7e4      	b.n	8006776 <_printf_i+0x176>
 80067ac:	4615      	mov	r5, r2
 80067ae:	e7bd      	b.n	800672c <_printf_i+0x12c>
 80067b0:	682b      	ldr	r3, [r5, #0]
 80067b2:	6826      	ldr	r6, [r4, #0]
 80067b4:	6961      	ldr	r1, [r4, #20]
 80067b6:	1d18      	adds	r0, r3, #4
 80067b8:	6028      	str	r0, [r5, #0]
 80067ba:	0635      	lsls	r5, r6, #24
 80067bc:	681b      	ldr	r3, [r3, #0]
 80067be:	d501      	bpl.n	80067c4 <_printf_i+0x1c4>
 80067c0:	6019      	str	r1, [r3, #0]
 80067c2:	e002      	b.n	80067ca <_printf_i+0x1ca>
 80067c4:	0670      	lsls	r0, r6, #25
 80067c6:	d5fb      	bpl.n	80067c0 <_printf_i+0x1c0>
 80067c8:	8019      	strh	r1, [r3, #0]
 80067ca:	2300      	movs	r3, #0
 80067cc:	6123      	str	r3, [r4, #16]
 80067ce:	4615      	mov	r5, r2
 80067d0:	e7bc      	b.n	800674c <_printf_i+0x14c>
 80067d2:	682b      	ldr	r3, [r5, #0]
 80067d4:	1d1a      	adds	r2, r3, #4
 80067d6:	602a      	str	r2, [r5, #0]
 80067d8:	681d      	ldr	r5, [r3, #0]
 80067da:	6862      	ldr	r2, [r4, #4]
 80067dc:	2100      	movs	r1, #0
 80067de:	4628      	mov	r0, r5
 80067e0:	f7f9 fd1e 	bl	8000220 <memchr>
 80067e4:	b108      	cbz	r0, 80067ea <_printf_i+0x1ea>
 80067e6:	1b40      	subs	r0, r0, r5
 80067e8:	6060      	str	r0, [r4, #4]
 80067ea:	6863      	ldr	r3, [r4, #4]
 80067ec:	6123      	str	r3, [r4, #16]
 80067ee:	2300      	movs	r3, #0
 80067f0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80067f4:	e7aa      	b.n	800674c <_printf_i+0x14c>
 80067f6:	6923      	ldr	r3, [r4, #16]
 80067f8:	462a      	mov	r2, r5
 80067fa:	4649      	mov	r1, r9
 80067fc:	4640      	mov	r0, r8
 80067fe:	47d0      	blx	sl
 8006800:	3001      	adds	r0, #1
 8006802:	d0ad      	beq.n	8006760 <_printf_i+0x160>
 8006804:	6823      	ldr	r3, [r4, #0]
 8006806:	079b      	lsls	r3, r3, #30
 8006808:	d413      	bmi.n	8006832 <_printf_i+0x232>
 800680a:	68e0      	ldr	r0, [r4, #12]
 800680c:	9b03      	ldr	r3, [sp, #12]
 800680e:	4298      	cmp	r0, r3
 8006810:	bfb8      	it	lt
 8006812:	4618      	movlt	r0, r3
 8006814:	e7a6      	b.n	8006764 <_printf_i+0x164>
 8006816:	2301      	movs	r3, #1
 8006818:	4632      	mov	r2, r6
 800681a:	4649      	mov	r1, r9
 800681c:	4640      	mov	r0, r8
 800681e:	47d0      	blx	sl
 8006820:	3001      	adds	r0, #1
 8006822:	d09d      	beq.n	8006760 <_printf_i+0x160>
 8006824:	3501      	adds	r5, #1
 8006826:	68e3      	ldr	r3, [r4, #12]
 8006828:	9903      	ldr	r1, [sp, #12]
 800682a:	1a5b      	subs	r3, r3, r1
 800682c:	42ab      	cmp	r3, r5
 800682e:	dcf2      	bgt.n	8006816 <_printf_i+0x216>
 8006830:	e7eb      	b.n	800680a <_printf_i+0x20a>
 8006832:	2500      	movs	r5, #0
 8006834:	f104 0619 	add.w	r6, r4, #25
 8006838:	e7f5      	b.n	8006826 <_printf_i+0x226>
 800683a:	bf00      	nop
 800683c:	08006eca 	.word	0x08006eca
 8006840:	08006edb 	.word	0x08006edb

08006844 <__sflush_r>:
 8006844:	898a      	ldrh	r2, [r1, #12]
 8006846:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800684a:	4605      	mov	r5, r0
 800684c:	0710      	lsls	r0, r2, #28
 800684e:	460c      	mov	r4, r1
 8006850:	d458      	bmi.n	8006904 <__sflush_r+0xc0>
 8006852:	684b      	ldr	r3, [r1, #4]
 8006854:	2b00      	cmp	r3, #0
 8006856:	dc05      	bgt.n	8006864 <__sflush_r+0x20>
 8006858:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800685a:	2b00      	cmp	r3, #0
 800685c:	dc02      	bgt.n	8006864 <__sflush_r+0x20>
 800685e:	2000      	movs	r0, #0
 8006860:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006864:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006866:	2e00      	cmp	r6, #0
 8006868:	d0f9      	beq.n	800685e <__sflush_r+0x1a>
 800686a:	2300      	movs	r3, #0
 800686c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8006870:	682f      	ldr	r7, [r5, #0]
 8006872:	6a21      	ldr	r1, [r4, #32]
 8006874:	602b      	str	r3, [r5, #0]
 8006876:	d032      	beq.n	80068de <__sflush_r+0x9a>
 8006878:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800687a:	89a3      	ldrh	r3, [r4, #12]
 800687c:	075a      	lsls	r2, r3, #29
 800687e:	d505      	bpl.n	800688c <__sflush_r+0x48>
 8006880:	6863      	ldr	r3, [r4, #4]
 8006882:	1ac0      	subs	r0, r0, r3
 8006884:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8006886:	b10b      	cbz	r3, 800688c <__sflush_r+0x48>
 8006888:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800688a:	1ac0      	subs	r0, r0, r3
 800688c:	2300      	movs	r3, #0
 800688e:	4602      	mov	r2, r0
 8006890:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8006892:	6a21      	ldr	r1, [r4, #32]
 8006894:	4628      	mov	r0, r5
 8006896:	47b0      	blx	r6
 8006898:	1c43      	adds	r3, r0, #1
 800689a:	89a3      	ldrh	r3, [r4, #12]
 800689c:	d106      	bne.n	80068ac <__sflush_r+0x68>
 800689e:	6829      	ldr	r1, [r5, #0]
 80068a0:	291d      	cmp	r1, #29
 80068a2:	d82b      	bhi.n	80068fc <__sflush_r+0xb8>
 80068a4:	4a29      	ldr	r2, [pc, #164]	; (800694c <__sflush_r+0x108>)
 80068a6:	410a      	asrs	r2, r1
 80068a8:	07d6      	lsls	r6, r2, #31
 80068aa:	d427      	bmi.n	80068fc <__sflush_r+0xb8>
 80068ac:	2200      	movs	r2, #0
 80068ae:	6062      	str	r2, [r4, #4]
 80068b0:	04d9      	lsls	r1, r3, #19
 80068b2:	6922      	ldr	r2, [r4, #16]
 80068b4:	6022      	str	r2, [r4, #0]
 80068b6:	d504      	bpl.n	80068c2 <__sflush_r+0x7e>
 80068b8:	1c42      	adds	r2, r0, #1
 80068ba:	d101      	bne.n	80068c0 <__sflush_r+0x7c>
 80068bc:	682b      	ldr	r3, [r5, #0]
 80068be:	b903      	cbnz	r3, 80068c2 <__sflush_r+0x7e>
 80068c0:	6560      	str	r0, [r4, #84]	; 0x54
 80068c2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80068c4:	602f      	str	r7, [r5, #0]
 80068c6:	2900      	cmp	r1, #0
 80068c8:	d0c9      	beq.n	800685e <__sflush_r+0x1a>
 80068ca:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80068ce:	4299      	cmp	r1, r3
 80068d0:	d002      	beq.n	80068d8 <__sflush_r+0x94>
 80068d2:	4628      	mov	r0, r5
 80068d4:	f7ff fa8a 	bl	8005dec <_free_r>
 80068d8:	2000      	movs	r0, #0
 80068da:	6360      	str	r0, [r4, #52]	; 0x34
 80068dc:	e7c0      	b.n	8006860 <__sflush_r+0x1c>
 80068de:	2301      	movs	r3, #1
 80068e0:	4628      	mov	r0, r5
 80068e2:	47b0      	blx	r6
 80068e4:	1c41      	adds	r1, r0, #1
 80068e6:	d1c8      	bne.n	800687a <__sflush_r+0x36>
 80068e8:	682b      	ldr	r3, [r5, #0]
 80068ea:	2b00      	cmp	r3, #0
 80068ec:	d0c5      	beq.n	800687a <__sflush_r+0x36>
 80068ee:	2b1d      	cmp	r3, #29
 80068f0:	d001      	beq.n	80068f6 <__sflush_r+0xb2>
 80068f2:	2b16      	cmp	r3, #22
 80068f4:	d101      	bne.n	80068fa <__sflush_r+0xb6>
 80068f6:	602f      	str	r7, [r5, #0]
 80068f8:	e7b1      	b.n	800685e <__sflush_r+0x1a>
 80068fa:	89a3      	ldrh	r3, [r4, #12]
 80068fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8006900:	81a3      	strh	r3, [r4, #12]
 8006902:	e7ad      	b.n	8006860 <__sflush_r+0x1c>
 8006904:	690f      	ldr	r7, [r1, #16]
 8006906:	2f00      	cmp	r7, #0
 8006908:	d0a9      	beq.n	800685e <__sflush_r+0x1a>
 800690a:	0793      	lsls	r3, r2, #30
 800690c:	680e      	ldr	r6, [r1, #0]
 800690e:	bf08      	it	eq
 8006910:	694b      	ldreq	r3, [r1, #20]
 8006912:	600f      	str	r7, [r1, #0]
 8006914:	bf18      	it	ne
 8006916:	2300      	movne	r3, #0
 8006918:	eba6 0807 	sub.w	r8, r6, r7
 800691c:	608b      	str	r3, [r1, #8]
 800691e:	f1b8 0f00 	cmp.w	r8, #0
 8006922:	dd9c      	ble.n	800685e <__sflush_r+0x1a>
 8006924:	6a21      	ldr	r1, [r4, #32]
 8006926:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8006928:	4643      	mov	r3, r8
 800692a:	463a      	mov	r2, r7
 800692c:	4628      	mov	r0, r5
 800692e:	47b0      	blx	r6
 8006930:	2800      	cmp	r0, #0
 8006932:	dc06      	bgt.n	8006942 <__sflush_r+0xfe>
 8006934:	89a3      	ldrh	r3, [r4, #12]
 8006936:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800693a:	81a3      	strh	r3, [r4, #12]
 800693c:	f04f 30ff 	mov.w	r0, #4294967295
 8006940:	e78e      	b.n	8006860 <__sflush_r+0x1c>
 8006942:	4407      	add	r7, r0
 8006944:	eba8 0800 	sub.w	r8, r8, r0
 8006948:	e7e9      	b.n	800691e <__sflush_r+0xda>
 800694a:	bf00      	nop
 800694c:	dfbffffe 	.word	0xdfbffffe

08006950 <_fflush_r>:
 8006950:	b538      	push	{r3, r4, r5, lr}
 8006952:	690b      	ldr	r3, [r1, #16]
 8006954:	4605      	mov	r5, r0
 8006956:	460c      	mov	r4, r1
 8006958:	b913      	cbnz	r3, 8006960 <_fflush_r+0x10>
 800695a:	2500      	movs	r5, #0
 800695c:	4628      	mov	r0, r5
 800695e:	bd38      	pop	{r3, r4, r5, pc}
 8006960:	b118      	cbz	r0, 800696a <_fflush_r+0x1a>
 8006962:	6a03      	ldr	r3, [r0, #32]
 8006964:	b90b      	cbnz	r3, 800696a <_fflush_r+0x1a>
 8006966:	f7fe ffa1 	bl	80058ac <__sinit>
 800696a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800696e:	2b00      	cmp	r3, #0
 8006970:	d0f3      	beq.n	800695a <_fflush_r+0xa>
 8006972:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8006974:	07d0      	lsls	r0, r2, #31
 8006976:	d404      	bmi.n	8006982 <_fflush_r+0x32>
 8006978:	0599      	lsls	r1, r3, #22
 800697a:	d402      	bmi.n	8006982 <_fflush_r+0x32>
 800697c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800697e:	f7ff fa06 	bl	8005d8e <__retarget_lock_acquire_recursive>
 8006982:	4628      	mov	r0, r5
 8006984:	4621      	mov	r1, r4
 8006986:	f7ff ff5d 	bl	8006844 <__sflush_r>
 800698a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800698c:	07da      	lsls	r2, r3, #31
 800698e:	4605      	mov	r5, r0
 8006990:	d4e4      	bmi.n	800695c <_fflush_r+0xc>
 8006992:	89a3      	ldrh	r3, [r4, #12]
 8006994:	059b      	lsls	r3, r3, #22
 8006996:	d4e1      	bmi.n	800695c <_fflush_r+0xc>
 8006998:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800699a:	f7ff f9f9 	bl	8005d90 <__retarget_lock_release_recursive>
 800699e:	e7dd      	b.n	800695c <_fflush_r+0xc>

080069a0 <fiprintf>:
 80069a0:	b40e      	push	{r1, r2, r3}
 80069a2:	b503      	push	{r0, r1, lr}
 80069a4:	4601      	mov	r1, r0
 80069a6:	ab03      	add	r3, sp, #12
 80069a8:	4805      	ldr	r0, [pc, #20]	; (80069c0 <fiprintf+0x20>)
 80069aa:	f853 2b04 	ldr.w	r2, [r3], #4
 80069ae:	6800      	ldr	r0, [r0, #0]
 80069b0:	9301      	str	r3, [sp, #4]
 80069b2:	f7ff fc9d 	bl	80062f0 <_vfiprintf_r>
 80069b6:	b002      	add	sp, #8
 80069b8:	f85d eb04 	ldr.w	lr, [sp], #4
 80069bc:	b003      	add	sp, #12
 80069be:	4770      	bx	lr
 80069c0:	20000098 	.word	0x20000098

080069c4 <__swhatbuf_r>:
 80069c4:	b570      	push	{r4, r5, r6, lr}
 80069c6:	460c      	mov	r4, r1
 80069c8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80069cc:	2900      	cmp	r1, #0
 80069ce:	b096      	sub	sp, #88	; 0x58
 80069d0:	4615      	mov	r5, r2
 80069d2:	461e      	mov	r6, r3
 80069d4:	da0d      	bge.n	80069f2 <__swhatbuf_r+0x2e>
 80069d6:	89a3      	ldrh	r3, [r4, #12]
 80069d8:	f013 0f80 	tst.w	r3, #128	; 0x80
 80069dc:	f04f 0100 	mov.w	r1, #0
 80069e0:	bf0c      	ite	eq
 80069e2:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 80069e6:	2340      	movne	r3, #64	; 0x40
 80069e8:	2000      	movs	r0, #0
 80069ea:	6031      	str	r1, [r6, #0]
 80069ec:	602b      	str	r3, [r5, #0]
 80069ee:	b016      	add	sp, #88	; 0x58
 80069f0:	bd70      	pop	{r4, r5, r6, pc}
 80069f2:	466a      	mov	r2, sp
 80069f4:	f000 f862 	bl	8006abc <_fstat_r>
 80069f8:	2800      	cmp	r0, #0
 80069fa:	dbec      	blt.n	80069d6 <__swhatbuf_r+0x12>
 80069fc:	9901      	ldr	r1, [sp, #4]
 80069fe:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8006a02:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8006a06:	4259      	negs	r1, r3
 8006a08:	4159      	adcs	r1, r3
 8006a0a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006a0e:	e7eb      	b.n	80069e8 <__swhatbuf_r+0x24>

08006a10 <__smakebuf_r>:
 8006a10:	898b      	ldrh	r3, [r1, #12]
 8006a12:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8006a14:	079d      	lsls	r5, r3, #30
 8006a16:	4606      	mov	r6, r0
 8006a18:	460c      	mov	r4, r1
 8006a1a:	d507      	bpl.n	8006a2c <__smakebuf_r+0x1c>
 8006a1c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006a20:	6023      	str	r3, [r4, #0]
 8006a22:	6123      	str	r3, [r4, #16]
 8006a24:	2301      	movs	r3, #1
 8006a26:	6163      	str	r3, [r4, #20]
 8006a28:	b002      	add	sp, #8
 8006a2a:	bd70      	pop	{r4, r5, r6, pc}
 8006a2c:	ab01      	add	r3, sp, #4
 8006a2e:	466a      	mov	r2, sp
 8006a30:	f7ff ffc8 	bl	80069c4 <__swhatbuf_r>
 8006a34:	9900      	ldr	r1, [sp, #0]
 8006a36:	4605      	mov	r5, r0
 8006a38:	4630      	mov	r0, r6
 8006a3a:	f7ff fa4b 	bl	8005ed4 <_malloc_r>
 8006a3e:	b948      	cbnz	r0, 8006a54 <__smakebuf_r+0x44>
 8006a40:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a44:	059a      	lsls	r2, r3, #22
 8006a46:	d4ef      	bmi.n	8006a28 <__smakebuf_r+0x18>
 8006a48:	f023 0303 	bic.w	r3, r3, #3
 8006a4c:	f043 0302 	orr.w	r3, r3, #2
 8006a50:	81a3      	strh	r3, [r4, #12]
 8006a52:	e7e3      	b.n	8006a1c <__smakebuf_r+0xc>
 8006a54:	89a3      	ldrh	r3, [r4, #12]
 8006a56:	6020      	str	r0, [r4, #0]
 8006a58:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006a5c:	81a3      	strh	r3, [r4, #12]
 8006a5e:	9b00      	ldr	r3, [sp, #0]
 8006a60:	6163      	str	r3, [r4, #20]
 8006a62:	9b01      	ldr	r3, [sp, #4]
 8006a64:	6120      	str	r0, [r4, #16]
 8006a66:	b15b      	cbz	r3, 8006a80 <__smakebuf_r+0x70>
 8006a68:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006a6c:	4630      	mov	r0, r6
 8006a6e:	f000 f837 	bl	8006ae0 <_isatty_r>
 8006a72:	b128      	cbz	r0, 8006a80 <__smakebuf_r+0x70>
 8006a74:	89a3      	ldrh	r3, [r4, #12]
 8006a76:	f023 0303 	bic.w	r3, r3, #3
 8006a7a:	f043 0301 	orr.w	r3, r3, #1
 8006a7e:	81a3      	strh	r3, [r4, #12]
 8006a80:	89a3      	ldrh	r3, [r4, #12]
 8006a82:	431d      	orrs	r5, r3
 8006a84:	81a5      	strh	r5, [r4, #12]
 8006a86:	e7cf      	b.n	8006a28 <__smakebuf_r+0x18>

08006a88 <memmove>:
 8006a88:	4288      	cmp	r0, r1
 8006a8a:	b510      	push	{r4, lr}
 8006a8c:	eb01 0402 	add.w	r4, r1, r2
 8006a90:	d902      	bls.n	8006a98 <memmove+0x10>
 8006a92:	4284      	cmp	r4, r0
 8006a94:	4623      	mov	r3, r4
 8006a96:	d807      	bhi.n	8006aa8 <memmove+0x20>
 8006a98:	1e43      	subs	r3, r0, #1
 8006a9a:	42a1      	cmp	r1, r4
 8006a9c:	d008      	beq.n	8006ab0 <memmove+0x28>
 8006a9e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8006aa2:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006aa6:	e7f8      	b.n	8006a9a <memmove+0x12>
 8006aa8:	4402      	add	r2, r0
 8006aaa:	4601      	mov	r1, r0
 8006aac:	428a      	cmp	r2, r1
 8006aae:	d100      	bne.n	8006ab2 <memmove+0x2a>
 8006ab0:	bd10      	pop	{r4, pc}
 8006ab2:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006ab6:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8006aba:	e7f7      	b.n	8006aac <memmove+0x24>

08006abc <_fstat_r>:
 8006abc:	b538      	push	{r3, r4, r5, lr}
 8006abe:	4d07      	ldr	r5, [pc, #28]	; (8006adc <_fstat_r+0x20>)
 8006ac0:	2300      	movs	r3, #0
 8006ac2:	4604      	mov	r4, r0
 8006ac4:	4608      	mov	r0, r1
 8006ac6:	4611      	mov	r1, r2
 8006ac8:	602b      	str	r3, [r5, #0]
 8006aca:	f7fa fefc 	bl	80018c6 <_fstat>
 8006ace:	1c43      	adds	r3, r0, #1
 8006ad0:	d102      	bne.n	8006ad8 <_fstat_r+0x1c>
 8006ad2:	682b      	ldr	r3, [r5, #0]
 8006ad4:	b103      	cbz	r3, 8006ad8 <_fstat_r+0x1c>
 8006ad6:	6023      	str	r3, [r4, #0]
 8006ad8:	bd38      	pop	{r3, r4, r5, pc}
 8006ada:	bf00      	nop
 8006adc:	20000d74 	.word	0x20000d74

08006ae0 <_isatty_r>:
 8006ae0:	b538      	push	{r3, r4, r5, lr}
 8006ae2:	4d06      	ldr	r5, [pc, #24]	; (8006afc <_isatty_r+0x1c>)
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	4604      	mov	r4, r0
 8006ae8:	4608      	mov	r0, r1
 8006aea:	602b      	str	r3, [r5, #0]
 8006aec:	f7fa fefb 	bl	80018e6 <_isatty>
 8006af0:	1c43      	adds	r3, r0, #1
 8006af2:	d102      	bne.n	8006afa <_isatty_r+0x1a>
 8006af4:	682b      	ldr	r3, [r5, #0]
 8006af6:	b103      	cbz	r3, 8006afa <_isatty_r+0x1a>
 8006af8:	6023      	str	r3, [r4, #0]
 8006afa:	bd38      	pop	{r3, r4, r5, pc}
 8006afc:	20000d74 	.word	0x20000d74

08006b00 <_sbrk_r>:
 8006b00:	b538      	push	{r3, r4, r5, lr}
 8006b02:	4d06      	ldr	r5, [pc, #24]	; (8006b1c <_sbrk_r+0x1c>)
 8006b04:	2300      	movs	r3, #0
 8006b06:	4604      	mov	r4, r0
 8006b08:	4608      	mov	r0, r1
 8006b0a:	602b      	str	r3, [r5, #0]
 8006b0c:	f7fa ff04 	bl	8001918 <_sbrk>
 8006b10:	1c43      	adds	r3, r0, #1
 8006b12:	d102      	bne.n	8006b1a <_sbrk_r+0x1a>
 8006b14:	682b      	ldr	r3, [r5, #0]
 8006b16:	b103      	cbz	r3, 8006b1a <_sbrk_r+0x1a>
 8006b18:	6023      	str	r3, [r4, #0]
 8006b1a:	bd38      	pop	{r3, r4, r5, pc}
 8006b1c:	20000d74 	.word	0x20000d74

08006b20 <abort>:
 8006b20:	b508      	push	{r3, lr}
 8006b22:	2006      	movs	r0, #6
 8006b24:	f000 f85a 	bl	8006bdc <raise>
 8006b28:	2001      	movs	r0, #1
 8006b2a:	f7fa fe7d 	bl	8001828 <_exit>

08006b2e <_realloc_r>:
 8006b2e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006b32:	4680      	mov	r8, r0
 8006b34:	4614      	mov	r4, r2
 8006b36:	460e      	mov	r6, r1
 8006b38:	b921      	cbnz	r1, 8006b44 <_realloc_r+0x16>
 8006b3a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006b3e:	4611      	mov	r1, r2
 8006b40:	f7ff b9c8 	b.w	8005ed4 <_malloc_r>
 8006b44:	b92a      	cbnz	r2, 8006b52 <_realloc_r+0x24>
 8006b46:	f7ff f951 	bl	8005dec <_free_r>
 8006b4a:	4625      	mov	r5, r4
 8006b4c:	4628      	mov	r0, r5
 8006b4e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b52:	f000 f85f 	bl	8006c14 <_malloc_usable_size_r>
 8006b56:	4284      	cmp	r4, r0
 8006b58:	4607      	mov	r7, r0
 8006b5a:	d802      	bhi.n	8006b62 <_realloc_r+0x34>
 8006b5c:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8006b60:	d812      	bhi.n	8006b88 <_realloc_r+0x5a>
 8006b62:	4621      	mov	r1, r4
 8006b64:	4640      	mov	r0, r8
 8006b66:	f7ff f9b5 	bl	8005ed4 <_malloc_r>
 8006b6a:	4605      	mov	r5, r0
 8006b6c:	2800      	cmp	r0, #0
 8006b6e:	d0ed      	beq.n	8006b4c <_realloc_r+0x1e>
 8006b70:	42bc      	cmp	r4, r7
 8006b72:	4622      	mov	r2, r4
 8006b74:	4631      	mov	r1, r6
 8006b76:	bf28      	it	cs
 8006b78:	463a      	movcs	r2, r7
 8006b7a:	f7ff f90a 	bl	8005d92 <memcpy>
 8006b7e:	4631      	mov	r1, r6
 8006b80:	4640      	mov	r0, r8
 8006b82:	f7ff f933 	bl	8005dec <_free_r>
 8006b86:	e7e1      	b.n	8006b4c <_realloc_r+0x1e>
 8006b88:	4635      	mov	r5, r6
 8006b8a:	e7df      	b.n	8006b4c <_realloc_r+0x1e>

08006b8c <_raise_r>:
 8006b8c:	291f      	cmp	r1, #31
 8006b8e:	b538      	push	{r3, r4, r5, lr}
 8006b90:	4604      	mov	r4, r0
 8006b92:	460d      	mov	r5, r1
 8006b94:	d904      	bls.n	8006ba0 <_raise_r+0x14>
 8006b96:	2316      	movs	r3, #22
 8006b98:	6003      	str	r3, [r0, #0]
 8006b9a:	f04f 30ff 	mov.w	r0, #4294967295
 8006b9e:	bd38      	pop	{r3, r4, r5, pc}
 8006ba0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006ba2:	b112      	cbz	r2, 8006baa <_raise_r+0x1e>
 8006ba4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006ba8:	b94b      	cbnz	r3, 8006bbe <_raise_r+0x32>
 8006baa:	4620      	mov	r0, r4
 8006bac:	f000 f830 	bl	8006c10 <_getpid_r>
 8006bb0:	462a      	mov	r2, r5
 8006bb2:	4601      	mov	r1, r0
 8006bb4:	4620      	mov	r0, r4
 8006bb6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006bba:	f000 b817 	b.w	8006bec <_kill_r>
 8006bbe:	2b01      	cmp	r3, #1
 8006bc0:	d00a      	beq.n	8006bd8 <_raise_r+0x4c>
 8006bc2:	1c59      	adds	r1, r3, #1
 8006bc4:	d103      	bne.n	8006bce <_raise_r+0x42>
 8006bc6:	2316      	movs	r3, #22
 8006bc8:	6003      	str	r3, [r0, #0]
 8006bca:	2001      	movs	r0, #1
 8006bcc:	e7e7      	b.n	8006b9e <_raise_r+0x12>
 8006bce:	2400      	movs	r4, #0
 8006bd0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006bd4:	4628      	mov	r0, r5
 8006bd6:	4798      	blx	r3
 8006bd8:	2000      	movs	r0, #0
 8006bda:	e7e0      	b.n	8006b9e <_raise_r+0x12>

08006bdc <raise>:
 8006bdc:	4b02      	ldr	r3, [pc, #8]	; (8006be8 <raise+0xc>)
 8006bde:	4601      	mov	r1, r0
 8006be0:	6818      	ldr	r0, [r3, #0]
 8006be2:	f7ff bfd3 	b.w	8006b8c <_raise_r>
 8006be6:	bf00      	nop
 8006be8:	20000098 	.word	0x20000098

08006bec <_kill_r>:
 8006bec:	b538      	push	{r3, r4, r5, lr}
 8006bee:	4d07      	ldr	r5, [pc, #28]	; (8006c0c <_kill_r+0x20>)
 8006bf0:	2300      	movs	r3, #0
 8006bf2:	4604      	mov	r4, r0
 8006bf4:	4608      	mov	r0, r1
 8006bf6:	4611      	mov	r1, r2
 8006bf8:	602b      	str	r3, [r5, #0]
 8006bfa:	f7fa fe05 	bl	8001808 <_kill>
 8006bfe:	1c43      	adds	r3, r0, #1
 8006c00:	d102      	bne.n	8006c08 <_kill_r+0x1c>
 8006c02:	682b      	ldr	r3, [r5, #0]
 8006c04:	b103      	cbz	r3, 8006c08 <_kill_r+0x1c>
 8006c06:	6023      	str	r3, [r4, #0]
 8006c08:	bd38      	pop	{r3, r4, r5, pc}
 8006c0a:	bf00      	nop
 8006c0c:	20000d74 	.word	0x20000d74

08006c10 <_getpid_r>:
 8006c10:	f7fa bdf2 	b.w	80017f8 <_getpid>

08006c14 <_malloc_usable_size_r>:
 8006c14:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006c18:	1f18      	subs	r0, r3, #4
 8006c1a:	2b00      	cmp	r3, #0
 8006c1c:	bfbc      	itt	lt
 8006c1e:	580b      	ldrlt	r3, [r1, r0]
 8006c20:	18c0      	addlt	r0, r0, r3
 8006c22:	4770      	bx	lr

08006c24 <_init>:
 8006c24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c26:	bf00      	nop
 8006c28:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006c2a:	bc08      	pop	{r3}
 8006c2c:	469e      	mov	lr, r3
 8006c2e:	4770      	bx	lr

08006c30 <_fini>:
 8006c30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006c32:	bf00      	nop
 8006c34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006c36:	bc08      	pop	{r3}
 8006c38:	469e      	mov	lr, r3
 8006c3a:	4770      	bx	lr
